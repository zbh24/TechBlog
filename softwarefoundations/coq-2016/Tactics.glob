DIGEST 55e00c44ffd0ebaf76bae29703aa5ff8
FTactics
R53:56 Poly <> <> lib
prf 867:872 <> silly1
R894:896 Coq.Init.Datatypes <> nat ind
R947:949 Coq.Init.Logic <> :type_scope:x_'='_x not
R942:942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R944:944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R946:946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R945:945 Tactics <> o var
R943:943 Tactics <> n var
R950:950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R952:952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R954:954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R953:953 Tactics <> p var
R951:951 Tactics <> m var
R925:927 Coq.Init.Logic <> :type_scope:x_'='_x not
R920:920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R922:922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R924:924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R923:923 Tactics <> o var
R921:921 Tactics <> n var
R928:928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R930:930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R932:932 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R931:931 Tactics <> p var
R929:929 Tactics <> n var
R906:908 Coq.Init.Logic <> :type_scope:x_'='_x not
R905:905 Tactics <> n var
R909:909 Tactics <> m var
prf 1490:1495 <> silly2
R1517:1519 Coq.Init.Datatypes <> nat ind
R1601:1603 Coq.Init.Logic <> :type_scope:x_'='_x not
R1596:1596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1598:1598 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1600:1600 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1599:1599 Tactics <> o var
R1597:1597 Tactics <> n var
R1604:1604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1606:1606 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1608:1608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1607:1607 Tactics <> p var
R1605:1605 Tactics <> m var
R1558:1560 Coq.Init.Datatypes <> nat ind
R1578:1580 Coq.Init.Logic <> :type_scope:x_'='_x not
R1573:1573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1575:1575 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1577:1577 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1576:1576 Tactics <> o var
R1574:1574 Tactics <> q var
R1581:1581 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1583:1583 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1585:1585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1584:1584 Tactics <> p var
R1582:1582 Tactics <> r var
R1565:1567 Coq.Init.Logic <> :type_scope:x_'='_x not
R1564:1564 Tactics <> q var
R1568:1568 Tactics <> r var
R1529:1531 Coq.Init.Logic <> :type_scope:x_'='_x not
R1528:1528 Tactics <> n var
R1532:1532 Tactics <> m var
prf 2275:2281 <> silly2a
R2299:2301 Coq.Init.Datatypes <> nat ind
R2393:2395 Coq.Init.Logic <> :type_scope:x_'='_x not
R2390:2390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2392:2392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2391:2391 Tactics <> n var
R2396:2396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2398:2398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2397:2397 Tactics <> m var
R2348:2350 Coq.Init.Datatypes <> nat ind
R2374:2376 Coq.Init.Logic <> :type_scope:x_'='_x not
R2371:2371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2373:2373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2372:2372 Tactics <> q var
R2377:2377 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2379:2379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2378:2378 Tactics <> r var
R2359:2361 Coq.Init.Logic <> :type_scope:x_'='_x not
R2354:2354 Poly <> ::'('_x_','_x_')' not
R2356:2356 Poly <> ::'('_x_','_x_')' not
R2358:2358 Poly <> ::'('_x_','_x_')' not
R2355:2355 Tactics <> q var
R2357:2357 Tactics <> q var
R2362:2362 Poly <> ::'('_x_','_x_')' not
R2364:2364 Poly <> ::'('_x_','_x_')' not
R2366:2366 Poly <> ::'('_x_','_x_')' not
R2363:2363 Tactics <> r var
R2365:2365 Tactics <> r var
R2315:2317 Coq.Init.Logic <> :type_scope:x_'='_x not
R2310:2310 Poly <> ::'('_x_','_x_')' not
R2312:2312 Poly <> ::'('_x_','_x_')' not
R2314:2314 Poly <> ::'('_x_','_x_')' not
R2311:2311 Tactics <> n var
R2313:2313 Tactics <> n var
R2318:2318 Poly <> ::'('_x_','_x_')' not
R2320:2320 Poly <> ::'('_x_','_x_')' not
R2322:2322 Poly <> ::'('_x_','_x_')' not
R2319:2319 Tactics <> m var
R2321:2321 Tactics <> m var
prf 2581:2588 <> silly_ex
R2682:2684 Coq.Init.Logic <> :type_scope:x_'='_x not
R2676:2679 Basics <> oddb def
R2685:2688 Basics <> true constr
R2660:2662 Coq.Init.Logic <> :type_scope:x_'='_x not
R2653:2657 Basics <> evenb def
R2663:2666 Basics <> true constr
R2636:2638 Coq.Init.Logic <> :type_scope:x_'='_x not
R2626:2629 Basics <> oddb def
R2632:2632 Coq.Init.Datatypes <> S constr
R2634:2634 Tactics <> n var
R2639:2642 Basics <> true constr
R2615:2617 Coq.Init.Logic <> :type_scope:x_'='_x not
R2608:2612 Basics <> evenb def
R2614:2614 Tactics <> n var
R2618:2621 Basics <> true constr
prf 2961:2975 <> silly3_firsttry
R2991:2993 Coq.Init.Datatypes <> nat ind
R3049:3051 Coq.Init.Logic <> :type_scope:x_'='_x not
R3030:3036 Basics <> beq_nat def
R3039:3039 Coq.Init.Datatypes <> S constr
R3042:3042 Coq.Init.Datatypes <> S constr
R3044:3044 Tactics <> n var
R3052:3055 Basics <> true constr
R3006:3008 Coq.Init.Logic <> :type_scope:x_'='_x not
R3002:3005 Basics <> true constr
R3009:3015 Basics <> beq_nat def
R3017:3017 Tactics <> n var
prf 3275:3280 <> silly3
R3296:3298 Coq.Init.Datatypes <> nat ind
R3354:3356 Coq.Init.Logic <> :type_scope:x_'='_x not
R3335:3341 Basics <> beq_nat def
R3344:3344 Coq.Init.Datatypes <> S constr
R3347:3347 Coq.Init.Datatypes <> S constr
R3349:3349 Tactics <> n var
R3357:3360 Basics <> true constr
R3311:3313 Coq.Init.Logic <> :type_scope:x_'='_x not
R3307:3310 Basics <> true constr
R3314:3320 Basics <> beq_nat def
R3322:3322 Tactics <> n var
prf 3745:3757 <> rev_exercise1
R3776:3779 Poly <> list ind
R3781:3783 Coq.Init.Datatypes <> nat ind
R3813:3815 Coq.Init.Logic <> :type_scope:x_'='_x not
R3811:3812 Tactics <> l' var
R3816:3818 Poly <> rev def
R3820:3820 Tactics <> l var
R3793:3795 Coq.Init.Logic <> :type_scope:x_'='_x not
R3792:3792 Tactics <> l var
R3796:3798 Poly <> rev def
R3800:3801 Tactics <> l' var
def 4320:4335 <> trans_eq_example
R4361:4363 Coq.Init.Datatypes <> nat ind
R4421:4423 Coq.Init.Logic <> :type_scope:x_'='_x not
R4416:4416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4418:4418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4420:4420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4419:4419 Tactics <> b var
R4417:4417 Tactics <> a var
R4424:4424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4426:4426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4428:4428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4427:4427 Tactics <> f var
R4425:4425 Tactics <> e var
R4399:4401 Coq.Init.Logic <> :type_scope:x_'='_x not
R4394:4394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4396:4396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4398:4398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4397:4397 Tactics <> d var
R4395:4395 Tactics <> c var
R4402:4402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4404:4404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4406:4406 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4405:4405 Tactics <> f var
R4403:4403 Tactics <> e var
R4377:4379 Coq.Init.Logic <> :type_scope:x_'='_x not
R4372:4372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4374:4374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4376:4376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4375:4375 Tactics <> b var
R4373:4373 Tactics <> a var
R4380:4380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4382:4382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4384:4384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4383:4383 Tactics <> d var
R4381:4381 Tactics <> c var
prf 4685:4692 <> trans_eq
R4721:4721 Tactics <> X var
R4746:4748 Coq.Init.Logic <> :type_scope:x_'='_x not
R4745:4745 Tactics <> n var
R4749:4749 Tactics <> o var
R4737:4739 Coq.Init.Logic <> :type_scope:x_'='_x not
R4736:4736 Tactics <> m var
R4740:4740 Tactics <> o var
R4728:4730 Coq.Init.Logic <> :type_scope:x_'='_x not
R4727:4727 Tactics <> n var
R4731:4731 Tactics <> m var
def 5004:5020 <> trans_eq_example'
R5046:5048 Coq.Init.Datatypes <> nat ind
R5106:5108 Coq.Init.Logic <> :type_scope:x_'='_x not
R5101:5101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5103:5103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5105:5105 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5104:5104 Tactics <> b var
R5102:5102 Tactics <> a var
R5109:5109 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5111:5111 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5113:5113 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5112:5112 Tactics <> f var
R5110:5110 Tactics <> e var
R5084:5086 Coq.Init.Logic <> :type_scope:x_'='_x not
R5079:5079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5081:5081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5083:5083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5082:5082 Tactics <> d var
R5080:5080 Tactics <> c var
R5087:5087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5089:5089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5091:5091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5090:5090 Tactics <> f var
R5088:5088 Tactics <> e var
R5062:5064 Coq.Init.Logic <> :type_scope:x_'='_x not
R5057:5057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5059:5059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5061:5061 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5060:5060 Tactics <> b var
R5058:5058 Tactics <> a var
R5065:5065 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5067:5067 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5069:5069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5068:5068 Tactics <> d var
R5066:5066 Tactics <> c var
R5584:5584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5586:5586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5588:5588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5566:5573 Tactics <> trans_eq thm
R5584:5584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5586:5586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5588:5588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5566:5573 Tactics <> trans_eq thm
def 5918:5934 <> trans_eq_exercise
R5956:5958 Coq.Init.Datatypes <> nat ind
R6012:6012 Coq.Init.Logic <> :type_scope:x_'='_x not
R6018:6022 Coq.Init.Logic <> :type_scope:x_'='_x not
R6033:6033 Coq.Init.Logic <> :type_scope:x_'='_x not
R6014:6016 Basics <> :nat_scope:x_'+'_x not
R6013:6013 Tactics <> n var
R6017:6017 Tactics <> p var
R6023:6030 Basics <> minustwo def
R6032:6032 Tactics <> o var
R5992:5992 Coq.Init.Logic <> :type_scope:x_'='_x not
R5998:6001 Coq.Init.Logic <> :type_scope:x_'='_x not
R5994:5996 Basics <> :nat_scope:x_'+'_x not
R5993:5993 Tactics <> n var
R5997:5997 Tactics <> p var
R6002:6002 Tactics <> m var
R5968:5971 Coq.Init.Logic <> :type_scope:x_'='_x not
R5982:5982 Coq.Init.Logic <> :type_scope:x_'='_x not
R5967:5967 Tactics <> m var
R5972:5979 Basics <> minustwo def
R5981:5981 Tactics <> o var
prf 7546:7556 <> S_injective
R7574:7576 Coq.Init.Datatypes <> nat ind
R7598:7600 Coq.Init.Logic <> :type_scope:x_'='_x not
R7597:7597 Tactics <> n var
R7601:7601 Tactics <> m var
R7585:7587 Coq.Init.Logic <> :type_scope:x_'='_x not
R7582:7582 Coq.Init.Datatypes <> S constr
R7584:7584 Tactics <> n var
R7588:7588 Coq.Init.Datatypes <> S constr
R7590:7590 Tactics <> m var
prf 8088:8100 <> inversion_ex1
R8120:8122 Coq.Init.Datatypes <> nat ind
R8152:8154 Coq.Init.Logic <> :type_scope:x_'='_x not
R8149:8149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8151:8151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8150:8150 Tactics <> n var
R8155:8155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8157:8157 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8156:8156 Tactics <> m var
R8134:8136 Coq.Init.Logic <> :type_scope:x_'='_x not
R8128:8128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8130:8131 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8133:8133 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8132:8132 Tactics <> m var
R8129:8129 Tactics <> n var
R8137:8137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8139:8140 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8142:8142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8141:8141 Tactics <> o var
R8138:8138 Tactics <> o var
prf 8326:8338 <> inversion_ex2
R8356:8358 Coq.Init.Datatypes <> nat ind
R8380:8382 Coq.Init.Logic <> :type_scope:x_'='_x not
R8379:8379 Tactics <> n var
R8383:8383 Tactics <> m var
R8367:8369 Coq.Init.Logic <> :type_scope:x_'='_x not
R8364:8364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8366:8366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8365:8365 Tactics <> n var
R8370:8370 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8372:8372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8371:8371 Tactics <> m var
def 8505:8517 <> inversion_ex3
R8548:8548 Tactics <> X var
R8558:8561 Poly <> list ind
R8563:8563 Tactics <> X var
R8617:8619 Coq.Init.Logic <> :type_scope:x_'='_x not
R8616:8616 Tactics <> x var
R8620:8620 Tactics <> y var
R8601:8603 Coq.Init.Logic <> :type_scope:x_'='_x not
R8596:8599 Poly <> ::x_'::'_x not
R8595:8595 Tactics <> y var
R8600:8600 Tactics <> l var
R8605:8608 Poly <> ::x_'::'_x not
R8604:8604 Tactics <> x var
R8609:8609 Tactics <> j var
R8580:8582 Coq.Init.Logic <> :type_scope:x_'='_x not
R8570:8573 Poly <> ::x_'::'_x not
R8569:8569 Tactics <> x var
R8575:8578 Poly <> ::x_'::'_x not
R8574:8574 Tactics <> y var
R8579:8579 Tactics <> l var
R8584:8587 Poly <> ::x_'::'_x not
R8583:8583 Tactics <> z var
R8588:8588 Tactics <> j var
prf 8943:8949 <> f_equal
R8982:8982 Tactics <> B var
R8977:8977 Tactics <> A var
R8991:8991 Tactics <> A var
R9009:9011 Coq.Init.Logic <> :type_scope:x_'='_x not
R9006:9006 Tactics <> f var
R9008:9008 Tactics <> x var
R9012:9012 Tactics <> f var
R9014:9014 Tactics <> y var
R8998:9000 Coq.Init.Logic <> :type_scope:x_'='_x not
R8997:8997 Tactics <> x var
R9001:9001 Tactics <> y var
prf 9306:9316 <> beq_nat_0_l
R9356:9358 Coq.Init.Logic <> :type_scope:x_'='_x not
R9355:9355 Tactics <> n var
R9344:9346 Coq.Init.Logic <> :type_scope:x_'='_x not
R9333:9339 Basics <> beq_nat def
R9343:9343 Tactics <> n var
R9347:9350 Basics <> true constr
prf 10278:10290 <> inversion_ex4
R10306:10308 Coq.Init.Datatypes <> nat ind
R10332:10334 Coq.Init.Logic <> :type_scope:x_'='_x not
R10328:10330 Basics <> :nat_scope:x_'+'_x not
R10317:10319 Coq.Init.Logic <> :type_scope:x_'='_x not
R10314:10314 Coq.Init.Datatypes <> S constr
R10316:10316 Tactics <> n var
R10320:10320 Coq.Init.Datatypes <> O constr
prf 10396:10408 <> inversion_ex5
R10426:10428 Coq.Init.Datatypes <> nat ind
R10455:10457 Coq.Init.Logic <> :type_scope:x_'='_x not
R10452:10452 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10454:10454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10453:10453 Tactics <> n var
R10458:10458 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10460:10460 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10459:10459 Tactics <> m var
R10439:10441 Coq.Init.Logic <> :type_scope:x_'='_x not
R10434:10438 Basics <> false constr
R10442:10445 Basics <> true constr
def 10939:10951 <> inversion_ex6
R11008:11008 Tactics <> X var
R11018:11021 Poly <> list ind
R11023:11023 Tactics <> X var
R11073:11075 Coq.Init.Logic <> :type_scope:x_'='_x not
R11072:11072 Tactics <> x var
R11076:11076 Tactics <> z var
R11057:11059 Coq.Init.Logic <> :type_scope:x_'='_x not
R11052:11055 Poly <> ::x_'::'_x not
R11051:11051 Tactics <> y var
R11056:11056 Tactics <> l var
R11061:11064 Poly <> ::x_'::'_x not
R11060:11060 Tactics <> z var
R11065:11065 Tactics <> j var
R11040:11042 Coq.Init.Logic <> :type_scope:x_'='_x not
R11030:11033 Poly <> ::x_'::'_x not
R11029:11029 Tactics <> x var
R11035:11038 Poly <> ::x_'::'_x not
R11034:11034 Tactics <> y var
R11039:11039 Tactics <> l var
R11043:11044 Poly <> ::'['_']' not
prf 12353:12357 <> S_inj
R12375:12377 Coq.Init.Datatypes <> nat ind
R12385:12388 Basics <> bool ind
R12441:12443 Coq.Init.Logic <> :type_scope:x_'='_x not
R12430:12436 Basics <> beq_nat def
R12440:12440 Tactics <> m var
R12438:12438 Tactics <> n var
R12444:12444 Tactics <> b var
R12416:12418 Coq.Init.Logic <> :type_scope:x_'='_x not
R12397:12403 Basics <> beq_nat def
R12412:12412 Coq.Init.Datatypes <> S constr
R12414:12414 Tactics <> m var
R12406:12406 Coq.Init.Datatypes <> S constr
R12408:12408 Tactics <> n var
R12419:12419 Tactics <> b var
prf 13282:13288 <> silly3'
R13304:13306 Coq.Init.Datatypes <> nat ind
R13397:13399 Coq.Init.Logic <> :type_scope:x_'='_x not
R13393:13396 Basics <> true constr
R13400:13406 Basics <> beq_nat def
R13409:13409 Coq.Init.Datatypes <> S constr
R13412:13412 Coq.Init.Datatypes <> S constr
R13414:13414 Tactics <> n var
R13372:13374 Coq.Init.Logic <> :type_scope:x_'='_x not
R13368:13371 Basics <> true constr
R13375:13381 Basics <> beq_nat def
R13383:13383 Tactics <> n var
R13354:13356 Coq.Init.Logic <> :type_scope:x_'='_x not
R13335:13341 Basics <> beq_nat def
R13344:13344 Coq.Init.Datatypes <> S constr
R13347:13347 Coq.Init.Datatypes <> S constr
R13349:13349 Tactics <> n var
R13357:13360 Basics <> true constr
R13324:13326 Coq.Init.Logic <> :type_scope:x_'='_x not
R13313:13319 Basics <> beq_nat def
R13321:13321 Tactics <> n var
R13327:13330 Basics <> true constr
prf 14296:14313 <> plus_n_n_injective
R14357:14359 Coq.Init.Logic <> :type_scope:x_'='_x not
R14356:14356 Tactics <> n var
R14360:14360 Tactics <> m var
R14339:14341 Coq.Init.Logic <> :type_scope:x_'='_x not
R14335:14337 Basics <> :nat_scope:x_'+'_x not
R14334:14334 Tactics <> n var
R14338:14338 Tactics <> n var
R14343:14345 Basics <> :nat_scope:x_'+'_x not
R14342:14342 Tactics <> m var
R14346:14346 Tactics <> m var
prf 15334:15356 <> double_injective_FAILED
R15406:15408 Coq.Init.Logic <> :type_scope:x_'='_x not
R15405:15405 Tactics <> n var
R15409:15409 Tactics <> m var
R15385:15387 Coq.Init.Logic <> :type_scope:x_'='_x not
R15377:15382 Induction <> double def
R15384:15384 Tactics <> n var
R15388:15393 Induction <> double def
R15395:15395 Tactics <> m var
R15690:15696 Tactics <> f_equal thm
R15690:15696 Tactics <> f_equal thm
prf 17942:17957 <> double_injective
R18007:18009 Coq.Init.Logic <> :type_scope:x_'='_x not
R18006:18006 Tactics <> n var
R18010:18010 Tactics <> m var
R17986:17988 Coq.Init.Logic <> :type_scope:x_'='_x not
R17978:17983 Induction <> double def
R17985:17985 Tactics <> n var
R17989:17994 Induction <> double def
R17996:17996 Tactics <> m var
R18883:18889 Tactics <> f_equal thm
R18883:18889 Tactics <> f_equal thm
prf 19784:19795 <> beq_nat_true
R19838:19840 Coq.Init.Logic <> :type_scope:x_'='_x not
R19837:19837 Tactics <> n var
R19841:19841 Tactics <> m var
R19826:19828 Coq.Init.Logic <> :type_scope:x_'='_x not
R19815:19821 Basics <> beq_nat def
R19825:19825 Tactics <> m var
R19823:19823 Tactics <> n var
R19829:19832 Basics <> true constr
prf 20419:20447 <> double_injective_take2_FAILED
R20497:20499 Coq.Init.Logic <> :type_scope:x_'='_x not
R20496:20496 Tactics <> n var
R20500:20500 Tactics <> m var
R20476:20478 Coq.Init.Logic <> :type_scope:x_'='_x not
R20468:20473 Induction <> double def
R20475:20475 Tactics <> n var
R20479:20484 Induction <> double def
R20486:20486 Tactics <> m var
R20781:20787 Tactics <> f_equal thm
R20781:20787 Tactics <> f_equal thm
prf 21723:21744 <> double_injective_take2
R21794:21796 Coq.Init.Logic <> :type_scope:x_'='_x not
R21793:21793 Tactics <> n var
R21797:21797 Tactics <> m var
R21773:21775 Coq.Init.Logic <> :type_scope:x_'='_x not
R21765:21770 Induction <> double def
R21772:21772 Tactics <> n var
R21776:21781 Induction <> double def
R21783:21783 Tactics <> m var
R22260:22266 Tactics <> f_equal thm
R22260:22266 Tactics <> f_equal thm
prf 24470:24480 <> beq_id_true
R24520:24522 Coq.Init.Logic <> :type_scope:x_'='_x not
R24519:24519 Tactics <> x var
R24523:24523 Tactics <> y var
R24508:24510 Coq.Init.Logic <> :type_scope:x_'='_x not
R24498:24503 Lists <> beq_id def
R24507:24507 Tactics <> y var
R24505:24505 Tactics <> x var
R24511:24514 Basics <> true constr
R24584:24586 Coq.Init.Logic <> :type_scope:x_'='_x not
R24584:24586 Coq.Init.Logic <> :type_scope:x_'='_x not
R24599:24610 Tactics <> beq_nat_true prfax
R24599:24610 Tactics <> beq_nat_true prfax
prf 24768:24787 <> nth_error_after_last
R24802:24804 Coq.Init.Datatypes <> nat ind
R24823:24826 Poly <> list ind
R24828:24828 Tactics <> X var
R24871:24873 Coq.Init.Logic <> :type_scope:x_'='_x not
R24858:24866 Poly <> nth_error def
R24870:24870 Tactics <> n var
R24868:24868 Tactics <> l var
R24874:24877 Poly <> None constr
R24845:24847 Coq.Init.Logic <> :type_scope:x_'='_x not
R24837:24842 Poly <> length def
R24844:24844 Tactics <> l var
R24848:24848 Tactics <> n var
prf 25082:25096 <> app_length_cons
R25127:25130 Poly <> list ind
R25132:25132 Tactics <> X var
R25174:25174 Tactics <> X var
R25182:25184 Coq.Init.Datatypes <> nat ind
R25251:25253 Coq.Init.Logic <> :type_scope:x_'='_x not
R25230:25230 Coq.Init.Datatypes <> S constr
R25233:25238 Poly <> length def
R25243:25246 Poly <> ::x_'++'_x not
R25241:25242 Tactics <> l1 var
R25247:25248 Tactics <> l2 var
R25254:25254 Tactics <> n var
R25217:25219 Coq.Init.Logic <> :type_scope:x_'='_x not
R25193:25198 Poly <> length def
R25203:25207 Poly <> ::x_'++'_x not
R25215:25215 Poly <> ::x_'++'_x not
R25201:25202 Tactics <> l1 var
R25209:25212 Poly <> ::x_'::'_x not
R25208:25208 Tactics <> x var
R25213:25214 Tactics <> l2 var
R25220:25220 Tactics <> n var
prf 25455:25470 <> app_length_twice
R25493:25495 Coq.Init.Datatypes <> nat ind
R25501:25504 Poly <> list ind
R25506:25506 Tactics <> X var
R25551:25553 Coq.Init.Logic <> :type_scope:x_'='_x not
R25536:25541 Poly <> length def
R25545:25548 Poly <> ::x_'++'_x not
R25544:25544 Tactics <> l var
R25549:25549 Tactics <> l var
R25555:25557 Basics <> :nat_scope:x_'+'_x not
R25554:25554 Tactics <> n var
R25558:25558 Tactics <> n var
R25523:25525 Coq.Init.Logic <> :type_scope:x_'='_x not
R25515:25520 Poly <> length def
R25522:25522 Tactics <> l var
R25526:25526 Tactics <> n var
prf 25749:25764 <> double_induction
R25786:25788 Coq.Init.Datatypes <> nat ind
R25779:25781 Coq.Init.Datatypes <> nat ind
R25939:25939 Tactics <> P var
R25943:25943 Tactics <> n var
R25941:25941 Tactics <> m var
R25907:25907 Tactics <> P var
R25916:25916 Coq.Init.Datatypes <> S constr
R25918:25918 Tactics <> n var
R25910:25910 Coq.Init.Datatypes <> S constr
R25912:25912 Tactics <> m var
R25898:25898 Tactics <> P var
R25902:25902 Tactics <> n var
R25900:25900 Tactics <> m var
R25869:25869 Tactics <> P var
R25874:25874 Coq.Init.Datatypes <> S constr
R25876:25876 Tactics <> n var
R25860:25860 Tactics <> P var
R25864:25864 Tactics <> n var
R25833:25833 Tactics <> P var
R25836:25836 Coq.Init.Datatypes <> S constr
R25838:25838 Tactics <> m var
R25824:25824 Tactics <> P var
R25826:25826 Tactics <> m var
R25802:25802 Tactics <> P var
def 26256:26261 <> square
R26269:26271 Basics <> :nat_scope:x_'*'_x not
R26268:26268 Tactics <> n var
R26272:26272 Tactics <> n var
prf 26339:26349 <> square_mult
R26379:26381 Coq.Init.Logic <> :type_scope:x_'='_x not
R26365:26370 Tactics <> square def
R26374:26376 Basics <> :nat_scope:x_'*'_x not
R26373:26373 Tactics <> n var
R26377:26377 Tactics <> m var
R26390:26392 Basics <> :nat_scope:x_'*'_x not
R26382:26387 Tactics <> square def
R26389:26389 Tactics <> n var
R26393:26398 Tactics <> square def
R26400:26400 Tactics <> m var
R26717:26722 Tactics <> square def
R27049:27058 Induction <> mult_assoc prfax
R27049:27058 Induction <> mult_assoc prfax
R27084:27086 Coq.Init.Logic <> :type_scope:x_'='_x not
R27080:27082 Basics <> :nat_scope:x_'*'_x not
R27076:27078 Basics <> :nat_scope:x_'*'_x not
R27092:27094 Basics <> :nat_scope:x_'*'_x not
R27088:27090 Basics <> :nat_scope:x_'*'_x not
R27084:27086 Coq.Init.Logic <> :type_scope:x_'='_x not
R27080:27082 Basics <> :nat_scope:x_'*'_x not
R27076:27078 Basics <> :nat_scope:x_'*'_x not
R27092:27094 Basics <> :nat_scope:x_'*'_x not
R27088:27090 Basics <> :nat_scope:x_'*'_x not
R27111:27119 Induction <> mult_comm prfax
R27111:27119 Induction <> mult_comm prfax
R27128:27137 Induction <> mult_assoc prfax
R27128:27137 Induction <> mult_assoc prfax
R27163:27172 Induction <> mult_assoc prfax
R27163:27172 Induction <> mult_assoc prfax
def 27565:27567 <> foo
R27573:27575 Coq.Init.Datatypes <> nat ind
prf 27788:27799 <> silly_fact_1
R27822:27824 Coq.Init.Logic <> :type_scope:x_'='_x not
R27818:27820 Basics <> :nat_scope:x_'+'_x not
R27813:27815 Tactics <> foo def
R27817:27817 Tactics <> m var
R27836:27838 Basics <> :nat_scope:x_'+'_x not
R27825:27827 Tactics <> foo def
R27831:27833 Basics <> :nat_scope:x_'+'_x not
R27830:27830 Tactics <> m var
def 28069:28071 <> bar
R28086:28086 Tactics <> x var
R28097:28097 Coq.Init.Datatypes <> O constr
R28108:28108 Coq.Init.Datatypes <> S constr
prf 28182:28200 <> silly_fact_2_FAILED
R28223:28225 Coq.Init.Logic <> :type_scope:x_'='_x not
R28219:28221 Basics <> :nat_scope:x_'+'_x not
R28214:28216 Tactics <> bar def
R28218:28218 Tactics <> m var
R28237:28239 Basics <> :nat_scope:x_'+'_x not
R28226:28228 Tactics <> bar def
R28232:28234 Basics <> :nat_scope:x_'+'_x not
R28231:28231 Tactics <> m var
prf 29228:29239 <> silly_fact_2
R29262:29264 Coq.Init.Logic <> :type_scope:x_'='_x not
R29258:29260 Basics <> :nat_scope:x_'+'_x not
R29253:29255 Tactics <> bar def
R29257:29257 Tactics <> m var
R29276:29278 Basics <> :nat_scope:x_'+'_x not
R29265:29267 Tactics <> bar def
R29271:29273 Basics <> :nat_scope:x_'+'_x not
R29270:29270 Tactics <> m var
prf 29629:29641 <> silly_fact_2'
R29664:29666 Coq.Init.Logic <> :type_scope:x_'='_x not
R29660:29662 Basics <> :nat_scope:x_'+'_x not
R29655:29657 Tactics <> bar def
R29659:29659 Tactics <> m var
R29678:29680 Basics <> :nat_scope:x_'+'_x not
R29667:29669 Tactics <> bar def
R29673:29675 Basics <> :nat_scope:x_'+'_x not
R29672:29672 Tactics <> m var
R29712:29714 Tactics <> bar def
def 30347:30354 <> sillyfun
R30361:30363 Coq.Init.Datatypes <> nat ind
R30368:30371 Basics <> bool ind
R30381:30387 Basics <> beq_nat def
R30389:30389 Tactics <> n var
R30414:30420 Basics <> beq_nat def
R30422:30422 Tactics <> n var
R30444:30448 Basics <> false constr
R30431:30435 Basics <> false constr
R30398:30402 Basics <> false constr
prf 30460:30473 <> sillyfun_false
R30489:30491 Coq.Init.Datatypes <> nat ind
R30507:30509 Coq.Init.Logic <> :type_scope:x_'='_x not
R30497:30504 Tactics <> sillyfun def
R30506:30506 Tactics <> n var
R30510:30514 Basics <> false constr
R30543:30550 Tactics <> sillyfun def
R30565:30571 Basics <> beq_nat def
R30565:30571 Basics <> beq_nat def
R30665:30671 Basics <> beq_nat def
R30665:30671 Basics <> beq_nat def
prf 31470:31482 <> combine_split
R31502:31505 Poly <> list ind
R31509:31511 Poly <> :type_scope:x_'*'_x not
R31508:31508 Tactics <> X var
R31512:31512 Tactics <> Y var
R31562:31564 Coq.Init.Logic <> :type_scope:x_'='_x not
R31549:31555 Poly <> combine def
R31560:31561 Tactics <> l2 var
R31557:31558 Tactics <> l1 var
R31565:31565 Tactics <> l var
R31532:31534 Coq.Init.Logic <> :type_scope:x_'='_x not
R31525:31529 Poly <> split def
R31531:31531 Tactics <> l var
R31535:31535 Poly <> ::'('_x_','_x_')' not
R31538:31539 Poly <> ::'('_x_','_x_')' not
R31542:31542 Poly <> ::'('_x_','_x_')' not
R31536:31537 Tactics <> l1 var
R31540:31541 Tactics <> l2 var
def 31869:31877 <> sillyfun1
R31884:31886 Coq.Init.Datatypes <> nat ind
R31891:31894 Basics <> bool ind
R31904:31910 Basics <> beq_nat def
R31912:31912 Tactics <> n var
R31936:31942 Basics <> beq_nat def
R31944:31944 Tactics <> n var
R31965:31969 Basics <> false constr
R31953:31956 Basics <> true constr
R31921:31924 Basics <> true constr
prf 32228:32247 <> sillyfun1_odd_FAILED
R32263:32265 Coq.Init.Datatypes <> nat ind
R32307:32309 Coq.Init.Logic <> :type_scope:x_'='_x not
R32301:32304 Basics <> oddb def
R32306:32306 Tactics <> n var
R32310:32313 Basics <> true constr
R32285:32287 Coq.Init.Logic <> :type_scope:x_'='_x not
R32274:32282 Tactics <> sillyfun1 def
R32284:32284 Tactics <> n var
R32288:32291 Basics <> true constr
R32345:32353 Tactics <> sillyfun1 def
R32374:32380 Basics <> beq_nat def
R32374:32380 Basics <> beq_nat def
prf 33229:33241 <> sillyfun1_odd
R33257:33259 Coq.Init.Datatypes <> nat ind
R33301:33303 Coq.Init.Logic <> :type_scope:x_'='_x not
R33295:33298 Basics <> oddb def
R33300:33300 Tactics <> n var
R33304:33307 Basics <> true constr
R33279:33281 Coq.Init.Logic <> :type_scope:x_'='_x not
R33268:33276 Tactics <> sillyfun1 def
R33278:33278 Tactics <> n var
R33282:33285 Basics <> true constr
R33339:33347 Tactics <> sillyfun1 def
R33368:33374 Basics <> beq_nat def
R33368:33374 Basics <> beq_nat def
R33623:33634 Tactics <> beq_nat_true prfax
R33623:33634 Tactics <> beq_nat_true prfax
R33921:33927 Basics <> beq_nat def
R33921:33927 Basics <> beq_nat def
R33987:33998 Tactics <> beq_nat_true prfax
R33987:33998 Tactics <> beq_nat_true prfax
prf 34162:34183 <> bool_fn_applied_thrice
R34209:34212 Basics <> bool ind
R34201:34204 Basics <> bool ind
R34220:34223 Basics <> bool ind
R34240:34242 Coq.Init.Logic <> :type_scope:x_'='_x not
R34229:34229 Tactics <> f var
R34232:34232 Tactics <> f var
R34235:34235 Tactics <> f var
R34237:34237 Tactics <> b var
R34243:34243 Tactics <> f var
R34245:34245 Tactics <> b var
prf 36525:36535 <> beq_nat_sym
R36553:36555 Coq.Init.Datatypes <> nat ind
R36572:36574 Coq.Init.Logic <> :type_scope:x_'='_x not
R36561:36567 Basics <> beq_nat def
R36571:36571 Tactics <> m var
R36569:36569 Tactics <> n var
R36575:36581 Basics <> beq_nat def
R36585:36585 Tactics <> n var
R36583:36583 Tactics <> m var
prf 36973:36985 <> beq_nat_trans
R37064:37066 Coq.Init.Logic <> :type_scope:x_'='_x not
R37053:37059 Basics <> beq_nat def
R37063:37063 Tactics <> p var
R37061:37061 Tactics <> n var
R37067:37070 Basics <> true constr
R37040:37042 Coq.Init.Logic <> :type_scope:x_'='_x not
R37029:37035 Basics <> beq_nat def
R37039:37039 Tactics <> p var
R37037:37037 Tactics <> m var
R37043:37046 Basics <> true constr
R37016:37018 Coq.Init.Logic <> :type_scope:x_'='_x not
R37005:37011 Basics <> beq_nat def
R37015:37015 Tactics <> m var
R37013:37013 Tactics <> n var
R37019:37022 Basics <> true constr
def 37817:37839 <> split_combine_statement
R37870:37874 Basics <> admit prfax
prf 37886:37898 <> split_combine
R37902:37924 Tactics <> split_combine_statement def
prf 38144:38158 <> filter_exercise
R38193:38196 Basics <> bool ind
R38188:38188 Tactics <> X var
R38233:38233 Tactics <> X var
R38244:38247 Poly <> list ind
R38249:38249 Tactics <> X var
R38296:38298 Coq.Init.Logic <> :type_scope:x_'='_x not
R38290:38293 Tactics <> test var
R38295:38295 Tactics <> x var
R38299:38302 Basics <> true constr
R38271:38273 Coq.Init.Logic <> :type_scope:x_'='_x not
R38258:38263 Poly <> filter def
R38270:38270 Tactics <> l var
R38265:38268 Tactics <> test var
R38275:38278 Poly <> ::x_'::'_x not
R38274:38274 Tactics <> x var
R38279:38280 Tactics <> lf var
