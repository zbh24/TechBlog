#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>
#include <iostream>
#include <string>
#include <set>
#include <vector>
#include <algorithm>

using namespace std;
int input[100][100];
int dp[100][100];
int n,m;


//dp[i][j]有两种计算方式：1.对于每一行，从左向右计算，然后从上到下逐行处理；
//2. 对于每一列，从上到下计算，然后从左向右逐列处理。 
//这样做的目的是为了在计算dp[i][j]时，dp[i-1][j]和dp[i][j-1]都已经计算出来了。
int maze() {
  int i,j;

  dp[0][0] = input[0][0];
  for(i = 1; i < m;i++)
    dp[0][i] = input[0][i]+dp[0][i-1];

  for(i = 1; i < n;i++)
    dp[i][0] = input[i][0] + dp[0][i-1];

  for(i = 1;i < m;i++)
    for(j = 1;j < n;j++)
      dp[i][j] = max(dp[i-1][j],dp[i][j-1]) + input[i][j];

}

int main() {
  int temp;

  // n row,m column
  while(cin >> n >> m) {
    for(int i = 0; i < n; i++) {
      for(int j = 0;j < m;j++)
	cin>>input[i][j];
    }
    maze();
    cout<<dp[n-1][m-1]<<endl;
  } 
}
