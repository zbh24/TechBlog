DIGEST 74efe114dc96131f57538f272a1324b3
FTactics
R53:56 Poly <> <> lib
prf 867:872 <> silly1
R894:896 Coq.Init.Datatypes <> nat ind
R947:949 Coq.Init.Logic <> :type_scope:x_'='_x not
R942:942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R944:944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R946:946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R945:945 Tactics <> o var
R943:943 Tactics <> n var
R950:950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R952:952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R954:954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R953:953 Tactics <> p var
R951:951 Tactics <> m var
R925:927 Coq.Init.Logic <> :type_scope:x_'='_x not
R920:920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R922:922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R924:924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R923:923 Tactics <> o var
R921:921 Tactics <> n var
R928:928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R930:930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R932:932 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R931:931 Tactics <> p var
R929:929 Tactics <> n var
R906:908 Coq.Init.Logic <> :type_scope:x_'='_x not
R905:905 Tactics <> n var
R909:909 Tactics <> m var
prf 1490:1495 <> silly2
R1517:1519 Coq.Init.Datatypes <> nat ind
R1601:1603 Coq.Init.Logic <> :type_scope:x_'='_x not
R1596:1596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1598:1598 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1600:1600 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1599:1599 Tactics <> o var
R1597:1597 Tactics <> n var
R1604:1604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1606:1606 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1608:1608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1607:1607 Tactics <> p var
R1605:1605 Tactics <> m var
R1558:1560 Coq.Init.Datatypes <> nat ind
R1578:1580 Coq.Init.Logic <> :type_scope:x_'='_x not
R1573:1573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1575:1575 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1577:1577 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1576:1576 Tactics <> o var
R1574:1574 Tactics <> q var
R1581:1581 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1583:1583 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1585:1585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1584:1584 Tactics <> p var
R1582:1582 Tactics <> r var
R1565:1567 Coq.Init.Logic <> :type_scope:x_'='_x not
R1564:1564 Tactics <> q var
R1568:1568 Tactics <> r var
R1529:1531 Coq.Init.Logic <> :type_scope:x_'='_x not
R1528:1528 Tactics <> n var
R1532:1532 Tactics <> m var
prf 2275:2281 <> silly2a
R2299:2301 Coq.Init.Datatypes <> nat ind
R2393:2395 Coq.Init.Logic <> :type_scope:x_'='_x not
R2390:2390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2392:2392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2391:2391 Tactics <> n var
R2396:2396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2398:2398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2397:2397 Tactics <> m var
R2348:2350 Coq.Init.Datatypes <> nat ind
R2374:2376 Coq.Init.Logic <> :type_scope:x_'='_x not
R2371:2371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2373:2373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2372:2372 Tactics <> q var
R2377:2377 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2379:2379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2378:2378 Tactics <> r var
R2359:2361 Coq.Init.Logic <> :type_scope:x_'='_x not
R2354:2354 Poly <> ::'('_x_','_x_')' not
R2356:2356 Poly <> ::'('_x_','_x_')' not
R2358:2358 Poly <> ::'('_x_','_x_')' not
R2355:2355 Tactics <> q var
R2357:2357 Tactics <> q var
R2362:2362 Poly <> ::'('_x_','_x_')' not
R2364:2364 Poly <> ::'('_x_','_x_')' not
R2366:2366 Poly <> ::'('_x_','_x_')' not
R2363:2363 Tactics <> r var
R2365:2365 Tactics <> r var
R2315:2317 Coq.Init.Logic <> :type_scope:x_'='_x not
R2310:2310 Poly <> ::'('_x_','_x_')' not
R2312:2312 Poly <> ::'('_x_','_x_')' not
R2314:2314 Poly <> ::'('_x_','_x_')' not
R2311:2311 Tactics <> n var
R2313:2313 Tactics <> n var
R2318:2318 Poly <> ::'('_x_','_x_')' not
R2320:2320 Poly <> ::'('_x_','_x_')' not
R2322:2322 Poly <> ::'('_x_','_x_')' not
R2319:2319 Tactics <> m var
R2321:2321 Tactics <> m var
prf 2581:2588 <> silly_ex
R2682:2684 Coq.Init.Logic <> :type_scope:x_'='_x not
R2676:2679 Basics <> oddb def
R2685:2688 Basics <> true constr
R2660:2662 Coq.Init.Logic <> :type_scope:x_'='_x not
R2653:2657 Basics <> evenb def
R2663:2666 Basics <> true constr
R2636:2638 Coq.Init.Logic <> :type_scope:x_'='_x not
R2626:2629 Basics <> oddb def
R2632:2632 Coq.Init.Datatypes <> S constr
R2634:2634 Tactics <> n var
R2639:2642 Basics <> true constr
R2615:2617 Coq.Init.Logic <> :type_scope:x_'='_x not
R2608:2612 Basics <> evenb def
R2614:2614 Tactics <> n var
R2618:2621 Basics <> true constr
prf 2983:2997 <> silly3_firsttry
R3013:3015 Coq.Init.Datatypes <> nat ind
R3071:3073 Coq.Init.Logic <> :type_scope:x_'='_x not
R3052:3058 Basics <> beq_nat def
R3061:3061 Coq.Init.Datatypes <> S constr
R3064:3064 Coq.Init.Datatypes <> S constr
R3066:3066 Tactics <> n var
R3074:3077 Basics <> true constr
R3028:3030 Coq.Init.Logic <> :type_scope:x_'='_x not
R3024:3027 Basics <> true constr
R3031:3037 Basics <> beq_nat def
R3039:3039 Tactics <> n var
prf 3297:3302 <> silly3
R3318:3320 Coq.Init.Datatypes <> nat ind
R3376:3378 Coq.Init.Logic <> :type_scope:x_'='_x not
R3357:3363 Basics <> beq_nat def
R3366:3366 Coq.Init.Datatypes <> S constr
R3369:3369 Coq.Init.Datatypes <> S constr
R3371:3371 Tactics <> n var
R3379:3382 Basics <> true constr
R3333:3335 Coq.Init.Logic <> :type_scope:x_'='_x not
R3329:3332 Basics <> true constr
R3336:3342 Basics <> beq_nat def
R3344:3344 Tactics <> n var
prf 3767:3779 <> rev_exercise1
R3798:3801 Poly <> list ind
R3803:3805 Coq.Init.Datatypes <> nat ind
R3835:3837 Coq.Init.Logic <> :type_scope:x_'='_x not
R3833:3834 Tactics <> l' var
R3838:3840 Poly <> rev def
R3842:3842 Tactics <> l var
R3815:3817 Coq.Init.Logic <> :type_scope:x_'='_x not
R3814:3814 Tactics <> l var
R3818:3820 Poly <> rev def
R3822:3823 Tactics <> l' var
R3894:3896 Poly <> rev def
R3926:3939 Poly <> rev_involutive thm
R3926:3939 Poly <> rev_involutive thm
def 4406:4421 <> trans_eq_example
R4447:4449 Coq.Init.Datatypes <> nat ind
R4507:4509 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4504:4504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4506:4506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4505:4505 Tactics <> b var
R4503:4503 Tactics <> a var
R4510:4510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4512:4512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4514:4514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4513:4513 Tactics <> f var
R4511:4511 Tactics <> e var
R4485:4487 Coq.Init.Logic <> :type_scope:x_'='_x not
R4480:4480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4482:4482 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4484:4484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4483:4483 Tactics <> d var
R4481:4481 Tactics <> c var
R4488:4488 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4490:4490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4492:4492 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4491:4491 Tactics <> f var
R4489:4489 Tactics <> e var
R4463:4465 Coq.Init.Logic <> :type_scope:x_'='_x not
R4458:4458 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4460:4460 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4462:4462 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4461:4461 Tactics <> b var
R4459:4459 Tactics <> a var
R4466:4466 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4468:4468 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4470:4470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4469:4469 Tactics <> d var
R4467:4467 Tactics <> c var
prf 4771:4778 <> trans_eq
R4807:4807 Tactics <> X var
R4832:4834 Coq.Init.Logic <> :type_scope:x_'='_x not
R4831:4831 Tactics <> n var
R4835:4835 Tactics <> o var
R4823:4825 Coq.Init.Logic <> :type_scope:x_'='_x not
R4822:4822 Tactics <> m var
R4826:4826 Tactics <> o var
R4814:4816 Coq.Init.Logic <> :type_scope:x_'='_x not
R4813:4813 Tactics <> n var
R4817:4817 Tactics <> m var
def 5090:5106 <> trans_eq_example'
R5132:5134 Coq.Init.Datatypes <> nat ind
R5192:5194 Coq.Init.Logic <> :type_scope:x_'='_x not
R5187:5187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5189:5189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5191:5191 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5190:5190 Tactics <> b var
R5188:5188 Tactics <> a var
R5195:5195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5197:5197 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5199:5199 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5198:5198 Tactics <> f var
R5196:5196 Tactics <> e var
R5170:5172 Coq.Init.Logic <> :type_scope:x_'='_x not
R5165:5165 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5167:5167 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5169:5169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5168:5168 Tactics <> d var
R5166:5166 Tactics <> c var
R5173:5173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5175:5175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5177:5177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5176:5176 Tactics <> f var
R5174:5174 Tactics <> e var
R5148:5150 Coq.Init.Logic <> :type_scope:x_'='_x not
R5143:5143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5145:5145 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5147:5147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5146:5146 Tactics <> b var
R5144:5144 Tactics <> a var
R5151:5151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5153:5153 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5155:5155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5154:5154 Tactics <> d var
R5152:5152 Tactics <> c var
R5670:5670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5672:5672 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5674:5674 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5652:5659 Tactics <> trans_eq thm
R5670:5670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5672:5672 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5674:5674 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5652:5659 Tactics <> trans_eq thm
def 6004:6020 <> trans_eq_exercise
R6042:6044 Coq.Init.Datatypes <> nat ind
R6098:6098 Coq.Init.Logic <> :type_scope:x_'='_x not
R6104:6108 Coq.Init.Logic <> :type_scope:x_'='_x not
R6119:6119 Coq.Init.Logic <> :type_scope:x_'='_x not
R6100:6102 Basics <> :nat_scope:x_'+'_x not
R6099:6099 Tactics <> n var
R6103:6103 Tactics <> p var
R6109:6116 Basics <> minustwo def
R6118:6118 Tactics <> o var
R6078:6078 Coq.Init.Logic <> :type_scope:x_'='_x not
R6084:6087 Coq.Init.Logic <> :type_scope:x_'='_x not
R6080:6082 Basics <> :nat_scope:x_'+'_x not
R6079:6079 Tactics <> n var
R6083:6083 Tactics <> p var
R6088:6088 Tactics <> m var
R6054:6057 Coq.Init.Logic <> :type_scope:x_'='_x not
R6068:6068 Coq.Init.Logic <> :type_scope:x_'='_x not
R6053:6053 Tactics <> m var
R6058:6065 Basics <> minustwo def
R6067:6067 Tactics <> o var
prf 7661:7671 <> S_injective
R7689:7691 Coq.Init.Datatypes <> nat ind
R7713:7715 Coq.Init.Logic <> :type_scope:x_'='_x not
R7712:7712 Tactics <> n var
R7716:7716 Tactics <> m var
R7700:7702 Coq.Init.Logic <> :type_scope:x_'='_x not
R7697:7697 Coq.Init.Datatypes <> S constr
R7699:7699 Tactics <> n var
R7703:7703 Coq.Init.Datatypes <> S constr
R7705:7705 Tactics <> m var
prf 8203:8215 <> inversion_ex1
R8235:8237 Coq.Init.Datatypes <> nat ind
R8267:8269 Coq.Init.Logic <> :type_scope:x_'='_x not
R8264:8264 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8266:8266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8265:8265 Tactics <> n var
R8270:8270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8272:8272 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8271:8271 Tactics <> m var
R8249:8251 Coq.Init.Logic <> :type_scope:x_'='_x not
R8243:8243 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8245:8246 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8248:8248 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8247:8247 Tactics <> m var
R8244:8244 Tactics <> n var
R8252:8252 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8254:8255 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8257:8257 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8256:8256 Tactics <> o var
R8253:8253 Tactics <> o var
prf 8441:8453 <> inversion_ex2
R8471:8473 Coq.Init.Datatypes <> nat ind
R8495:8497 Coq.Init.Logic <> :type_scope:x_'='_x not
R8494:8494 Tactics <> n var
R8498:8498 Tactics <> m var
R8482:8484 Coq.Init.Logic <> :type_scope:x_'='_x not
R8479:8479 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8481:8481 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8480:8480 Tactics <> n var
R8485:8485 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8487:8487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8486:8486 Tactics <> m var
def 8620:8632 <> inversion_ex3
R8663:8663 Tactics <> X var
R8673:8676 Poly <> list ind
R8678:8678 Tactics <> X var
R8732:8734 Coq.Init.Logic <> :type_scope:x_'='_x not
R8731:8731 Tactics <> x var
R8735:8735 Tactics <> y var
R8716:8718 Coq.Init.Logic <> :type_scope:x_'='_x not
R8711:8714 Poly <> ::x_'::'_x not
R8710:8710 Tactics <> y var
R8715:8715 Tactics <> l var
R8720:8723 Poly <> ::x_'::'_x not
R8719:8719 Tactics <> x var
R8724:8724 Tactics <> j var
R8695:8697 Coq.Init.Logic <> :type_scope:x_'='_x not
R8685:8688 Poly <> ::x_'::'_x not
R8684:8684 Tactics <> x var
R8690:8693 Poly <> ::x_'::'_x not
R8689:8689 Tactics <> y var
R8694:8694 Tactics <> l var
R8699:8702 Poly <> ::x_'::'_x not
R8698:8698 Tactics <> z var
R8703:8703 Tactics <> j var
prf 9089:9095 <> f_equal
R9128:9128 Tactics <> B var
R9123:9123 Tactics <> A var
R9137:9137 Tactics <> A var
R9155:9157 Coq.Init.Logic <> :type_scope:x_'='_x not
R9152:9152 Tactics <> f var
R9154:9154 Tactics <> x var
R9158:9158 Tactics <> f var
R9160:9160 Tactics <> y var
R9144:9146 Coq.Init.Logic <> :type_scope:x_'='_x not
R9143:9143 Tactics <> x var
R9147:9147 Tactics <> y var
prf 9452:9462 <> beq_nat_0_l
R9502:9504 Coq.Init.Logic <> :type_scope:x_'='_x not
R9501:9501 Tactics <> n var
R9490:9492 Coq.Init.Logic <> :type_scope:x_'='_x not
R9479:9485 Basics <> beq_nat def
R9489:9489 Tactics <> n var
R9493:9496 Basics <> true constr
prf 10424:10436 <> inversion_ex4
R10452:10454 Coq.Init.Datatypes <> nat ind
R10478:10480 Coq.Init.Logic <> :type_scope:x_'='_x not
R10474:10476 Basics <> :nat_scope:x_'+'_x not
R10463:10465 Coq.Init.Logic <> :type_scope:x_'='_x not
R10460:10460 Coq.Init.Datatypes <> S constr
R10462:10462 Tactics <> n var
R10466:10466 Coq.Init.Datatypes <> O constr
prf 10542:10554 <> inversion_ex5
R10572:10574 Coq.Init.Datatypes <> nat ind
R10601:10603 Coq.Init.Logic <> :type_scope:x_'='_x not
R10598:10598 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10600:10600 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10599:10599 Tactics <> n var
R10604:10604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10606:10606 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10605:10605 Tactics <> m var
R10585:10587 Coq.Init.Logic <> :type_scope:x_'='_x not
R10580:10584 Basics <> false constr
R10588:10591 Basics <> true constr
def 11085:11097 <> inversion_ex6
R11154:11154 Tactics <> X var
R11164:11167 Poly <> list ind
R11169:11169 Tactics <> X var
R11219:11221 Coq.Init.Logic <> :type_scope:x_'='_x not
R11218:11218 Tactics <> x var
R11222:11222 Tactics <> z var
R11203:11205 Coq.Init.Logic <> :type_scope:x_'='_x not
R11198:11201 Poly <> ::x_'::'_x not
R11197:11197 Tactics <> y var
R11202:11202 Tactics <> l var
R11207:11210 Poly <> ::x_'::'_x not
R11206:11206 Tactics <> z var
R11211:11211 Tactics <> j var
R11186:11188 Coq.Init.Logic <> :type_scope:x_'='_x not
R11176:11179 Poly <> ::x_'::'_x not
R11175:11175 Tactics <> x var
R11181:11184 Poly <> ::x_'::'_x not
R11180:11180 Tactics <> y var
R11185:11185 Tactics <> l var
R11189:11190 Poly <> ::'['_']' not
prf 12515:12519 <> S_inj
R12537:12539 Coq.Init.Datatypes <> nat ind
R12547:12550 Basics <> bool ind
R12603:12605 Coq.Init.Logic <> :type_scope:x_'='_x not
R12592:12598 Basics <> beq_nat def
R12602:12602 Tactics <> m var
R12600:12600 Tactics <> n var
R12606:12606 Tactics <> b var
R12578:12580 Coq.Init.Logic <> :type_scope:x_'='_x not
R12559:12565 Basics <> beq_nat def
R12574:12574 Coq.Init.Datatypes <> S constr
R12576:12576 Tactics <> m var
R12568:12568 Coq.Init.Datatypes <> S constr
R12570:12570 Tactics <> n var
R12581:12581 Tactics <> b var
prf 13444:13450 <> silly3'
R13466:13468 Coq.Init.Datatypes <> nat ind
R13559:13561 Coq.Init.Logic <> :type_scope:x_'='_x not
R13555:13558 Basics <> true constr
R13562:13568 Basics <> beq_nat def
R13571:13571 Coq.Init.Datatypes <> S constr
R13574:13574 Coq.Init.Datatypes <> S constr
R13576:13576 Tactics <> n var
R13534:13536 Coq.Init.Logic <> :type_scope:x_'='_x not
R13530:13533 Basics <> true constr
R13537:13543 Basics <> beq_nat def
R13545:13545 Tactics <> n var
R13516:13518 Coq.Init.Logic <> :type_scope:x_'='_x not
R13497:13503 Basics <> beq_nat def
R13506:13506 Coq.Init.Datatypes <> S constr
R13509:13509 Coq.Init.Datatypes <> S constr
R13511:13511 Tactics <> n var
R13519:13522 Basics <> true constr
R13486:13488 Coq.Init.Logic <> :type_scope:x_'='_x not
R13475:13481 Basics <> beq_nat def
R13483:13483 Tactics <> n var
R13489:13492 Basics <> true constr
prf 14458:14475 <> plus_n_n_injective
R14519:14521 Coq.Init.Logic <> :type_scope:x_'='_x not
R14518:14518 Tactics <> n var
R14522:14522 Tactics <> m var
R14501:14503 Coq.Init.Logic <> :type_scope:x_'='_x not
R14497:14499 Basics <> :nat_scope:x_'+'_x not
R14496:14496 Tactics <> n var
R14500:14500 Tactics <> n var
R14505:14507 Basics <> :nat_scope:x_'+'_x not
R14504:14504 Tactics <> m var
R14508:14508 Tactics <> m var
R14757:14765 Induction <> plus_comm thm
R14757:14765 Induction <> plus_comm thm
R14850:14850 Coq.Init.Datatypes <> S constr
R14823:14831 Induction <> plus_comm thm
R14850:14850 Coq.Init.Datatypes <> S constr
R14823:14831 Induction <> plus_comm thm
prf 15897:15919 <> double_injective_FAILED
R15969:15971 Coq.Init.Logic <> :type_scope:x_'='_x not
R15968:15968 Tactics <> n var
R15972:15972 Tactics <> m var
R15948:15950 Coq.Init.Logic <> :type_scope:x_'='_x not
R15940:15945 Induction <> double def
R15947:15947 Tactics <> n var
R15951:15956 Induction <> double def
R15958:15958 Tactics <> m var
R16253:16259 Tactics <> f_equal thm
R16253:16259 Tactics <> f_equal thm
prf 18505:18520 <> double_injective
R18570:18572 Coq.Init.Logic <> :type_scope:x_'='_x not
R18569:18569 Tactics <> n var
R18573:18573 Tactics <> m var
R18549:18551 Coq.Init.Logic <> :type_scope:x_'='_x not
R18541:18546 Induction <> double def
R18548:18548 Tactics <> n var
R18552:18557 Induction <> double def
R18559:18559 Tactics <> m var
R19446:19452 Tactics <> f_equal thm
R19446:19452 Tactics <> f_equal thm
prf 20347:20358 <> beq_nat_true
R20401:20403 Coq.Init.Logic <> :type_scope:x_'='_x not
R20400:20400 Tactics <> n var
R20404:20404 Tactics <> m var
R20389:20391 Coq.Init.Logic <> :type_scope:x_'='_x not
R20378:20384 Basics <> beq_nat def
R20388:20388 Tactics <> m var
R20386:20386 Tactics <> n var
R20392:20395 Basics <> true constr
prf 21157:21185 <> double_injective_take2_FAILED
R21235:21237 Coq.Init.Logic <> :type_scope:x_'='_x not
R21234:21234 Tactics <> n var
R21238:21238 Tactics <> m var
R21214:21216 Coq.Init.Logic <> :type_scope:x_'='_x not
R21206:21211 Induction <> double def
R21213:21213 Tactics <> n var
R21217:21222 Induction <> double def
R21224:21224 Tactics <> m var
R21519:21525 Tactics <> f_equal thm
R21519:21525 Tactics <> f_equal thm
prf 22461:22482 <> double_injective_take2
R22532:22534 Coq.Init.Logic <> :type_scope:x_'='_x not
R22531:22531 Tactics <> n var
R22535:22535 Tactics <> m var
R22511:22513 Coq.Init.Logic <> :type_scope:x_'='_x not
R22503:22508 Induction <> double def
R22510:22510 Tactics <> n var
R22514:22519 Induction <> double def
R22521:22521 Tactics <> m var
R22998:23004 Tactics <> f_equal thm
R22998:23004 Tactics <> f_equal thm
prf 25208:25218 <> beq_id_true
R25258:25260 Coq.Init.Logic <> :type_scope:x_'='_x not
R25257:25257 Tactics <> x var
R25261:25261 Tactics <> y var
R25246:25248 Coq.Init.Logic <> :type_scope:x_'='_x not
R25236:25241 Lists <> beq_id def
R25245:25245 Tactics <> y var
R25243:25243 Tactics <> x var
R25249:25252 Basics <> true constr
R25322:25324 Coq.Init.Logic <> :type_scope:x_'='_x not
R25322:25324 Coq.Init.Logic <> :type_scope:x_'='_x not
R25337:25348 Tactics <> beq_nat_true thm
R25337:25348 Tactics <> beq_nat_true thm
prf 25506:25525 <> nth_error_after_last
R25540:25542 Coq.Init.Datatypes <> nat ind
R25561:25564 Poly <> list ind
R25566:25566 Tactics <> X var
R25609:25611 Coq.Init.Logic <> :type_scope:x_'='_x not
R25596:25604 Poly <> nth_error def
R25608:25608 Tactics <> n var
R25606:25606 Tactics <> l var
R25612:25615 Poly <> None constr
R25583:25585 Coq.Init.Logic <> :type_scope:x_'='_x not
R25575:25580 Poly <> length def
R25582:25582 Tactics <> l var
R25586:25586 Tactics <> n var
prf 26036:26052 <> app_length_equal1
R26073:26076 Poly <> list ind
R26078:26078 Tactics <> X var
R26084:26084 Tactics <> X var
R26104:26106 Coq.Init.Logic <> :type_scope:x_'='_x not
R26087:26092 Poly <> length def
R26096:26099 Poly <> ::x_'++'_x not
R26095:26095 Tactics <> l var
R26100:26100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26102:26102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26101:26101 Tactics <> n var
R26107:26107 Coq.Init.Datatypes <> S constr
R26110:26115 Poly <> length def
R26117:26117 Tactics <> l var
prf 26215:26229 <> app_length_cons
R26260:26263 Poly <> list ind
R26265:26265 Tactics <> X var
R26307:26307 Tactics <> X var
R26315:26317 Coq.Init.Datatypes <> nat ind
R26384:26386 Coq.Init.Logic <> :type_scope:x_'='_x not
R26363:26363 Coq.Init.Datatypes <> S constr
R26366:26371 Poly <> length def
R26376:26379 Poly <> ::x_'++'_x not
R26374:26375 Tactics <> l1 var
R26380:26381 Tactics <> l2 var
R26387:26387 Tactics <> n var
R26350:26352 Coq.Init.Logic <> :type_scope:x_'='_x not
R26326:26331 Poly <> length def
R26336:26340 Poly <> ::x_'++'_x not
R26348:26348 Poly <> ::x_'++'_x not
R26334:26335 Tactics <> l1 var
R26342:26345 Poly <> ::x_'::'_x not
R26341:26341 Tactics <> x var
R26346:26347 Tactics <> l2 var
R26353:26353 Tactics <> n var
R26613:26615 Poly <> app def
R26630:26643 Poly <> app_right_poly thm
R26630:26643 Poly <> app_right_poly thm
R26658:26674 Tactics <> app_length_equal1 thm
R26658:26674 Tactics <> app_length_equal1 thm
R26753:26760 Poly <> app_comm prfax
R26753:26760 Poly <> app_comm prfax
R26796:26803 Poly <> app_comm prfax
R26796:26803 Poly <> app_comm prfax
prf 26995:27010 <> app_length_twice
R27033:27035 Coq.Init.Datatypes <> nat ind
R27041:27044 Poly <> list ind
R27046:27046 Tactics <> X var
R27091:27093 Coq.Init.Logic <> :type_scope:x_'='_x not
R27076:27081 Poly <> length def
R27085:27088 Poly <> ::x_'++'_x not
R27084:27084 Tactics <> l var
R27089:27089 Tactics <> l var
R27095:27097 Basics <> :nat_scope:x_'+'_x not
R27094:27094 Tactics <> n var
R27098:27098 Tactics <> n var
R27063:27065 Coq.Init.Logic <> :type_scope:x_'='_x not
R27055:27060 Poly <> length def
R27062:27062 Tactics <> l var
R27066:27066 Tactics <> n var
R27279:27281 Coq.Init.Logic <> :type_scope:x_'='_x not
R27270:27275 Poly <> length def
R27282:27285 Coq.Init.Peano <> pred def
R27279:27281 Coq.Init.Logic <> :type_scope:x_'='_x not
R27270:27275 Poly <> length def
R27282:27285 Coq.Init.Peano <> pred def
R27361:27368 Poly <> app_comm prfax
R27361:27368 Poly <> app_comm prfax
R27405:27407 Coq.Init.Logic <> :type_scope:x_'='_x not
R27388:27393 Poly <> length def
R27398:27401 Poly <> ::x_'++'_x not
R27414:27416 Basics <> :nat_scope:x_'+'_x not
R27408:27411 Coq.Init.Peano <> pred def
R27417:27420 Coq.Init.Peano <> pred def
R27405:27407 Coq.Init.Logic <> :type_scope:x_'='_x not
R27388:27393 Poly <> length def
R27398:27401 Poly <> ::x_'++'_x not
R27414:27416 Basics <> :nat_scope:x_'+'_x not
R27408:27411 Coq.Init.Peano <> pred def
R27417:27420 Coq.Init.Peano <> pred def
prf 27587:27602 <> double_induction
R27624:27626 Coq.Init.Datatypes <> nat ind
R27617:27619 Coq.Init.Datatypes <> nat ind
R27777:27777 Tactics <> P var
R27781:27781 Tactics <> n var
R27779:27779 Tactics <> m var
R27745:27745 Tactics <> P var
R27754:27754 Coq.Init.Datatypes <> S constr
R27756:27756 Tactics <> n var
R27748:27748 Coq.Init.Datatypes <> S constr
R27750:27750 Tactics <> m var
R27736:27736 Tactics <> P var
R27740:27740 Tactics <> n var
R27738:27738 Tactics <> m var
R27707:27707 Tactics <> P var
R27712:27712 Coq.Init.Datatypes <> S constr
R27714:27714 Tactics <> n var
R27698:27698 Tactics <> P var
R27702:27702 Tactics <> n var
R27671:27671 Tactics <> P var
R27674:27674 Coq.Init.Datatypes <> S constr
R27676:27676 Tactics <> m var
R27662:27662 Tactics <> P var
R27664:27664 Tactics <> m var
R27640:27640 Tactics <> P var
def 28315:28320 <> square
R28328:28330 Basics <> :nat_scope:x_'*'_x not
R28327:28327 Tactics <> n var
R28331:28331 Tactics <> n var
prf 28398:28408 <> square_mult
R28438:28440 Coq.Init.Logic <> :type_scope:x_'='_x not
R28424:28429 Tactics <> square def
R28433:28435 Basics <> :nat_scope:x_'*'_x not
R28432:28432 Tactics <> n var
R28436:28436 Tactics <> m var
R28449:28451 Basics <> :nat_scope:x_'*'_x not
R28441:28446 Tactics <> square def
R28448:28448 Tactics <> n var
R28452:28457 Tactics <> square def
R28459:28459 Tactics <> m var
R28776:28781 Tactics <> square def
R29108:29117 Induction <> mult_assoc thm
R29108:29117 Induction <> mult_assoc thm
R29143:29145 Coq.Init.Logic <> :type_scope:x_'='_x not
R29139:29141 Basics <> :nat_scope:x_'*'_x not
R29135:29137 Basics <> :nat_scope:x_'*'_x not
R29151:29153 Basics <> :nat_scope:x_'*'_x not
R29147:29149 Basics <> :nat_scope:x_'*'_x not
R29143:29145 Coq.Init.Logic <> :type_scope:x_'='_x not
R29139:29141 Basics <> :nat_scope:x_'*'_x not
R29135:29137 Basics <> :nat_scope:x_'*'_x not
R29151:29153 Basics <> :nat_scope:x_'*'_x not
R29147:29149 Basics <> :nat_scope:x_'*'_x not
R29170:29178 Induction <> mult_comm thm
R29170:29178 Induction <> mult_comm thm
R29187:29196 Induction <> mult_assoc thm
R29187:29196 Induction <> mult_assoc thm
R29222:29231 Induction <> mult_assoc thm
R29222:29231 Induction <> mult_assoc thm
def 29624:29626 <> foo
R29632:29634 Coq.Init.Datatypes <> nat ind
prf 29847:29858 <> silly_fact_1
R29881:29883 Coq.Init.Logic <> :type_scope:x_'='_x not
R29877:29879 Basics <> :nat_scope:x_'+'_x not
R29872:29874 Tactics <> foo def
R29876:29876 Tactics <> m var
R29895:29897 Basics <> :nat_scope:x_'+'_x not
R29884:29886 Tactics <> foo def
R29890:29892 Basics <> :nat_scope:x_'+'_x not
R29889:29889 Tactics <> m var
def 30128:30130 <> bar
R30145:30145 Tactics <> x var
R30156:30156 Coq.Init.Datatypes <> O constr
R30167:30167 Coq.Init.Datatypes <> S constr
prf 30241:30259 <> silly_fact_2_FAILED
R30282:30284 Coq.Init.Logic <> :type_scope:x_'='_x not
R30278:30280 Basics <> :nat_scope:x_'+'_x not
R30273:30275 Tactics <> bar def
R30277:30277 Tactics <> m var
R30296:30298 Basics <> :nat_scope:x_'+'_x not
R30285:30287 Tactics <> bar def
R30291:30293 Basics <> :nat_scope:x_'+'_x not
R30290:30290 Tactics <> m var
prf 31287:31298 <> silly_fact_2
R31321:31323 Coq.Init.Logic <> :type_scope:x_'='_x not
R31317:31319 Basics <> :nat_scope:x_'+'_x not
R31312:31314 Tactics <> bar def
R31316:31316 Tactics <> m var
R31335:31337 Basics <> :nat_scope:x_'+'_x not
R31324:31326 Tactics <> bar def
R31330:31332 Basics <> :nat_scope:x_'+'_x not
R31329:31329 Tactics <> m var
prf 31688:31700 <> silly_fact_2'
R31723:31725 Coq.Init.Logic <> :type_scope:x_'='_x not
R31719:31721 Basics <> :nat_scope:x_'+'_x not
R31714:31716 Tactics <> bar def
R31718:31718 Tactics <> m var
R31737:31739 Basics <> :nat_scope:x_'+'_x not
R31726:31728 Tactics <> bar def
R31732:31734 Basics <> :nat_scope:x_'+'_x not
R31731:31731 Tactics <> m var
R31771:31773 Tactics <> bar def
def 32406:32413 <> sillyfun
R32420:32422 Coq.Init.Datatypes <> nat ind
R32427:32430 Basics <> bool ind
R32440:32446 Basics <> beq_nat def
R32448:32448 Tactics <> n var
R32473:32479 Basics <> beq_nat def
R32481:32481 Tactics <> n var
R32503:32507 Basics <> false constr
R32490:32494 Basics <> false constr
R32457:32461 Basics <> false constr
prf 32519:32532 <> sillyfun_false
R32548:32550 Coq.Init.Datatypes <> nat ind
R32566:32568 Coq.Init.Logic <> :type_scope:x_'='_x not
R32556:32563 Tactics <> sillyfun def
R32565:32565 Tactics <> n var
R32569:32573 Basics <> false constr
R32602:32609 Tactics <> sillyfun def
R32624:32630 Basics <> beq_nat def
R32624:32630 Basics <> beq_nat def
R32724:32730 Basics <> beq_nat def
R32724:32730 Basics <> beq_nat def
prf 33527:33544 <> combine_split_refl
R33561:33564 Poly <> list ind
R33568:33570 Poly <> :type_scope:x_'*'_x not
R33567:33567 Tactics <> X var
R33571:33571 Tactics <> Y var
R33615:33617 Coq.Init.Logic <> :type_scope:x_'='_x not
R33576:33582 Poly <> combine def
R33601:33603 Poly <> snd def
R33606:33610 Poly <> split def
R33612:33612 Tactics <> l var
R33585:33587 Poly <> fst def
R33590:33594 Poly <> split def
R33596:33596 Tactics <> l var
R33618:33618 Tactics <> l var
prf 33743:33755 <> combine_split
R33775:33778 Poly <> list ind
R33782:33784 Poly <> :type_scope:x_'*'_x not
R33781:33781 Tactics <> X var
R33785:33785 Tactics <> Y var
R33835:33837 Coq.Init.Logic <> :type_scope:x_'='_x not
R33822:33828 Poly <> combine def
R33833:33834 Tactics <> l2 var
R33830:33831 Tactics <> l1 var
R33838:33838 Tactics <> l var
R33805:33807 Coq.Init.Logic <> :type_scope:x_'='_x not
R33798:33802 Poly <> split def
R33804:33804 Tactics <> l var
R33808:33808 Poly <> ::'('_x_','_x_')' not
R33811:33812 Poly <> ::'('_x_','_x_')' not
R33815:33815 Poly <> ::'('_x_','_x_')' not
R33809:33810 Tactics <> l1 var
R33813:33814 Tactics <> l2 var
R33983:33985 Coq.Init.Logic <> :type_scope:x_'='_x not
R33986:33986 Poly <> ::'('_x_','_x_')' not
R33992:33993 Poly <> ::'('_x_','_x_')' not
R33999:33999 Poly <> ::'('_x_','_x_')' not
R33987:33989 Poly <> fst def
R33994:33996 Poly <> snd def
R33983:33985 Coq.Init.Logic <> :type_scope:x_'='_x not
R33986:33986 Poly <> ::'('_x_','_x_')' not
R33992:33993 Poly <> ::'('_x_','_x_')' not
R33999:33999 Poly <> ::'('_x_','_x_')' not
R33987:33989 Poly <> fst def
R33994:33996 Poly <> snd def
R34067:34084 Tactics <> combine_split_refl thm
R34067:34084 Tactics <> combine_split_refl thm
def 34535:34543 <> sillyfun1
R34550:34552 Coq.Init.Datatypes <> nat ind
R34557:34560 Basics <> bool ind
R34570:34576 Basics <> beq_nat def
R34578:34578 Tactics <> n var
R34602:34608 Basics <> beq_nat def
R34610:34610 Tactics <> n var
R34631:34635 Basics <> false constr
R34619:34622 Basics <> true constr
R34587:34590 Basics <> true constr
prf 34894:34913 <> sillyfun1_odd_FAILED
R34929:34931 Coq.Init.Datatypes <> nat ind
R34973:34975 Coq.Init.Logic <> :type_scope:x_'='_x not
R34967:34970 Basics <> oddb def
R34972:34972 Tactics <> n var
R34976:34979 Basics <> true constr
R34951:34953 Coq.Init.Logic <> :type_scope:x_'='_x not
R34940:34948 Tactics <> sillyfun1 def
R34950:34950 Tactics <> n var
R34954:34957 Basics <> true constr
R35011:35019 Tactics <> sillyfun1 def
R35040:35046 Basics <> beq_nat def
R35040:35046 Basics <> beq_nat def
prf 35895:35907 <> sillyfun1_odd
R35923:35925 Coq.Init.Datatypes <> nat ind
R35967:35969 Coq.Init.Logic <> :type_scope:x_'='_x not
R35961:35964 Basics <> oddb def
R35966:35966 Tactics <> n var
R35970:35973 Basics <> true constr
R35945:35947 Coq.Init.Logic <> :type_scope:x_'='_x not
R35934:35942 Tactics <> sillyfun1 def
R35944:35944 Tactics <> n var
R35948:35951 Basics <> true constr
R36005:36013 Tactics <> sillyfun1 def
R36034:36040 Basics <> beq_nat def
R36034:36040 Basics <> beq_nat def
R36289:36300 Tactics <> beq_nat_true thm
R36289:36300 Tactics <> beq_nat_true thm
R36587:36593 Basics <> beq_nat def
R36587:36593 Basics <> beq_nat def
R36653:36664 Tactics <> beq_nat_true thm
R36653:36664 Tactics <> beq_nat_true thm
prf 36828:36849 <> bool_fn_applied_thrice
R36875:36878 Basics <> bool ind
R36867:36870 Basics <> bool ind
R36886:36889 Basics <> bool ind
R36906:36908 Coq.Init.Logic <> :type_scope:x_'='_x not
R36895:36895 Tactics <> f var
R36898:36898 Tactics <> f var
R36901:36901 Tactics <> f var
R36903:36903 Tactics <> b var
R36909:36909 Tactics <> f var
R36911:36911 Tactics <> b var
R36978:36981 Basics <> true constr
R36978:36981 Basics <> true constr
R37026:37030 Basics <> false constr
R37026:37030 Basics <> false constr
R37090:37094 Basics <> false constr
R37090:37094 Basics <> false constr
R37117:37120 Basics <> true constr
R37117:37120 Basics <> true constr
prf 39419:39429 <> beq_nat_sym
R39447:39449 Coq.Init.Datatypes <> nat ind
R39466:39468 Coq.Init.Logic <> :type_scope:x_'='_x not
R39455:39461 Basics <> beq_nat def
R39465:39465 Tactics <> m var
R39463:39463 Tactics <> n var
R39469:39475 Basics <> beq_nat def
R39479:39479 Tactics <> n var
R39477:39477 Tactics <> m var
prf 39969:39981 <> beq_nat_trans
R40060:40062 Coq.Init.Logic <> :type_scope:x_'='_x not
R40049:40055 Basics <> beq_nat def
R40059:40059 Tactics <> p var
R40057:40057 Tactics <> n var
R40063:40066 Basics <> true constr
R40036:40038 Coq.Init.Logic <> :type_scope:x_'='_x not
R40025:40031 Basics <> beq_nat def
R40035:40035 Tactics <> p var
R40033:40033 Tactics <> m var
R40039:40042 Basics <> true constr
R40012:40014 Coq.Init.Logic <> :type_scope:x_'='_x not
R40001:40007 Basics <> beq_nat def
R40011:40011 Tactics <> m var
R40009:40009 Tactics <> n var
R40015:40018 Basics <> true constr
R40109:40115 Basics <> beq_nat def
def 41111:41133 <> split_combine_statement
R41160:41163 Poly <> list ind
R41165:41165 Tactics <> X var
R41172:41175 Poly <> list ind
R41177:41177 Tactics <> Y var
R41183:41186 Poly <> list ind
R41190:41192 Poly <> :type_scope:x_'*'_x not
R41189:41189 Tactics <> X var
R41193:41193 Tactics <> Y var
R41296:41298 Coq.Init.Logic <> :type_scope:x_'='_x not
R41289:41293 Poly <> split def
R41295:41295 Tactics <> l var
R41299:41299 Poly <> ::'('_x_','_x_')' not
R41302:41302 Poly <> ::'('_x_','_x_')' not
R41305:41305 Poly <> ::'('_x_','_x_')' not
R41300:41301 Tactics <> l1 var
R41303:41304 Tactics <> l2 var
R41280:41283 Coq.Init.Logic <> :type_scope:x_'='_x not
R41267:41273 Poly <> combine def
R41278:41279 Tactics <> l2 var
R41275:41276 Tactics <> l1 var
R41284:41284 Tactics <> l var
R41252:41254 Coq.Init.Logic <> :type_scope:x_'='_x not
R41243:41248 Poly <> length def
R41250:41251 Tactics <> l1 var
R41255:41260 Poly <> length def
R41262:41263 Tactics <> l2 var
prf 41335:41347 <> split_combine
R41351:41373 Tactics <> split_combine_statement def
R41409:41431 Tactics <> split_combine_statement def
R41828:41830 Coq.Init.Logic <> :type_scope:x_'='_x not
R41821:41825 Poly <> split def
R41831:41831 Poly <> ::'('_x_','_x_')' not
R41834:41834 Poly <> ::'('_x_','_x_')' not
R41837:41837 Poly <> ::'('_x_','_x_')' not
R41828:41830 Coq.Init.Logic <> :type_scope:x_'='_x not
R41821:41825 Poly <> split def
R41831:41831 Poly <> ::'('_x_','_x_')' not
R41834:41834 Poly <> ::'('_x_','_x_')' not
R41837:41837 Poly <> ::'('_x_','_x_')' not
prf 42095:42109 <> filter_exercise
R42144:42147 Basics <> bool ind
R42139:42139 Tactics <> X var
R42184:42184 Tactics <> X var
R42195:42198 Poly <> list ind
R42200:42200 Tactics <> X var
R42247:42249 Coq.Init.Logic <> :type_scope:x_'='_x not
R42241:42244 Tactics <> test var
R42246:42246 Tactics <> x var
R42250:42253 Basics <> true constr
R42222:42224 Coq.Init.Logic <> :type_scope:x_'='_x not
R42209:42214 Poly <> filter def
R42221:42221 Tactics <> l var
R42216:42219 Tactics <> test var
R42226:42229 Poly <> ::x_'::'_x not
R42225:42225 Tactics <> x var
R42230:42231 Tactics <> lf var
def 43511:43517 <> forallb
R43534:43537 Basics <> bool ind
R43531:43531 Tactics <> X var
R43543:43546 Poly <> list ind
R43548:43548 Tactics <> X var
R43562:43562 Tactics <> l var
R43577:43579 Poly <> nil constr
R43584:43587 Basics <> true constr
R43597:43600 Poly <> cons constr
R43613:43613 Tactics <> f var
R43640:43644 Basics <> false constr
R43622:43628 Tactics <> forallb def
R43630:43630 Tactics <> f var
def 43663:43669 <> existsb
R43686:43689 Basics <> bool ind
R43683:43683 Tactics <> X var
R43695:43698 Poly <> list ind
R43700:43700 Tactics <> X var
R43714:43714 Tactics <> l var
R43729:43731 Poly <> nil constr
R43736:43740 Basics <> false constr
R43750:43753 Poly <> cons constr
R43766:43766 Tactics <> f var
R43785:43791 Tactics <> existsb def
R43793:43793 Tactics <> f var
R43775:43778 Basics <> true constr
def 43817:43824 <> existsb'
R43841:43844 Basics <> bool ind
R43838:43838 Tactics <> X var
R43850:43853 Poly <> list ind
R43855:43855 Tactics <> X var
R43859:43862 Basics <> bool ind
R43867:43870 Basics <> negb def
R43873:43879 Tactics <> forallb def
R43907:43907 Tactics <> l var
R43889:43889 Tactics <> X var
R43895:43898 Basics <> negb def
R43901:43901 Tactics <> f var
R43903:43903 Tactics <> x var
def 43921:43931 <> test_exist1
R43971:43973 Coq.Init.Logic <> :type_scope:x_'='_x not
R43934:43940 Tactics <> existsb def
R43954:43954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43959:43959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43964:43964 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43970:43970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43965:43969 Basics <> false constr
R43960:43963 Basics <> true constr
R43955:43958 Basics <> true constr
R43943:43946 Basics <> andb def
R43948:43951 Basics <> true constr
R43974:43977 Basics <> true constr
R43994:44001 Tactics <> existsb' def
prf 44040:44054 <> existb_existsb'
R44070:44073 Poly <> list ind
R44075:44075 Tactics <> X var
R44089:44091 Coq.Init.Logic <> :type_scope:x_'='_x not
R44078:44084 Tactics <> existsb def
R44088:44088 Tactics <> l var
R44086:44086 Tactics <> f var
R44092:44099 Tactics <> existsb' def
R44103:44103 Tactics <> l var
R44101:44101 Tactics <> f var
R44154:44161 Tactics <> existsb' def
R44193:44200 Tactics <> existsb' def
