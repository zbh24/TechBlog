DIGEST 19bdb03a8caa52a880d65f04657402b4
FTactics
R53:56 Poly <> <> lib
prf 866:871 <> silly1
R893:895 Coq.Init.Datatypes <> nat ind
R946:948 Coq.Init.Logic <> :type_scope:x_'='_x not
R941:941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R943:943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R945:945 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R944:944 Tactics <> o var
R942:942 Tactics <> n var
R949:949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R951:951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R953:953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R952:952 Tactics <> p var
R950:950 Tactics <> m var
R924:926 Coq.Init.Logic <> :type_scope:x_'='_x not
R919:919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R921:921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R923:923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R922:922 Tactics <> o var
R920:920 Tactics <> n var
R927:927 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R929:929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R931:931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R930:930 Tactics <> p var
R928:928 Tactics <> n var
R905:907 Coq.Init.Logic <> :type_scope:x_'='_x not
R904:904 Tactics <> n var
R908:908 Tactics <> m var
prf 1489:1494 <> silly2
R1516:1518 Coq.Init.Datatypes <> nat ind
R1600:1602 Coq.Init.Logic <> :type_scope:x_'='_x not
R1595:1595 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1597:1597 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1599:1599 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1598:1598 Tactics <> o var
R1596:1596 Tactics <> n var
R1603:1603 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1605:1605 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1607:1607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1606:1606 Tactics <> p var
R1604:1604 Tactics <> m var
R1557:1559 Coq.Init.Datatypes <> nat ind
R1577:1579 Coq.Init.Logic <> :type_scope:x_'='_x not
R1572:1572 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1574:1574 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1576:1576 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1575:1575 Tactics <> o var
R1573:1573 Tactics <> q var
R1580:1580 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1582:1582 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1584:1584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1583:1583 Tactics <> p var
R1581:1581 Tactics <> r var
R1564:1566 Coq.Init.Logic <> :type_scope:x_'='_x not
R1563:1563 Tactics <> q var
R1567:1567 Tactics <> r var
R1528:1530 Coq.Init.Logic <> :type_scope:x_'='_x not
R1527:1527 Tactics <> n var
R1531:1531 Tactics <> m var
prf 2274:2280 <> silly2a
R2298:2300 Coq.Init.Datatypes <> nat ind
R2392:2394 Coq.Init.Logic <> :type_scope:x_'='_x not
R2389:2389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2391:2391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Tactics <> n var
R2395:2395 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2397:2397 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2396:2396 Tactics <> m var
R2347:2349 Coq.Init.Datatypes <> nat ind
R2373:2375 Coq.Init.Logic <> :type_scope:x_'='_x not
R2370:2370 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2372:2372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2371:2371 Tactics <> q var
R2376:2376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2378:2378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2377:2377 Tactics <> r var
R2358:2360 Coq.Init.Logic <> :type_scope:x_'='_x not
R2353:2353 Poly <> ::'('_x_','_x_')' not
R2355:2355 Poly <> ::'('_x_','_x_')' not
R2357:2357 Poly <> ::'('_x_','_x_')' not
R2354:2354 Tactics <> q var
R2356:2356 Tactics <> q var
R2361:2361 Poly <> ::'('_x_','_x_')' not
R2363:2363 Poly <> ::'('_x_','_x_')' not
R2365:2365 Poly <> ::'('_x_','_x_')' not
R2362:2362 Tactics <> r var
R2364:2364 Tactics <> r var
R2314:2316 Coq.Init.Logic <> :type_scope:x_'='_x not
R2309:2309 Poly <> ::'('_x_','_x_')' not
R2311:2311 Poly <> ::'('_x_','_x_')' not
R2313:2313 Poly <> ::'('_x_','_x_')' not
R2310:2310 Tactics <> n var
R2312:2312 Tactics <> n var
R2317:2317 Poly <> ::'('_x_','_x_')' not
R2319:2319 Poly <> ::'('_x_','_x_')' not
R2321:2321 Poly <> ::'('_x_','_x_')' not
R2318:2318 Tactics <> m var
R2320:2320 Tactics <> m var
prf 2580:2587 <> silly_ex
R2681:2683 Coq.Init.Logic <> :type_scope:x_'='_x not
R2675:2678 Basics <> oddb def
R2684:2687 Basics <> true constr
R2659:2661 Coq.Init.Logic <> :type_scope:x_'='_x not
R2652:2656 Basics <> evenb def
R2662:2665 Basics <> true constr
R2635:2637 Coq.Init.Logic <> :type_scope:x_'='_x not
R2625:2628 Basics <> oddb def
R2631:2631 Coq.Init.Datatypes <> S constr
R2633:2633 Tactics <> n var
R2638:2641 Basics <> true constr
R2614:2616 Coq.Init.Logic <> :type_scope:x_'='_x not
R2607:2611 Basics <> evenb def
R2613:2613 Tactics <> n var
R2617:2620 Basics <> true constr
prf 2982:2996 <> silly3_firsttry
R3012:3014 Coq.Init.Datatypes <> nat ind
R3070:3072 Coq.Init.Logic <> :type_scope:x_'='_x not
R3051:3057 Basics <> beq_nat def
R3060:3060 Coq.Init.Datatypes <> S constr
R3063:3063 Coq.Init.Datatypes <> S constr
R3065:3065 Tactics <> n var
R3073:3076 Basics <> true constr
R3027:3029 Coq.Init.Logic <> :type_scope:x_'='_x not
R3023:3026 Basics <> true constr
R3030:3036 Basics <> beq_nat def
R3038:3038 Tactics <> n var
prf 3296:3301 <> silly3
R3317:3319 Coq.Init.Datatypes <> nat ind
R3375:3377 Coq.Init.Logic <> :type_scope:x_'='_x not
R3356:3362 Basics <> beq_nat def
R3365:3365 Coq.Init.Datatypes <> S constr
R3368:3368 Coq.Init.Datatypes <> S constr
R3370:3370 Tactics <> n var
R3378:3381 Basics <> true constr
R3332:3334 Coq.Init.Logic <> :type_scope:x_'='_x not
R3328:3331 Basics <> true constr
R3335:3341 Basics <> beq_nat def
R3343:3343 Tactics <> n var
prf 3766:3778 <> rev_exercise1
R3797:3800 Poly <> list ind
R3802:3804 Coq.Init.Datatypes <> nat ind
R3834:3836 Coq.Init.Logic <> :type_scope:x_'='_x not
R3832:3833 Tactics <> l' var
R3837:3839 Poly <> rev def
R3841:3841 Tactics <> l var
R3814:3816 Coq.Init.Logic <> :type_scope:x_'='_x not
R3813:3813 Tactics <> l var
R3817:3819 Poly <> rev def
R3821:3822 Tactics <> l' var
R3893:3895 Poly <> rev def
R3925:3938 Poly <> rev_involutive thm
R3925:3938 Poly <> rev_involutive thm
def 4405:4420 <> trans_eq_example
R4446:4448 Coq.Init.Datatypes <> nat ind
R4506:4508 Coq.Init.Logic <> :type_scope:x_'='_x not
R4501:4501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4503:4503 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4505:4505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4504:4504 Tactics <> b var
R4502:4502 Tactics <> a var
R4509:4509 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4511:4511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4513:4513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4512:4512 Tactics <> f var
R4510:4510 Tactics <> e var
R4484:4486 Coq.Init.Logic <> :type_scope:x_'='_x not
R4479:4479 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4481:4481 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4483:4483 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4482:4482 Tactics <> d var
R4480:4480 Tactics <> c var
R4487:4487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4489:4489 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4491:4491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4490:4490 Tactics <> f var
R4488:4488 Tactics <> e var
R4462:4464 Coq.Init.Logic <> :type_scope:x_'='_x not
R4457:4457 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4459:4459 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4461:4461 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4460:4460 Tactics <> b var
R4458:4458 Tactics <> a var
R4465:4465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4467:4467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4469:4469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4468:4468 Tactics <> d var
R4466:4466 Tactics <> c var
prf 4770:4777 <> trans_eq
R4806:4806 Tactics <> X var
R4831:4833 Coq.Init.Logic <> :type_scope:x_'='_x not
R4830:4830 Tactics <> n var
R4834:4834 Tactics <> o var
R4822:4824 Coq.Init.Logic <> :type_scope:x_'='_x not
R4821:4821 Tactics <> m var
R4825:4825 Tactics <> o var
R4813:4815 Coq.Init.Logic <> :type_scope:x_'='_x not
R4812:4812 Tactics <> n var
R4816:4816 Tactics <> m var
def 5089:5105 <> trans_eq_example'
R5131:5133 Coq.Init.Datatypes <> nat ind
R5191:5193 Coq.Init.Logic <> :type_scope:x_'='_x not
R5186:5186 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5188:5188 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5190:5190 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5189:5189 Tactics <> b var
R5187:5187 Tactics <> a var
R5194:5194 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5196:5196 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5198:5198 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5197:5197 Tactics <> f var
R5195:5195 Tactics <> e var
R5169:5171 Coq.Init.Logic <> :type_scope:x_'='_x not
R5164:5164 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5166:5166 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5168:5168 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5167:5167 Tactics <> d var
R5165:5165 Tactics <> c var
R5172:5172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5174:5174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5176:5176 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5175:5175 Tactics <> f var
R5173:5173 Tactics <> e var
R5147:5149 Coq.Init.Logic <> :type_scope:x_'='_x not
R5142:5142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5144:5144 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5146:5146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5145:5145 Tactics <> b var
R5143:5143 Tactics <> a var
R5150:5150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5152:5152 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5154:5154 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5153:5153 Tactics <> d var
R5151:5151 Tactics <> c var
R5669:5669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5671:5671 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5673:5673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5651:5658 Tactics <> trans_eq thm
R5669:5669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5671:5671 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5673:5673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5651:5658 Tactics <> trans_eq thm
def 6003:6019 <> trans_eq_exercise
R6041:6043 Coq.Init.Datatypes <> nat ind
R6097:6097 Coq.Init.Logic <> :type_scope:x_'='_x not
R6103:6107 Coq.Init.Logic <> :type_scope:x_'='_x not
R6118:6118 Coq.Init.Logic <> :type_scope:x_'='_x not
R6099:6101 Basics <> :nat_scope:x_'+'_x not
R6098:6098 Tactics <> n var
R6102:6102 Tactics <> p var
R6108:6115 Basics <> minustwo def
R6117:6117 Tactics <> o var
R6077:6077 Coq.Init.Logic <> :type_scope:x_'='_x not
R6083:6086 Coq.Init.Logic <> :type_scope:x_'='_x not
R6079:6081 Basics <> :nat_scope:x_'+'_x not
R6078:6078 Tactics <> n var
R6082:6082 Tactics <> p var
R6087:6087 Tactics <> m var
R6053:6056 Coq.Init.Logic <> :type_scope:x_'='_x not
R6067:6067 Coq.Init.Logic <> :type_scope:x_'='_x not
R6052:6052 Tactics <> m var
R6057:6064 Basics <> minustwo def
R6066:6066 Tactics <> o var
prf 7660:7670 <> S_injective
R7688:7690 Coq.Init.Datatypes <> nat ind
R7712:7714 Coq.Init.Logic <> :type_scope:x_'='_x not
R7711:7711 Tactics <> n var
R7715:7715 Tactics <> m var
R7699:7701 Coq.Init.Logic <> :type_scope:x_'='_x not
R7696:7696 Coq.Init.Datatypes <> S constr
R7698:7698 Tactics <> n var
R7702:7702 Coq.Init.Datatypes <> S constr
R7704:7704 Tactics <> m var
prf 8202:8214 <> inversion_ex1
R8234:8236 Coq.Init.Datatypes <> nat ind
R8266:8268 Coq.Init.Logic <> :type_scope:x_'='_x not
R8263:8263 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8265:8265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8264:8264 Tactics <> n var
R8269:8269 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8271:8271 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8270:8270 Tactics <> m var
R8248:8250 Coq.Init.Logic <> :type_scope:x_'='_x not
R8242:8242 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8244:8245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8247:8247 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8246:8246 Tactics <> m var
R8243:8243 Tactics <> n var
R8251:8251 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8253:8254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8256:8256 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8255:8255 Tactics <> o var
R8252:8252 Tactics <> o var
prf 8440:8452 <> inversion_ex2
R8470:8472 Coq.Init.Datatypes <> nat ind
R8494:8496 Coq.Init.Logic <> :type_scope:x_'='_x not
R8493:8493 Tactics <> n var
R8497:8497 Tactics <> m var
R8481:8483 Coq.Init.Logic <> :type_scope:x_'='_x not
R8478:8478 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8480:8480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8479:8479 Tactics <> n var
R8484:8484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8486:8486 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8485:8485 Tactics <> m var
def 8619:8631 <> inversion_ex3
R8662:8662 Tactics <> X var
R8672:8675 Poly <> list ind
R8677:8677 Tactics <> X var
R8731:8733 Coq.Init.Logic <> :type_scope:x_'='_x not
R8730:8730 Tactics <> x var
R8734:8734 Tactics <> y var
R8715:8717 Coq.Init.Logic <> :type_scope:x_'='_x not
R8710:8713 Poly <> ::x_'::'_x not
R8709:8709 Tactics <> y var
R8714:8714 Tactics <> l var
R8719:8722 Poly <> ::x_'::'_x not
R8718:8718 Tactics <> x var
R8723:8723 Tactics <> j var
R8694:8696 Coq.Init.Logic <> :type_scope:x_'='_x not
R8684:8687 Poly <> ::x_'::'_x not
R8683:8683 Tactics <> x var
R8689:8692 Poly <> ::x_'::'_x not
R8688:8688 Tactics <> y var
R8693:8693 Tactics <> l var
R8698:8701 Poly <> ::x_'::'_x not
R8697:8697 Tactics <> z var
R8702:8702 Tactics <> j var
prf 9088:9094 <> f_equal
R9127:9127 Tactics <> B var
R9122:9122 Tactics <> A var
R9136:9136 Tactics <> A var
R9154:9156 Coq.Init.Logic <> :type_scope:x_'='_x not
R9151:9151 Tactics <> f var
R9153:9153 Tactics <> x var
R9157:9157 Tactics <> f var
R9159:9159 Tactics <> y var
R9143:9145 Coq.Init.Logic <> :type_scope:x_'='_x not
R9142:9142 Tactics <> x var
R9146:9146 Tactics <> y var
prf 9451:9461 <> beq_nat_0_l
R9501:9503 Coq.Init.Logic <> :type_scope:x_'='_x not
R9500:9500 Tactics <> n var
R9489:9491 Coq.Init.Logic <> :type_scope:x_'='_x not
R9478:9484 Basics <> beq_nat def
R9488:9488 Tactics <> n var
R9492:9495 Basics <> true constr
prf 10423:10435 <> inversion_ex4
R10451:10453 Coq.Init.Datatypes <> nat ind
R10477:10479 Coq.Init.Logic <> :type_scope:x_'='_x not
R10473:10475 Basics <> :nat_scope:x_'+'_x not
R10462:10464 Coq.Init.Logic <> :type_scope:x_'='_x not
R10459:10459 Coq.Init.Datatypes <> S constr
R10461:10461 Tactics <> n var
R10465:10465 Coq.Init.Datatypes <> O constr
prf 10541:10553 <> inversion_ex5
R10571:10573 Coq.Init.Datatypes <> nat ind
R10600:10602 Coq.Init.Logic <> :type_scope:x_'='_x not
R10597:10597 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10599:10599 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10598:10598 Tactics <> n var
R10603:10603 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10605:10605 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10604:10604 Tactics <> m var
R10584:10586 Coq.Init.Logic <> :type_scope:x_'='_x not
R10579:10583 Basics <> false constr
R10587:10590 Basics <> true constr
def 11084:11096 <> inversion_ex6
R11153:11153 Tactics <> X var
R11163:11166 Poly <> list ind
R11168:11168 Tactics <> X var
R11218:11220 Coq.Init.Logic <> :type_scope:x_'='_x not
R11217:11217 Tactics <> x var
R11221:11221 Tactics <> z var
R11202:11204 Coq.Init.Logic <> :type_scope:x_'='_x not
R11197:11200 Poly <> ::x_'::'_x not
R11196:11196 Tactics <> y var
R11201:11201 Tactics <> l var
R11206:11209 Poly <> ::x_'::'_x not
R11205:11205 Tactics <> z var
R11210:11210 Tactics <> j var
R11185:11187 Coq.Init.Logic <> :type_scope:x_'='_x not
R11175:11178 Poly <> ::x_'::'_x not
R11174:11174 Tactics <> x var
R11180:11183 Poly <> ::x_'::'_x not
R11179:11179 Tactics <> y var
R11184:11184 Tactics <> l var
R11188:11189 Poly <> ::'['_']' not
prf 12514:12518 <> S_inj
R12536:12538 Coq.Init.Datatypes <> nat ind
R12546:12549 Basics <> bool ind
R12602:12604 Coq.Init.Logic <> :type_scope:x_'='_x not
R12591:12597 Basics <> beq_nat def
R12601:12601 Tactics <> m var
R12599:12599 Tactics <> n var
R12605:12605 Tactics <> b var
R12577:12579 Coq.Init.Logic <> :type_scope:x_'='_x not
R12558:12564 Basics <> beq_nat def
R12573:12573 Coq.Init.Datatypes <> S constr
R12575:12575 Tactics <> m var
R12567:12567 Coq.Init.Datatypes <> S constr
R12569:12569 Tactics <> n var
R12580:12580 Tactics <> b var
prf 13443:13449 <> silly3'
R13465:13467 Coq.Init.Datatypes <> nat ind
R13558:13560 Coq.Init.Logic <> :type_scope:x_'='_x not
R13554:13557 Basics <> true constr
R13561:13567 Basics <> beq_nat def
R13570:13570 Coq.Init.Datatypes <> S constr
R13573:13573 Coq.Init.Datatypes <> S constr
R13575:13575 Tactics <> n var
R13533:13535 Coq.Init.Logic <> :type_scope:x_'='_x not
R13529:13532 Basics <> true constr
R13536:13542 Basics <> beq_nat def
R13544:13544 Tactics <> n var
R13515:13517 Coq.Init.Logic <> :type_scope:x_'='_x not
R13496:13502 Basics <> beq_nat def
R13505:13505 Coq.Init.Datatypes <> S constr
R13508:13508 Coq.Init.Datatypes <> S constr
R13510:13510 Tactics <> n var
R13518:13521 Basics <> true constr
R13485:13487 Coq.Init.Logic <> :type_scope:x_'='_x not
R13474:13480 Basics <> beq_nat def
R13482:13482 Tactics <> n var
R13488:13491 Basics <> true constr
prf 14457:14474 <> plus_n_n_injective
R14518:14520 Coq.Init.Logic <> :type_scope:x_'='_x not
R14517:14517 Tactics <> n var
R14521:14521 Tactics <> m var
R14500:14502 Coq.Init.Logic <> :type_scope:x_'='_x not
R14496:14498 Basics <> :nat_scope:x_'+'_x not
R14495:14495 Tactics <> n var
R14499:14499 Tactics <> n var
R14504:14506 Basics <> :nat_scope:x_'+'_x not
R14503:14503 Tactics <> m var
R14507:14507 Tactics <> m var
R14756:14764 Induction <> plus_comm thm
R14756:14764 Induction <> plus_comm thm
R14849:14849 Coq.Init.Datatypes <> S constr
R14822:14830 Induction <> plus_comm thm
R14849:14849 Coq.Init.Datatypes <> S constr
R14822:14830 Induction <> plus_comm thm
prf 15896:15918 <> double_injective_FAILED
R15968:15970 Coq.Init.Logic <> :type_scope:x_'='_x not
R15967:15967 Tactics <> n var
R15971:15971 Tactics <> m var
R15947:15949 Coq.Init.Logic <> :type_scope:x_'='_x not
R15939:15944 Induction <> double def
R15946:15946 Tactics <> n var
R15950:15955 Induction <> double def
R15957:15957 Tactics <> m var
R16252:16258 Tactics <> f_equal thm
R16252:16258 Tactics <> f_equal thm
prf 18504:18519 <> double_injective
R18569:18571 Coq.Init.Logic <> :type_scope:x_'='_x not
R18568:18568 Tactics <> n var
R18572:18572 Tactics <> m var
R18548:18550 Coq.Init.Logic <> :type_scope:x_'='_x not
R18540:18545 Induction <> double def
R18547:18547 Tactics <> n var
R18551:18556 Induction <> double def
R18558:18558 Tactics <> m var
R19445:19451 Tactics <> f_equal thm
R19445:19451 Tactics <> f_equal thm
prf 20346:20357 <> beq_nat_true
R20400:20402 Coq.Init.Logic <> :type_scope:x_'='_x not
R20399:20399 Tactics <> n var
R20403:20403 Tactics <> m var
R20388:20390 Coq.Init.Logic <> :type_scope:x_'='_x not
R20377:20383 Basics <> beq_nat def
R20387:20387 Tactics <> m var
R20385:20385 Tactics <> n var
R20391:20394 Basics <> true constr
prf 21156:21184 <> double_injective_take2_FAILED
R21234:21236 Coq.Init.Logic <> :type_scope:x_'='_x not
R21233:21233 Tactics <> n var
R21237:21237 Tactics <> m var
R21213:21215 Coq.Init.Logic <> :type_scope:x_'='_x not
R21205:21210 Induction <> double def
R21212:21212 Tactics <> n var
R21216:21221 Induction <> double def
R21223:21223 Tactics <> m var
R21518:21524 Tactics <> f_equal thm
R21518:21524 Tactics <> f_equal thm
prf 22460:22481 <> double_injective_take2
R22531:22533 Coq.Init.Logic <> :type_scope:x_'='_x not
R22530:22530 Tactics <> n var
R22534:22534 Tactics <> m var
R22510:22512 Coq.Init.Logic <> :type_scope:x_'='_x not
R22502:22507 Induction <> double def
R22509:22509 Tactics <> n var
R22513:22518 Induction <> double def
R22520:22520 Tactics <> m var
R22997:23003 Tactics <> f_equal thm
R22997:23003 Tactics <> f_equal thm
prf 25207:25217 <> beq_id_true
R25257:25259 Coq.Init.Logic <> :type_scope:x_'='_x not
R25256:25256 Tactics <> x var
R25260:25260 Tactics <> y var
R25245:25247 Coq.Init.Logic <> :type_scope:x_'='_x not
R25235:25240 Lists <> beq_id def
R25244:25244 Tactics <> y var
R25242:25242 Tactics <> x var
R25248:25251 Basics <> true constr
R25321:25323 Coq.Init.Logic <> :type_scope:x_'='_x not
R25321:25323 Coq.Init.Logic <> :type_scope:x_'='_x not
R25336:25347 Tactics <> beq_nat_true thm
R25336:25347 Tactics <> beq_nat_true thm
prf 25505:25524 <> nth_error_after_last
R25539:25541 Coq.Init.Datatypes <> nat ind
R25560:25563 Poly <> list ind
R25565:25565 Tactics <> X var
R25608:25610 Coq.Init.Logic <> :type_scope:x_'='_x not
R25595:25603 Poly <> nth_error def
R25607:25607 Tactics <> n var
R25605:25605 Tactics <> l var
R25611:25614 Poly <> None constr
R25582:25584 Coq.Init.Logic <> :type_scope:x_'='_x not
R25574:25579 Poly <> length def
R25581:25581 Tactics <> l var
R25585:25585 Tactics <> n var
prf 26035:26051 <> app_length_equal1
R26072:26075 Poly <> list ind
R26077:26077 Tactics <> X var
R26083:26083 Tactics <> X var
R26103:26105 Coq.Init.Logic <> :type_scope:x_'='_x not
R26086:26091 Poly <> length def
R26095:26098 Poly <> ::x_'++'_x not
R26094:26094 Tactics <> l var
R26099:26099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26101:26101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26100:26100 Tactics <> n var
R26106:26106 Coq.Init.Datatypes <> S constr
R26109:26114 Poly <> length def
R26116:26116 Tactics <> l var
prf 26212:26219 <> S_inject
R26247:26249 Coq.Init.Logic <> :type_scope:x_'='_x not
R26246:26246 Tactics <> n var
R26250:26250 Tactics <> m var
R26236:26238 Coq.Init.Logic <> :type_scope:x_'='_x not
R26233:26233 Coq.Init.Datatypes <> S constr
R26235:26235 Tactics <> n var
R26239:26239 Coq.Init.Datatypes <> S constr
R26241:26241 Tactics <> m var
prf 26306:26311 <> S_cons
R26337:26339 Coq.Init.Logic <> :type_scope:x_'='_x not
R26334:26334 Coq.Init.Datatypes <> S constr
R26336:26336 Tactics <> n var
R26340:26340 Coq.Init.Datatypes <> S constr
R26342:26342 Tactics <> m var
R26326:26328 Coq.Init.Logic <> :type_scope:x_'='_x not
R26325:26325 Tactics <> n var
R26329:26329 Tactics <> m var
prf 26391:26406 <> app_length_cons'
R26437:26440 Poly <> list ind
R26442:26442 Tactics <> X var
R26484:26484 Tactics <> X var
R26492:26494 Coq.Init.Datatypes <> nat ind
R26561:26563 Coq.Init.Logic <> :type_scope:x_'='_x not
R26540:26540 Coq.Init.Datatypes <> S constr
R26543:26548 Poly <> length def
R26553:26556 Poly <> ::x_'++'_x not
R26551:26552 Tactics <> l1 var
R26557:26558 Tactics <> l2 var
R26564:26564 Tactics <> n var
R26527:26529 Coq.Init.Logic <> :type_scope:x_'='_x not
R26503:26508 Poly <> length def
R26513:26517 Poly <> ::x_'++'_x not
R26525:26525 Poly <> ::x_'++'_x not
R26511:26512 Tactics <> l1 var
R26519:26522 Poly <> ::x_'::'_x not
R26518:26518 Tactics <> x var
R26523:26524 Tactics <> l2 var
R26530:26530 Tactics <> n var
R26788:26801 Poly <> app_right_poly thm
R26788:26801 Poly <> app_right_poly thm
R26816:26832 Tactics <> app_length_equal1 thm
R26816:26832 Tactics <> app_length_equal1 thm
R26915:26920 Poly <> length def
R26935:26944 Poly <> app_length thm
R26935:26944 Poly <> app_length thm
R26964:26973 Poly <> app_length thm
R26964:26973 Poly <> app_length thm
R27015:27023 Induction <> plus_comm thm
R27015:27023 Induction <> plus_comm thm
R27043:27051 Induction <> plus_comm thm
R27043:27051 Induction <> plus_comm thm
prf 27081:27095 <> app_length_cons
R27126:27129 Poly <> list ind
R27131:27131 Tactics <> X var
R27173:27173 Tactics <> X var
R27181:27183 Coq.Init.Datatypes <> nat ind
R27250:27252 Coq.Init.Logic <> :type_scope:x_'='_x not
R27229:27229 Coq.Init.Datatypes <> S constr
R27232:27237 Poly <> length def
R27242:27245 Poly <> ::x_'++'_x not
R27240:27241 Tactics <> l1 var
R27246:27247 Tactics <> l2 var
R27253:27253 Tactics <> n var
R27216:27218 Coq.Init.Logic <> :type_scope:x_'='_x not
R27192:27197 Poly <> length def
R27202:27206 Poly <> ::x_'++'_x not
R27214:27214 Poly <> ::x_'++'_x not
R27200:27201 Tactics <> l1 var
R27208:27211 Poly <> ::x_'::'_x not
R27207:27207 Tactics <> x var
R27212:27213 Tactics <> l2 var
R27219:27219 Tactics <> n var
R27461:27466 Tactics <> S_cons thm
R27461:27466 Tactics <> S_cons thm
R27526:27533 Tactics <> S_inject thm
R27526:27533 Tactics <> S_inject thm
prf 27716:27732 <> app_length_twice'
R27755:27757 Coq.Init.Datatypes <> nat ind
R27763:27766 Poly <> list ind
R27768:27768 Tactics <> X var
R27813:27815 Coq.Init.Logic <> :type_scope:x_'='_x not
R27798:27803 Poly <> length def
R27807:27810 Poly <> ::x_'++'_x not
R27806:27806 Tactics <> l var
R27811:27811 Tactics <> l var
R27817:27819 Basics <> :nat_scope:x_'+'_x not
R27816:27816 Tactics <> n var
R27820:27820 Tactics <> n var
R27785:27787 Coq.Init.Logic <> :type_scope:x_'='_x not
R27777:27782 Poly <> length def
R27784:27784 Tactics <> l var
R27788:27788 Tactics <> n var
R28080:28088 Induction <> plus_comm thm
R28080:28088 Induction <> plus_comm thm
R28099:28108 Poly <> app_length thm
R28099:28108 Poly <> app_length thm
R28137:28145 Induction <> plus_comm thm
R28137:28145 Induction <> plus_comm thm
prf 28173:28182 <> app_cons_x
R28203:28203 Tactics <> X var
R28214:28217 Poly <> list ind
R28219:28219 Tactics <> X var
R28243:28245 Coq.Init.Logic <> :type_scope:x_'='_x not
R28223:28228 Poly <> length def
R28233:28236 Poly <> ::x_'++'_x not
R28231:28232 Tactics <> l1 var
R28238:28239 Poly <> ::x_'::'_x not
R28237:28237 Tactics <> x var
R28240:28241 Tactics <> l2 var
R28246:28246 Coq.Init.Datatypes <> S constr
R28249:28254 Poly <> length def
R28259:28262 Poly <> ::x_'++'_x not
R28257:28258 Tactics <> l1 var
R28263:28264 Tactics <> l2 var
R28323:28328 Tactics <> S_cons thm
R28323:28328 Tactics <> S_cons thm
prf 28357:28372 <> app_length_twice
R28395:28397 Coq.Init.Datatypes <> nat ind
R28403:28406 Poly <> list ind
R28408:28408 Tactics <> X var
R28453:28455 Coq.Init.Logic <> :type_scope:x_'='_x not
R28438:28443 Poly <> length def
R28447:28450 Poly <> ::x_'++'_x not
R28446:28446 Tactics <> l var
R28451:28451 Tactics <> l var
R28457:28459 Basics <> :nat_scope:x_'+'_x not
R28456:28456 Tactics <> n var
R28460:28460 Tactics <> n var
R28425:28427 Coq.Init.Logic <> :type_scope:x_'='_x not
R28417:28422 Poly <> length def
R28424:28424 Tactics <> l var
R28428:28428 Tactics <> n var
R28689:28694 Tactics <> S_cons thm
R28689:28694 Tactics <> S_cons thm
R28705:28714 Tactics <> app_cons_x thm
R28705:28714 Tactics <> app_cons_x thm
R28725:28733 Induction <> plus_comm thm
R28725:28733 Induction <> plus_comm thm
R28749:28754 Tactics <> S_cons thm
R28749:28754 Tactics <> S_cons thm
prf 28950:28965 <> double_induction
R28987:28989 Coq.Init.Datatypes <> nat ind
R28980:28982 Coq.Init.Datatypes <> nat ind
R29140:29140 Tactics <> P var
R29144:29144 Tactics <> n var
R29142:29142 Tactics <> m var
R29108:29108 Tactics <> P var
R29117:29117 Coq.Init.Datatypes <> S constr
R29119:29119 Tactics <> n var
R29111:29111 Coq.Init.Datatypes <> S constr
R29113:29113 Tactics <> m var
R29099:29099 Tactics <> P var
R29103:29103 Tactics <> n var
R29101:29101 Tactics <> m var
R29070:29070 Tactics <> P var
R29075:29075 Coq.Init.Datatypes <> S constr
R29077:29077 Tactics <> n var
R29061:29061 Tactics <> P var
R29065:29065 Tactics <> n var
R29034:29034 Tactics <> P var
R29037:29037 Coq.Init.Datatypes <> S constr
R29039:29039 Tactics <> m var
R29025:29025 Tactics <> P var
R29027:29027 Tactics <> m var
R29003:29003 Tactics <> P var
def 29560:29565 <> square
R29573:29575 Basics <> :nat_scope:x_'*'_x not
R29572:29572 Tactics <> n var
R29576:29576 Tactics <> n var
prf 29643:29653 <> square_mult
R29683:29685 Coq.Init.Logic <> :type_scope:x_'='_x not
R29669:29674 Tactics <> square def
R29678:29680 Basics <> :nat_scope:x_'*'_x not
R29677:29677 Tactics <> n var
R29681:29681 Tactics <> m var
R29694:29696 Basics <> :nat_scope:x_'*'_x not
R29686:29691 Tactics <> square def
R29693:29693 Tactics <> n var
R29697:29702 Tactics <> square def
R29704:29704 Tactics <> m var
R30021:30026 Tactics <> square def
R30353:30362 Induction <> mult_assoc thm
R30353:30362 Induction <> mult_assoc thm
R30388:30390 Coq.Init.Logic <> :type_scope:x_'='_x not
R30384:30386 Basics <> :nat_scope:x_'*'_x not
R30380:30382 Basics <> :nat_scope:x_'*'_x not
R30396:30398 Basics <> :nat_scope:x_'*'_x not
R30392:30394 Basics <> :nat_scope:x_'*'_x not
R30388:30390 Coq.Init.Logic <> :type_scope:x_'='_x not
R30384:30386 Basics <> :nat_scope:x_'*'_x not
R30380:30382 Basics <> :nat_scope:x_'*'_x not
R30396:30398 Basics <> :nat_scope:x_'*'_x not
R30392:30394 Basics <> :nat_scope:x_'*'_x not
R30415:30423 Induction <> mult_comm thm
R30415:30423 Induction <> mult_comm thm
R30432:30441 Induction <> mult_assoc thm
R30432:30441 Induction <> mult_assoc thm
R30467:30476 Induction <> mult_assoc thm
R30467:30476 Induction <> mult_assoc thm
def 30869:30871 <> foo
R30877:30879 Coq.Init.Datatypes <> nat ind
prf 31092:31103 <> silly_fact_1
R31126:31128 Coq.Init.Logic <> :type_scope:x_'='_x not
R31122:31124 Basics <> :nat_scope:x_'+'_x not
R31117:31119 Tactics <> foo def
R31121:31121 Tactics <> m var
R31140:31142 Basics <> :nat_scope:x_'+'_x not
R31129:31131 Tactics <> foo def
R31135:31137 Basics <> :nat_scope:x_'+'_x not
R31134:31134 Tactics <> m var
def 31373:31375 <> bar
R31390:31390 Tactics <> x var
R31401:31401 Coq.Init.Datatypes <> O constr
R31412:31412 Coq.Init.Datatypes <> S constr
prf 31486:31504 <> silly_fact_2_FAILED
R31527:31529 Coq.Init.Logic <> :type_scope:x_'='_x not
R31523:31525 Basics <> :nat_scope:x_'+'_x not
R31518:31520 Tactics <> bar def
R31522:31522 Tactics <> m var
R31541:31543 Basics <> :nat_scope:x_'+'_x not
R31530:31532 Tactics <> bar def
R31536:31538 Basics <> :nat_scope:x_'+'_x not
R31535:31535 Tactics <> m var
prf 32532:32543 <> silly_fact_2
R32566:32568 Coq.Init.Logic <> :type_scope:x_'='_x not
R32562:32564 Basics <> :nat_scope:x_'+'_x not
R32557:32559 Tactics <> bar def
R32561:32561 Tactics <> m var
R32580:32582 Basics <> :nat_scope:x_'+'_x not
R32569:32571 Tactics <> bar def
R32575:32577 Basics <> :nat_scope:x_'+'_x not
R32574:32574 Tactics <> m var
prf 32933:32945 <> silly_fact_2'
R32968:32970 Coq.Init.Logic <> :type_scope:x_'='_x not
R32964:32966 Basics <> :nat_scope:x_'+'_x not
R32959:32961 Tactics <> bar def
R32963:32963 Tactics <> m var
R32982:32984 Basics <> :nat_scope:x_'+'_x not
R32971:32973 Tactics <> bar def
R32977:32979 Basics <> :nat_scope:x_'+'_x not
R32976:32976 Tactics <> m var
R33016:33018 Tactics <> bar def
def 33651:33658 <> sillyfun
R33665:33667 Coq.Init.Datatypes <> nat ind
R33672:33675 Basics <> bool ind
R33685:33691 Basics <> beq_nat def
R33693:33693 Tactics <> n var
R33718:33724 Basics <> beq_nat def
R33726:33726 Tactics <> n var
R33748:33752 Basics <> false constr
R33735:33739 Basics <> false constr
R33702:33706 Basics <> false constr
prf 33764:33777 <> sillyfun_false
R33793:33795 Coq.Init.Datatypes <> nat ind
R33811:33813 Coq.Init.Logic <> :type_scope:x_'='_x not
R33801:33808 Tactics <> sillyfun def
R33810:33810 Tactics <> n var
R33814:33818 Basics <> false constr
R33847:33854 Tactics <> sillyfun def
R33869:33875 Basics <> beq_nat def
R33869:33875 Basics <> beq_nat def
R33969:33975 Basics <> beq_nat def
R33969:33975 Basics <> beq_nat def
prf 34772:34789 <> combine_split_refl
R34806:34809 Poly <> list ind
R34813:34815 Poly <> :type_scope:x_'*'_x not
R34812:34812 Tactics <> X var
R34816:34816 Tactics <> Y var
R34860:34862 Coq.Init.Logic <> :type_scope:x_'='_x not
R34821:34827 Poly <> combine def
R34846:34848 Poly <> snd def
R34851:34855 Poly <> split def
R34857:34857 Tactics <> l var
R34830:34832 Poly <> fst def
R34835:34839 Poly <> split def
R34841:34841 Tactics <> l var
R34863:34863 Tactics <> l var
prf 34988:35000 <> combine_split
R35020:35023 Poly <> list ind
R35027:35029 Poly <> :type_scope:x_'*'_x not
R35026:35026 Tactics <> X var
R35030:35030 Tactics <> Y var
R35080:35082 Coq.Init.Logic <> :type_scope:x_'='_x not
R35067:35073 Poly <> combine def
R35078:35079 Tactics <> l2 var
R35075:35076 Tactics <> l1 var
R35083:35083 Tactics <> l var
R35050:35052 Coq.Init.Logic <> :type_scope:x_'='_x not
R35043:35047 Poly <> split def
R35049:35049 Tactics <> l var
R35053:35053 Poly <> ::'('_x_','_x_')' not
R35056:35057 Poly <> ::'('_x_','_x_')' not
R35060:35060 Poly <> ::'('_x_','_x_')' not
R35054:35055 Tactics <> l1 var
R35058:35059 Tactics <> l2 var
R35228:35230 Coq.Init.Logic <> :type_scope:x_'='_x not
R35231:35231 Poly <> ::'('_x_','_x_')' not
R35237:35238 Poly <> ::'('_x_','_x_')' not
R35244:35244 Poly <> ::'('_x_','_x_')' not
R35232:35234 Poly <> fst def
R35239:35241 Poly <> snd def
R35228:35230 Coq.Init.Logic <> :type_scope:x_'='_x not
R35231:35231 Poly <> ::'('_x_','_x_')' not
R35237:35238 Poly <> ::'('_x_','_x_')' not
R35244:35244 Poly <> ::'('_x_','_x_')' not
R35232:35234 Poly <> fst def
R35239:35241 Poly <> snd def
R35312:35329 Tactics <> combine_split_refl thm
R35312:35329 Tactics <> combine_split_refl thm
def 35780:35788 <> sillyfun1
R35795:35797 Coq.Init.Datatypes <> nat ind
R35802:35805 Basics <> bool ind
R35815:35821 Basics <> beq_nat def
R35823:35823 Tactics <> n var
R35847:35853 Basics <> beq_nat def
R35855:35855 Tactics <> n var
R35876:35880 Basics <> false constr
R35864:35867 Basics <> true constr
R35832:35835 Basics <> true constr
prf 36139:36158 <> sillyfun1_odd_FAILED
R36174:36176 Coq.Init.Datatypes <> nat ind
R36218:36220 Coq.Init.Logic <> :type_scope:x_'='_x not
R36212:36215 Basics <> oddb def
R36217:36217 Tactics <> n var
R36221:36224 Basics <> true constr
R36196:36198 Coq.Init.Logic <> :type_scope:x_'='_x not
R36185:36193 Tactics <> sillyfun1 def
R36195:36195 Tactics <> n var
R36199:36202 Basics <> true constr
R36256:36264 Tactics <> sillyfun1 def
R36285:36291 Basics <> beq_nat def
R36285:36291 Basics <> beq_nat def
prf 37140:37152 <> sillyfun1_odd
R37168:37170 Coq.Init.Datatypes <> nat ind
R37212:37214 Coq.Init.Logic <> :type_scope:x_'='_x not
R37206:37209 Basics <> oddb def
R37211:37211 Tactics <> n var
R37215:37218 Basics <> true constr
R37190:37192 Coq.Init.Logic <> :type_scope:x_'='_x not
R37179:37187 Tactics <> sillyfun1 def
R37189:37189 Tactics <> n var
R37193:37196 Basics <> true constr
R37250:37258 Tactics <> sillyfun1 def
R37279:37285 Basics <> beq_nat def
R37279:37285 Basics <> beq_nat def
R37534:37545 Tactics <> beq_nat_true thm
R37534:37545 Tactics <> beq_nat_true thm
R37832:37838 Basics <> beq_nat def
R37832:37838 Basics <> beq_nat def
R37898:37909 Tactics <> beq_nat_true thm
R37898:37909 Tactics <> beq_nat_true thm
prf 38073:38094 <> bool_fn_applied_thrice
R38120:38123 Basics <> bool ind
R38112:38115 Basics <> bool ind
R38131:38134 Basics <> bool ind
R38151:38153 Coq.Init.Logic <> :type_scope:x_'='_x not
R38140:38140 Tactics <> f var
R38143:38143 Tactics <> f var
R38146:38146 Tactics <> f var
R38148:38148 Tactics <> b var
R38154:38154 Tactics <> f var
R38156:38156 Tactics <> b var
R38223:38226 Basics <> true constr
R38223:38226 Basics <> true constr
R38271:38275 Basics <> false constr
R38271:38275 Basics <> false constr
R38335:38339 Basics <> false constr
R38335:38339 Basics <> false constr
R38362:38365 Basics <> true constr
R38362:38365 Basics <> true constr
prf 40664:40674 <> beq_nat_sym
R40692:40694 Coq.Init.Datatypes <> nat ind
R40711:40713 Coq.Init.Logic <> :type_scope:x_'='_x not
R40700:40706 Basics <> beq_nat def
R40710:40710 Tactics <> m var
R40708:40708 Tactics <> n var
R40714:40720 Basics <> beq_nat def
R40724:40724 Tactics <> n var
R40722:40722 Tactics <> m var
prf 41214:41226 <> beq_nat_trans
R41305:41307 Coq.Init.Logic <> :type_scope:x_'='_x not
R41294:41300 Basics <> beq_nat def
R41304:41304 Tactics <> p var
R41302:41302 Tactics <> n var
R41308:41311 Basics <> true constr
R41281:41283 Coq.Init.Logic <> :type_scope:x_'='_x not
R41270:41276 Basics <> beq_nat def
R41280:41280 Tactics <> p var
R41278:41278 Tactics <> m var
R41284:41287 Basics <> true constr
R41257:41259 Coq.Init.Logic <> :type_scope:x_'='_x not
R41246:41252 Basics <> beq_nat def
R41256:41256 Tactics <> m var
R41254:41254 Tactics <> n var
R41260:41263 Basics <> true constr
R41354:41360 Basics <> beq_nat def
def 42356:42378 <> split_combine_statement
R42405:42408 Poly <> list ind
R42410:42410 Tactics <> X var
R42417:42420 Poly <> list ind
R42422:42422 Tactics <> Y var
R42428:42431 Poly <> list ind
R42435:42437 Poly <> :type_scope:x_'*'_x not
R42434:42434 Tactics <> X var
R42438:42438 Tactics <> Y var
R42541:42543 Coq.Init.Logic <> :type_scope:x_'='_x not
R42534:42538 Poly <> split def
R42540:42540 Tactics <> l var
R42544:42544 Poly <> ::'('_x_','_x_')' not
R42547:42547 Poly <> ::'('_x_','_x_')' not
R42550:42550 Poly <> ::'('_x_','_x_')' not
R42545:42546 Tactics <> l1 var
R42548:42549 Tactics <> l2 var
R42525:42528 Coq.Init.Logic <> :type_scope:x_'='_x not
R42512:42518 Poly <> combine def
R42523:42524 Tactics <> l2 var
R42520:42521 Tactics <> l1 var
R42529:42529 Tactics <> l var
R42497:42499 Coq.Init.Logic <> :type_scope:x_'='_x not
R42488:42493 Poly <> length def
R42495:42496 Tactics <> l1 var
R42500:42505 Poly <> length def
R42507:42508 Tactics <> l2 var
prf 42580:42592 <> split_combine
R42596:42618 Tactics <> split_combine_statement def
R42654:42676 Tactics <> split_combine_statement def
R43073:43075 Coq.Init.Logic <> :type_scope:x_'='_x not
R43066:43070 Poly <> split def
R43076:43076 Poly <> ::'('_x_','_x_')' not
R43079:43079 Poly <> ::'('_x_','_x_')' not
R43082:43082 Poly <> ::'('_x_','_x_')' not
R43073:43075 Coq.Init.Logic <> :type_scope:x_'='_x not
R43066:43070 Poly <> split def
R43076:43076 Poly <> ::'('_x_','_x_')' not
R43079:43079 Poly <> ::'('_x_','_x_')' not
R43082:43082 Poly <> ::'('_x_','_x_')' not
prf 43338:43348 <> test_filter
R43381:43384 Basics <> bool ind
R43376:43376 Tactics <> X var
R43421:43421 Tactics <> X var
R43427:43430 Poly <> list ind
R43432:43432 Tactics <> X var
R43470:43472 Coq.Init.Logic <> :type_scope:x_'='_x not
R43454:43459 Poly <> filter def
R43467:43467 Tactics <> l var
R43461:43464 Tactics <> test var
R43473:43478 Poly <> filter def
R43487:43488 Poly <> ::x_'::'_x not
R43486:43486 Tactics <> x var
R43489:43489 Tactics <> l var
R43480:43483 Tactics <> test var
R43442:43444 Coq.Init.Logic <> :type_scope:x_'='_x not
R43436:43439 Tactics <> test var
R43441:43441 Tactics <> x var
R43445:43449 Basics <> false constr
R43515:43520 Poly <> filter def
prf 43561:43575 <> filter_exercise
R43610:43613 Basics <> bool ind
R43605:43605 Tactics <> X var
R43650:43650 Tactics <> X var
R43661:43664 Poly <> list ind
R43666:43666 Tactics <> X var
R43713:43715 Coq.Init.Logic <> :type_scope:x_'='_x not
R43707:43710 Tactics <> test var
R43712:43712 Tactics <> x var
R43716:43719 Basics <> true constr
R43688:43690 Coq.Init.Logic <> :type_scope:x_'='_x not
R43675:43680 Poly <> filter def
R43687:43687 Tactics <> l var
R43682:43685 Tactics <> test var
R43692:43695 Poly <> ::x_'::'_x not
R43691:43691 Tactics <> x var
R43696:43697 Tactics <> lf var
R43853:43854 Coq.Init.Logic <> :type_scope:x_'='_x not
R43853:43854 Coq.Init.Logic <> :type_scope:x_'='_x not
R43866:43871 Poly <> filter def
R43985:43990 Poly <> filter def
def 44930:44936 <> forallb
R44953:44956 Basics <> bool ind
R44950:44950 Tactics <> X var
R44962:44965 Poly <> list ind
R44967:44967 Tactics <> X var
R44981:44981 Tactics <> l var
R44996:44998 Poly <> nil constr
R45003:45006 Basics <> true constr
R45016:45019 Poly <> cons constr
R45032:45032 Tactics <> f var
R45059:45063 Basics <> false constr
R45041:45047 Tactics <> forallb def
R45049:45049 Tactics <> f var
def 45082:45088 <> existsb
R45105:45108 Basics <> bool ind
R45102:45102 Tactics <> X var
R45114:45117 Poly <> list ind
R45119:45119 Tactics <> X var
R45133:45133 Tactics <> l var
R45148:45150 Poly <> nil constr
R45155:45159 Basics <> false constr
R45169:45172 Poly <> cons constr
R45185:45185 Tactics <> f var
R45204:45210 Tactics <> existsb def
R45212:45212 Tactics <> f var
R45194:45197 Basics <> true constr
def 45236:45243 <> existsb'
R45260:45263 Basics <> bool ind
R45257:45257 Tactics <> X var
R45269:45272 Poly <> list ind
R45274:45274 Tactics <> X var
R45278:45281 Basics <> bool ind
R45286:45289 Basics <> negb def
R45292:45298 Tactics <> forallb def
R45326:45326 Tactics <> l var
R45308:45308 Tactics <> X var
R45314:45317 Basics <> negb def
R45320:45320 Tactics <> f var
R45322:45322 Tactics <> x var
def 45340:45350 <> test_exist1
R45390:45392 Coq.Init.Logic <> :type_scope:x_'='_x not
R45353:45359 Tactics <> existsb def
R45373:45373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R45378:45378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R45383:45383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R45389:45389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R45384:45388 Basics <> false constr
R45379:45382 Basics <> true constr
R45374:45377 Basics <> true constr
R45362:45365 Basics <> andb def
R45367:45370 Basics <> true constr
R45393:45396 Basics <> true constr
R45413:45420 Tactics <> existsb' def
prf 45459:45473 <> existb_existsb'
R45489:45492 Poly <> list ind
R45494:45494 Tactics <> X var
R45508:45510 Coq.Init.Logic <> :type_scope:x_'='_x not
R45497:45503 Tactics <> existsb def
R45507:45507 Tactics <> l var
R45505:45505 Tactics <> f var
R45511:45518 Tactics <> existsb' def
R45522:45522 Tactics <> l var
R45520:45520 Tactics <> f var
R45573:45580 Tactics <> existsb' def
R45612:45619 Tactics <> existsb' def
