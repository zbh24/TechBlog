DIGEST d93a1570c8052e77784568efc48d6883
FLogic
R45:51 Tactics <> <> lib
R939:941 Coq.Init.Logic <> :type_scope:x_'='_x not
R981:983 Coq.Init.Datatypes <> nat ind
R991:993 Coq.Init.Logic <> :type_scope:x_'='_x not
R987:989 Basics <> :nat_scope:x_'+'_x not
R986:986 Logic <> n var
R990:990 Logic <> m var
R995:997 Basics <> :nat_scope:x_'+'_x not
R994:994 Logic <> m var
R998:998 Logic <> n var
R1238:1240 Coq.Init.Datatypes <> nat ind
R1244:1246 Coq.Init.Logic <> :type_scope:x_'='_x not
R1243:1243 Logic <> n var
R1274:1276 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1606:1618 <> plus_2_2_is_4
R1629:1631 Coq.Init.Logic <> :type_scope:x_'='_x not
R1625:1627 Basics <> :nat_scope:x_'+'_x not
def 1869:1877 <> plus_fact
R1896:1898 Coq.Init.Logic <> :type_scope:x_'='_x not
R1892:1894 Basics <> :nat_scope:x_'+'_x not
R1908:1916 Logic <> plus_fact def
prf 2101:2117 <> plus_fact_is_true
R2123:2131 Logic <> plus_fact def
def 2448:2455 <> is_three
R2462:2464 Coq.Init.Datatypes <> nat ind
R2480:2482 Coq.Init.Logic <> :type_scope:x_'='_x not
R2479:2479 Logic <> n var
R2492:2499 Logic <> is_three def
def 2754:2762 <> injective
R2780:2780 Logic <> B var
R2775:2775 Logic <> A var
R2801:2801 Logic <> A var
R2818:2820 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2817 Logic <> x var
R2821:2821 Logic <> y var
R2807:2809 Coq.Init.Logic <> :type_scope:x_'='_x not
R2804:2804 Logic <> f var
R2806:2806 Logic <> x var
R2810:2810 Logic <> f var
R2812:2812 Logic <> y var
prf 2831:2838 <> succ_inj
R2842:2850 Logic <> injective def
R2852:2852 Coq.Init.Datatypes <> S constr
R3234:3235 Coq.Init.Logic <> eq ind
def 3762:3772 <> and_example
R3785:3788 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3781:3783 Coq.Init.Logic <> :type_scope:x_'='_x not
R3777:3779 Basics <> :nat_scope:x_'+'_x not
R3794:3796 Coq.Init.Logic <> :type_scope:x_'='_x not
R3790:3792 Basics <> :nat_scope:x_'*'_x not
prf 4128:4136 <> and_intro
R4170:4173 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4169:4169 Logic <> A var
R4174:4174 Logic <> B var
R4164:4164 Logic <> B var
R4159:4159 Logic <> A var
def 4739:4750 <> and_example'
R4763:4766 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4759:4761 Coq.Init.Logic <> :type_scope:x_'='_x not
R4755:4757 Basics <> :nat_scope:x_'+'_x not
R4772:4774 Coq.Init.Logic <> :type_scope:x_'='_x not
R4768:4770 Basics <> :nat_scope:x_'*'_x not
R4793:4801 Logic <> and_intro thm
R4793:4801 Logic <> and_intro thm
def 4930:4941 <> and_exercise
R4960:4962 Coq.Init.Datatypes <> nat ind
R4983:4986 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4979:4981 Coq.Init.Logic <> :type_scope:x_'='_x not
R4978:4978 Logic <> n var
R4988:4990 Coq.Init.Logic <> :type_scope:x_'='_x not
R4987:4987 Logic <> m var
R4970:4972 Coq.Init.Logic <> :type_scope:x_'='_x not
R4966:4968 Basics <> :nat_scope:x_'+'_x not
R4965:4965 Logic <> n var
R4969:4969 Logic <> m var
R5074:5082 Logic <> and_intro thm
R5074:5082 Logic <> and_intro thm
prf 5622:5633 <> and_example2
R5652:5654 Coq.Init.Datatypes <> nat ind
R5680:5682 Coq.Init.Logic <> :type_scope:x_'='_x not
R5676:5678 Basics <> :nat_scope:x_'+'_x not
R5675:5675 Logic <> n var
R5679:5679 Logic <> m var
R5662:5665 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5658:5660 Coq.Init.Logic <> :type_scope:x_'='_x not
R5657:5657 Logic <> n var
R5667:5669 Coq.Init.Logic <> :type_scope:x_'='_x not
R5666:5666 Logic <> m var
prf 5903:5915 <> and_example2'
R5934:5936 Coq.Init.Datatypes <> nat ind
R5962:5964 Coq.Init.Logic <> :type_scope:x_'='_x not
R5958:5960 Basics <> :nat_scope:x_'+'_x not
R5957:5957 Logic <> n var
R5961:5961 Logic <> m var
R5944:5947 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5940:5942 Coq.Init.Logic <> :type_scope:x_'='_x not
R5939:5939 Logic <> n var
R5949:5951 Coq.Init.Logic <> :type_scope:x_'='_x not
R5948:5948 Logic <> m var
prf 6243:6256 <> and_example2''
R6275:6277 Coq.Init.Datatypes <> nat ind
R6303:6305 Coq.Init.Logic <> :type_scope:x_'='_x not
R6299:6301 Basics <> :nat_scope:x_'+'_x not
R6298:6298 Logic <> n var
R6302:6302 Logic <> m var
R6290:6292 Coq.Init.Logic <> :type_scope:x_'='_x not
R6289:6289 Logic <> m var
R6281:6283 Coq.Init.Logic <> :type_scope:x_'='_x not
R6280:6280 Logic <> n var
prf 6657:6668 <> and_example3
R6687:6689 Coq.Init.Datatypes <> nat ind
R6710:6712 Coq.Init.Logic <> :type_scope:x_'='_x not
R6706:6708 Basics <> :nat_scope:x_'*'_x not
R6705:6705 Logic <> n var
R6709:6709 Logic <> m var
R6697:6699 Coq.Init.Logic <> :type_scope:x_'='_x not
R6693:6695 Basics <> :nat_scope:x_'+'_x not
R6692:6692 Logic <> n var
R6696:6696 Logic <> m var
R6759:6762 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6755:6757 Coq.Init.Logic <> :type_scope:x_'='_x not
R6764:6766 Coq.Init.Logic <> :type_scope:x_'='_x not
R6759:6762 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6755:6757 Coq.Init.Logic <> :type_scope:x_'='_x not
R6764:6766 Coq.Init.Logic <> :type_scope:x_'='_x not
R6781:6792 Logic <> and_exercise def
R6781:6792 Logic <> and_exercise def
prf 7055:7059 <> proj1
R7094:7094 Logic <> P var
R7085:7088 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7084:7084 Logic <> P var
R7089:7089 Logic <> Q var
prf 7199:7203 <> proj2
R7238:7238 Logic <> Q var
R7229:7232 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7228:7228 Logic <> P var
R7233:7233 Logic <> Q var
prf 7554:7563 <> and_commut
R7599:7602 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7598:7598 Logic <> Q var
R7603:7603 Logic <> P var
R7589:7592 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7588:7588 Logic <> P var
R7593:7593 Logic <> Q var
prf 8000:8008 <> and_assoc
R8052:8052 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8059:8063 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8054:8057 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8053:8053 Logic <> P var
R8058:8058 Logic <> Q var
R8064:8064 Logic <> R var
R8036:8040 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8047:8047 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8035:8035 Logic <> P var
R8042:8045 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8041:8041 Logic <> Q var
R8046:8046 Logic <> R var
R8135:8143 Logic <> and_intro thm
R8135:8143 Logic <> and_intro thm
R8400:8402 Coq.Init.Logic <> and ind
prf 8890:8899 <> or_example
R8918:8920 Coq.Init.Datatypes <> nat ind
R8946:8948 Coq.Init.Logic <> :type_scope:x_'='_x not
R8942:8944 Basics <> :nat_scope:x_'*'_x not
R8941:8941 Logic <> n var
R8945:8945 Logic <> m var
R8928:8931 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8924:8926 Coq.Init.Logic <> :type_scope:x_'='_x not
R8923:8923 Logic <> n var
R8933:8935 Coq.Init.Logic <> :type_scope:x_'='_x not
R8932:8932 Logic <> m var
R9163:9170 Coq.Init.Peano <> mult_n_O thm
R9163:9170 Coq.Init.Peano <> mult_n_O thm
prf 9919:9926 <> or_intro
R9955:9958 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9954:9954 Logic <> A var
R9959:9959 Logic <> B var
R9949:9949 Logic <> A var
prf 10120:10131 <> zero_or_succ
R10148:10150 Coq.Init.Datatypes <> nat ind
R10158:10161 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10154:10156 Coq.Init.Logic <> :type_scope:x_'='_x not
R10153:10153 Logic <> n var
R10163:10165 Coq.Init.Logic <> :type_scope:x_'='_x not
R10162:10162 Logic <> n var
R10166:10166 Coq.Init.Datatypes <> S constr
R10169:10172 Coq.Init.Peano <> pred def
R10174:10174 Logic <> n var
prf 10301:10309 <> mult_eq_0
R10345:10348 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10341:10343 Coq.Init.Logic <> :type_scope:x_'='_x not
R10340:10340 Logic <> n var
R10350:10352 Coq.Init.Logic <> :type_scope:x_'='_x not
R10349:10349 Logic <> m var
R10332:10334 Coq.Init.Logic <> :type_scope:x_'='_x not
R10328:10330 Basics <> :nat_scope:x_'*'_x not
R10327:10327 Logic <> n var
R10331:10331 Logic <> m var
prf 10540:10548 <> or_commut
R10585:10588 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10584:10584 Logic <> Q var
R10589:10589 Logic <> P var
R10574:10577 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10573:10573 Logic <> P var
R10578:10578 Logic <> Q var
mod 11601:11605 <> MyNot
def 11620:11622 MyNot not
R11641:11645 Coq.Init.Logic <> False ind
R11636:11636 Logic <> P var
R11668:11670 Logic MyNot not def
not 11658 MyNot :type_scope:'~'_x
R11696:11698 Logic MyNot not def
ind 11736:11741 MyNot False'
R11761:11765 Logic <> <> mod
prf 11971:11988 <> ex_falso_quodlibet
R12020:12020 Logic <> P var
R12011:12015 Coq.Init.Logic <> False ind
prf 12430:12448 <> not_implies_our_not
R12501:12501 Logic <> Q var
R12496:12496 Logic <> P var
R12471:12472 Coq.Init.Logic <> :type_scope:'~'_x not
R12473:12473 Logic <> P var
R12548:12550 Coq.Init.Logic <> not def
prf 12706:12717 <> zero_not_one
R12721:12722 Coq.Init.Logic <> :type_scope:'~'_x not
R12728:12728 Coq.Init.Logic <> :type_scope:'~'_x not
R12724:12726 Coq.Init.Logic <> :type_scope:x_'='_x not
R12899:12902 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12932:12944 <> zero_not_one'
R12949:12952 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 13358:13366 <> not_False
R13372:13373 Coq.Init.Logic <> :type_scope:'~'_x not
R13374:13378 Coq.Init.Logic <> False ind
R13397:13399 Coq.Init.Logic <> not def
prf 13438:13467 <> contradiction_implies_anything
R13505:13505 Logic <> Q var
R13494:13497 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13493:13493 Logic <> P var
R13498:13498 Coq.Init.Logic <> :type_scope:'~'_x not
R13499:13499 Logic <> P var
R13569:13571 Coq.Init.Logic <> not def
prf 13628:13637 <> double_neg
R13665:13665 Coq.Init.Logic <> :type_scope:'~'_x not
R13666:13666 Coq.Init.Logic <> :type_scope:'~'_x not
R13667:13667 Logic <> P var
R13660:13660 Logic <> P var
R13722:13724 Coq.Init.Logic <> not def
prf 14048:14061 <> contrapositive
R14105:14105 Coq.Init.Logic <> :type_scope:'~'_x not
R14106:14106 Logic <> P var
R14099:14099 Coq.Init.Logic <> :type_scope:'~'_x not
R14100:14100 Logic <> Q var
R14092:14092 Logic <> Q var
R14087:14087 Logic <> P var
R14153:14155 Coq.Init.Logic <> not def
R14165:14167 Coq.Init.Logic <> not def
prf 14299:14321 <> not_both_true_and_false
R14344:14346 Coq.Init.Logic <> :type_scope:'~'_x not
R14354:14354 Coq.Init.Logic <> :type_scope:'~'_x not
R14348:14351 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14347:14347 Logic <> P var
R14352:14352 Coq.Init.Logic <> :type_scope:'~'_x not
R14353:14353 Logic <> P var
R14428:14430 Coq.Init.Logic <> not def
prf 15152:15168 <> not_true_is_false
R15183:15186 Basics <> bool ind
R15205:15207 Coq.Init.Logic <> :type_scope:x_'='_x not
R15204:15204 Logic <> b var
R15208:15212 Basics <> false constr
R15192:15195 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15191:15191 Logic <> b var
R15196:15199 Basics <> true constr
R15267:15269 Coq.Init.Logic <> not def
R15287:15304 Logic <> ex_falso_quodlibet thm
R15287:15304 Logic <> ex_falso_quodlibet thm
prf 15515:15532 <> not_true_is_false'
R15547:15550 Basics <> bool ind
R15569:15571 Coq.Init.Logic <> :type_scope:x_'='_x not
R15568:15568 Logic <> b var
R15572:15576 Basics <> false constr
R15556:15559 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15555:15555 Logic <> b var
R15560:15563 Basics <> true constr
R15632:15634 Coq.Init.Logic <> not def
prf 15943:15954 <> True_is_true
R15958:15961 Coq.Init.Logic <> True ind
R15977:15977 Coq.Init.Logic <> I constr
R15977:15977 Coq.Init.Logic <> I constr
mod 16587:16591 <> MyIff
def 16606:16608 MyIff iff
R16626:16626 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16633:16638 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16645:16645 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16632:16632 Logic <> Q var
R16627:16627 Logic <> P var
R16644:16644 Logic <> P var
R16639:16639 Logic <> Q var
R16672:16674 Logic MyIff iff def
not 16658 MyIff :type_scope:x_'<->'_x
R16776:16780 Logic <> <> mod
prf 16792:16798 <> iff_sym
R16838:16842 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16837:16837 Logic <> Q var
R16843:16843 Logic <> P var
R16825:16829 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16824:16824 Logic <> P var
R16830:16830 Logic <> Q var
prf 16972:16989 <> not_true_iff_false
R17014:17018 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17006:17009 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17005:17005 Logic <> b var
R17010:17013 Basics <> true constr
R17020:17022 Coq.Init.Logic <> :type_scope:x_'='_x not
R17019:17019 Logic <> b var
R17023:17027 Basics <> false constr
R17099:17115 Logic <> not_true_is_false thm
R17099:17115 Logic <> not_true_is_false thm
prf 17382:17389 <> iff_refl
R17413:17417 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17412:17412 Logic <> P var
R17418:17418 Logic <> P var
prf 17495:17503 <> iff_trans
R17558:17562 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17557:17557 Logic <> P var
R17563:17563 Logic <> R var
R17545:17549 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17544:17544 Logic <> Q var
R17550:17550 Logic <> R var
R17532:17536 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17531:17531 Logic <> P var
R17537:17537 Logic <> Q var
prf 17778:17800 <> or_distributes_over_and
R17840:17844 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17828:17832 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17839:17839 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17827:17827 Logic <> P var
R17834:17837 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17833:17833 Logic <> Q var
R17838:17838 Logic <> R var
R17845:17845 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17852:17857 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17864:17864 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17847:17850 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17846:17846 Logic <> P var
R17851:17851 Logic <> Q var
R17859:17862 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17858:17858 Logic <> P var
R17863:17863 Logic <> R var
R18550:18567 Coq.Setoids.Setoid <> <> lib
prf 18719:18724 <> mult_0
R18749:18753 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18745:18747 Coq.Init.Logic <> :type_scope:x_'='_x not
R18741:18743 Basics <> :nat_scope:x_'*'_x not
R18740:18740 Logic <> n var
R18744:18744 Logic <> m var
R18759:18762 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18755:18757 Coq.Init.Logic <> :type_scope:x_'='_x not
R18754:18754 Logic <> n var
R18764:18766 Coq.Init.Logic <> :type_scope:x_'='_x not
R18763:18763 Logic <> m var
R18796:18804 Logic <> mult_eq_0 thm
R18796:18804 Logic <> mult_eq_0 thm
R18817:18826 Logic <> or_example thm
R18817:18826 Logic <> or_example thm
prf 18841:18848 <> or_assoc
R18888:18892 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18876:18880 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18887:18887 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18875:18875 Logic <> P var
R18882:18885 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18881:18881 Logic <> Q var
R18886:18886 Logic <> R var
R18893:18893 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18900:18904 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18895:18898 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18894:18894 Logic <> P var
R18899:18899 Logic <> Q var
R18905:18905 Logic <> R var
prf 19353:19360 <> mult_0_3
R19393:19397 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19389:19391 Coq.Init.Logic <> :type_scope:x_'='_x not
R19385:19387 Basics <> :nat_scope:x_'*'_x not
R19381:19383 Basics <> :nat_scope:x_'*'_x not
R19380:19380 Logic <> n var
R19384:19384 Logic <> m var
R19388:19388 Logic <> p var
R19403:19406 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19399:19401 Coq.Init.Logic <> :type_scope:x_'='_x not
R19398:19398 Logic <> n var
R19412:19415 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19408:19410 Coq.Init.Logic <> :type_scope:x_'='_x not
R19407:19407 Logic <> m var
R19417:19419 Coq.Init.Logic <> :type_scope:x_'='_x not
R19416:19416 Logic <> p var
R19456:19461 Logic <> mult_0 thm
R19456:19461 Logic <> mult_0 thm
R19472:19477 Logic <> mult_0 thm
R19472:19477 Logic <> mult_0 thm
R19488:19495 Logic <> or_assoc thm
R19488:19495 Logic <> or_assoc thm
prf 19693:19709 <> apply_iff_example
R19728:19730 Coq.Init.Datatypes <> nat ind
R19751:19754 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19747:19749 Coq.Init.Logic <> :type_scope:x_'='_x not
R19746:19746 Logic <> n var
R19756:19758 Coq.Init.Logic <> :type_scope:x_'='_x not
R19755:19755 Logic <> m var
R19738:19740 Coq.Init.Logic <> :type_scope:x_'='_x not
R19734:19736 Basics <> :nat_scope:x_'*'_x not
R19733:19733 Logic <> n var
R19737:19737 Logic <> m var
R19791:19796 Logic <> mult_0 thm
R19791:19796 Logic <> mult_0 thm
prf 20682:20693 <> four_is_even
R20697:20703 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20711:20712 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20708:20710 Coq.Init.Datatypes <> nat ind
R20714:20716 Coq.Init.Logic <> :type_scope:x_'='_x not
R20718:20720 Basics <> :nat_scope:x_'+'_x not
R20717:20717 Logic <> n var
R20721:20721 Logic <> n var
prf 20956:20971 <> exists_example_2
R21015:21021 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21023:21024 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21026:21028 Coq.Init.Logic <> :type_scope:x_'='_x not
R21025:21025 Logic <> n var
R21030:21032 Basics <> :nat_scope:x_'+'_x not
R21033:21033 Logic <> o var
R20988:20994 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20996:20997 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20999:21001 Coq.Init.Logic <> :type_scope:x_'='_x not
R20998:20998 Logic <> n var
R21003:21005 Basics <> :nat_scope:x_'+'_x not
R21006:21006 Logic <> m var
R21074:21076 Basics <> :nat_scope:x_'+'_x not
R21074:21076 Basics <> :nat_scope:x_'+'_x not
prf 21258:21272 <> dist_not_exists
R21297:21297 Logic <> X var
R21330:21332 Coq.Init.Logic <> :type_scope:'~'_x not
R21348:21348 Coq.Init.Logic <> :type_scope:'~'_x not
R21333:21339 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21341:21342 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21343:21344 Coq.Init.Logic <> :type_scope:'~'_x not
R21345:21345 Logic <> P var
R21347:21347 Logic <> x var
R21322:21322 Logic <> P var
R21324:21324 Logic <> x var
R21436:21438 Coq.Init.Logic <> not def
prf 21618:21631 <> dist_exists_or
R21658:21658 Logic <> X var
R21672:21672 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21693:21698 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21673:21679 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21681:21682 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21686:21689 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21683:21683 Logic <> P var
R21685:21685 Logic <> x var
R21690:21690 Logic <> Q var
R21692:21692 Logic <> x var
R21699:21699 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21713:21718 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21732:21732 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21700:21706 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21708:21709 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21710:21710 Logic <> P var
R21712:21712 Logic <> x var
R21719:21725 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21727:21728 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21729:21729 Logic <> Q var
R21731:21731 Logic <> x var
def 22800:22801 <> In
R22819:22819 Logic <> A var
R22827:22830 Poly <> list ind
R22832:22832 Logic <> A var
R22853:22853 Logic <> l var
R22864:22865 Poly <> ::'['_']' not
R22870:22874 Coq.Init.Logic <> False ind
R22882:22885 Poly <> ::x_'::'_x not
R22898:22901 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22894:22896 Coq.Init.Logic <> :type_scope:x_'='_x not
R22897:22897 Logic <> x var
R22902:22903 Logic <> In def
R22905:22905 Logic <> x var
def 23065:23076 <> In_example_1
R23080:23081 Logic <> In def
R23085:23085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23087:23088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23090:23091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23093:23093 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23152:23163 <> In_example_2
R23196:23202 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23205:23206 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23208:23210 Coq.Init.Logic <> :type_scope:x_'='_x not
R23207:23207 Logic <> n var
R23212:23214 Basics <> :nat_scope:x_'*'_x not
R23215:23216 Logic <> n' var
R23179:23180 Logic <> In def
R23184:23184 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23186:23187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23189:23189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23182:23182 Logic <> n var
prf 23654:23659 <> In_map
R23695:23695 Logic <> B var
R23690:23690 Logic <> A var
R23703:23706 Poly <> list ind
R23708:23708 Logic <> A var
R23716:23716 Logic <> A var
R23738:23739 Logic <> In def
R23748:23750 Poly <> map def
R23754:23754 Logic <> l var
R23752:23752 Logic <> f var
R23742:23742 Logic <> f var
R23744:23744 Logic <> x var
R23724:23725 Logic <> In def
R23729:23729 Logic <> l var
R23727:23727 Logic <> x var
prf 24485:24494 <> In_map_iff
R24530:24530 Logic <> B var
R24525:24525 Logic <> A var
R24538:24541 Poly <> list ind
R24543:24543 Logic <> A var
R24551:24551 Logic <> B var
R24573:24581 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24559:24560 Logic <> In def
R24565:24567 Poly <> map def
R24571:24571 Logic <> l var
R24569:24569 Logic <> f var
R24562:24562 Logic <> y var
R24582:24588 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24590:24591 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24599:24602 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24595:24597 Coq.Init.Logic <> :type_scope:x_'='_x not
R24592:24592 Logic <> f var
R24594:24594 Logic <> x var
R24598:24598 Logic <> y var
R24603:24604 Logic <> In def
R24608:24608 Logic <> l var
R24606:24606 Logic <> x var
prf 25272:25278 <> in_app3
R25295:25298 Poly <> list ind
R25300:25300 Logic <> X var
R25306:25306 Logic <> X var
R25312:25312 Logic <> X var
R25334:25335 Logic <> In def
R25341:25344 Poly <> ::x_'++'_x not
R25340:25340 Logic <> l var
R25346:25347 Poly <> ::x_'::'_x not
R25345:25345 Logic <> a var
R25348:25349 Logic <> l' var
R25337:25337 Logic <> x var
R25316:25317 Logic <> In def
R25323:25326 Poly <> ::x_'++'_x not
R25322:25322 Logic <> l var
R25327:25328 Logic <> l' var
R25319:25319 Logic <> x var
prf 25528:25534 <> In_comm
R25551:25554 Poly <> list ind
R25556:25556 Logic <> X var
R25562:25562 Logic <> X var
R25584:25585 Logic <> In def
R25592:25593 Poly <> ::x_'++'_x not
R25590:25591 Logic <> l' var
R25594:25594 Logic <> l var
R25587:25587 Logic <> a var
R25566:25567 Logic <> In def
R25573:25576 Poly <> ::x_'++'_x not
R25572:25572 Logic <> l var
R25577:25578 Logic <> l' var
R25569:25569 Logic <> a var
R25676:25684 Poly <> app_nil_r thm
R25676:25684 Poly <> app_nil_r thm
R25894:25902 Poly <> app_nil_r thm
R25894:25902 Poly <> app_nil_r thm
R26042:26048 Logic <> in_app3 thm
R26042:26048 Logic <> in_app3 thm
prf 26073:26078 <> in_app
R26095:26098 Poly <> list ind
R26100:26100 Logic <> X var
R26106:26106 Logic <> X var
R26120:26121 Logic <> In def
R26127:26128 Poly <> ::x_'++'_x not
R26126:26126 Logic <> l var
R26129:26130 Logic <> l' var
R26123:26123 Logic <> a var
R26110:26111 Logic <> In def
R26115:26115 Logic <> l var
R26113:26113 Logic <> a var
prf 26569:26578 <> in_app_iff
R26599:26599 Logic <> A var
R26617:26621 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26605:26606 Logic <> In def
R26612:26613 Poly <> ::x_'++'_x not
R26611:26611 Logic <> l var
R26614:26615 Logic <> l' var
R26608:26608 Logic <> a var
R26628:26631 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26622:26623 Logic <> In def
R26627:26627 Logic <> l var
R26625:26625 Logic <> a var
R26632:26633 Logic <> In def
R26637:26638 Logic <> l' var
R26635:26635 Logic <> a var
R27151:27156 Logic <> in_app thm
R27151:27156 Logic <> in_app thm
R27199:27200 Logic <> In def
R27209:27215 Logic <> In_comm thm
R27209:27215 Logic <> In_comm thm
R27224:27229 Logic <> in_app thm
R27224:27229 Logic <> in_app thm
def 27826:27828 <> All
R27839:27839 Logic <> T var
R27855:27858 Poly <> list ind
R27860:27860 Logic <> T var
R27902:27902 Logic <> l var
R27917:27919 Poly <> nil constr
R27924:27927 Coq.Init.Logic <> True ind
R27939:27942 Poly <> ::x_'::'_x not
R27953:27956 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27949:27949 Logic <> P var
R27957:27959 Logic <> All def
R27961:27961 Logic <> P var
prf 27980:27985 <> All_In
R28005:28005 Logic <> T var
R28021:28024 Poly <> list ind
R28026:28026 Logic <> T var
R28034:28034 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R28058:28067 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R28055:28055 Logic <> P var
R28057:28057 Logic <> x var
R28045:28046 Logic <> In def
R28050:28050 Logic <> l var
R28048:28048 Logic <> x var
R28068:28070 Logic <> All def
R28074:28074 Logic <> l var
R28072:28072 Logic <> P var
R28180:28180 Coq.Init.Logic <> I constr
R28180:28180 Coq.Init.Logic <> I constr
R28249:28250 Logic <> In def
R28258:28261 Poly <> ::x_'::'_x not
R28249:28250 Logic <> In def
R28258:28261 Poly <> ::x_'::'_x not
R28360:28361 Logic <> In def
R28368:28369 Poly <> ::x_'::'_x not
R28360:28361 Logic <> In def
R28368:28369 Poly <> ::x_'::'_x not
def 29047:29062 <> combine_odd_even
R29078:29080 Coq.Init.Datatypes <> nat ind
R29093:29095 Coq.Init.Datatypes <> nat ind
R29147:29150 Basics <> oddb def
R29152:29152 Logic <> n var
R29176:29179 Basics <> true constr
R29184:29187 Logic <> Podd var
R29189:29189 Logic <> n var
R29208:29212 Basics <> false constr
R29217:29221 Logic <> Peven var
R29223:29223 Logic <> n var
prf 29310:29331 <> combine_odd_even_intro
R29358:29360 Coq.Init.Datatypes <> nat ind
R29376:29378 Coq.Init.Datatypes <> nat ind
R29454:29469 Logic <> combine_odd_even def
R29482:29482 Logic <> n var
R29476:29480 Logic <> Peven var
R29471:29474 Logic <> Podd var
R29438:29442 Logic <> Peven var
R29444:29444 Logic <> n var
R29426:29428 Coq.Init.Logic <> :type_scope:x_'='_x not
R29420:29423 Basics <> oddb def
R29425:29425 Logic <> n var
R29429:29433 Basics <> false constr
R29404:29407 Logic <> Podd var
R29409:29409 Logic <> n var
R29393:29395 Coq.Init.Logic <> :type_scope:x_'='_x not
R29387:29390 Basics <> oddb def
R29392:29392 Logic <> n var
R29396:29399 Basics <> true constr
R29535:29550 Logic <> combine_odd_even def
R29563:29566 Basics <> oddb def
R29563:29566 Basics <> oddb def
prf 29638:29662 <> combine_odd_even_elim_odd
R29689:29691 Coq.Init.Datatypes <> nat ind
R29707:29709 Coq.Init.Datatypes <> nat ind
R29775:29778 Logic <> Podd var
R29780:29780 Logic <> n var
R29760:29762 Coq.Init.Logic <> :type_scope:x_'='_x not
R29754:29757 Basics <> oddb def
R29759:29759 Logic <> n var
R29763:29766 Basics <> true constr
R29717:29732 Logic <> combine_odd_even def
R29745:29745 Logic <> n var
R29739:29743 Logic <> Peven var
R29734:29737 Logic <> Podd var
R29826:29841 Logic <> combine_odd_even def
prf 29889:29914 <> combine_odd_even_elim_even
R29941:29943 Coq.Init.Datatypes <> nat ind
R29959:29961 Coq.Init.Datatypes <> nat ind
R30028:30032 Logic <> Peven var
R30034:30034 Logic <> n var
R30012:30014 Coq.Init.Logic <> :type_scope:x_'='_x not
R30006:30009 Basics <> oddb def
R30011:30011 Logic <> n var
R30015:30019 Basics <> false constr
R29969:29984 Logic <> combine_odd_even def
R29997:29997 Logic <> n var
R29991:29995 Logic <> Peven var
R29986:29989 Logic <> Podd var
R30081:30096 Logic <> combine_odd_even def
R30871:30879 Induction <> plus_comm thm
prf 32190:32199 <> plus_comm3
R32230:32232 Coq.Init.Logic <> :type_scope:x_'='_x not
R32220:32223 Basics <> :nat_scope:x_'+'_x not
R32229:32229 Basics <> :nat_scope:x_'+'_x not
R32219:32219 Logic <> n var
R32225:32227 Basics <> :nat_scope:x_'+'_x not
R32224:32224 Logic <> m var
R32228:32228 Logic <> p var
R32233:32233 Basics <> :nat_scope:x_'+'_x not
R32239:32242 Basics <> :nat_scope:x_'+'_x not
R32235:32237 Basics <> :nat_scope:x_'+'_x not
R32234:32234 Logic <> p var
R32238:32238 Logic <> m var
R32243:32243 Logic <> n var
R32516:32524 Induction <> plus_comm thm
R32516:32524 Induction <> plus_comm thm
R32537:32545 Induction <> plus_comm thm
R32537:32545 Induction <> plus_comm thm
R32814:32822 Induction <> plus_comm thm
R32814:32822 Induction <> plus_comm thm
R32844:32846 Coq.Init.Logic <> :type_scope:x_'='_x not
R32840:32842 Basics <> :nat_scope:x_'+'_x not
R32848:32850 Basics <> :nat_scope:x_'+'_x not
R32844:32846 Coq.Init.Logic <> :type_scope:x_'='_x not
R32840:32842 Basics <> :nat_scope:x_'+'_x not
R32848:32850 Basics <> :nat_scope:x_'+'_x not
R32867:32875 Induction <> plus_comm thm
R32867:32875 Induction <> plus_comm thm
prf 33134:33149 <> plus_comm3_take2
R33180:33182 Coq.Init.Logic <> :type_scope:x_'='_x not
R33170:33173 Basics <> :nat_scope:x_'+'_x not
R33179:33179 Basics <> :nat_scope:x_'+'_x not
R33169:33169 Logic <> n var
R33175:33177 Basics <> :nat_scope:x_'+'_x not
R33174:33174 Logic <> m var
R33178:33178 Logic <> p var
R33183:33183 Basics <> :nat_scope:x_'+'_x not
R33189:33192 Basics <> :nat_scope:x_'+'_x not
R33185:33187 Basics <> :nat_scope:x_'+'_x not
R33184:33184 Logic <> p var
R33188:33188 Logic <> m var
R33193:33193 Logic <> n var
R33229:33237 Induction <> plus_comm thm
R33229:33237 Induction <> plus_comm thm
R33251:33259 Induction <> plus_comm thm
R33251:33259 Induction <> plus_comm thm
def 33738:33757 <> lemma_application_ex
R33775:33777 Coq.Init.Datatypes <> nat ind
R33786:33789 Poly <> list ind
R33791:33793 Coq.Init.Datatypes <> nat ind
R33840:33842 Coq.Init.Logic <> :type_scope:x_'='_x not
R33839:33839 Logic <> n var
R33801:33802 Logic <> In def
R33807:33809 Poly <> map def
R33828:33829 Logic <> ns var
R33822:33824 Basics <> :nat_scope:x_'*'_x not
R33821:33821 Logic <> m var
R33804:33804 Logic <> n var
R33882:33886 Logic <> proj1 thm
R33893:33902 Logic <> In_map_iff prfax
R33882:33886 Logic <> proj1 thm
R33893:33902 Logic <> In_map_iff prfax
R33954:33961 Induction <> mult_0_r thm
R33954:33961 Induction <> mult_0_r thm
def 35817:35836 <> function_equality_ex
R35846:35848 Coq.Init.Logic <> :type_scope:x_'='_x not
R35840:35843 Coq.Init.Peano <> plus def
R35849:35852 Coq.Init.Peano <> plus def
R35855:35858 Coq.Init.Peano <> pred def
ax 36712:36736 <> functional_extensionality
R36807:36807 Logic <> Y var
R36802:36802 Logic <> X var
R36843:36845 Coq.Init.Logic <> :type_scope:x_'='_x not
R36842:36842 Logic <> f var
R36846:36846 Logic <> g var
R36824:36824 Logic <> X var
R36831:36833 Coq.Init.Logic <> :type_scope:x_'='_x not
R36828:36828 Logic <> f var
R36830:36830 Logic <> x var
R36834:36834 Logic <> g var
R36836:36836 Logic <> x var
prf 37132:37144 <> plus_comm_ext
R37152:37154 Coq.Init.Logic <> :type_scope:x_'='_x not
R37148:37151 Coq.Init.Peano <> plus def
R37167:37169 Basics <> :nat_scope:x_'+'_x not
R37166:37166 Logic <> m var
R37170:37170 Logic <> n var
R37188:37212 Logic <> functional_extensionality prfax
R37188:37212 Logic <> functional_extensionality prfax
R37233:37257 Logic <> functional_extensionality prfax
R37233:37257 Logic <> functional_extensionality prfax
R37278:37286 Induction <> plus_comm thm
R37278:37286 Induction <> plus_comm thm
R38057:38069 Logic <> plus_comm_ext thm
def 38605:38614 <> rev_append
R38629:38632 Poly <> list ind
R38634:38634 Logic <> X var
R38639:38642 Poly <> list ind
R38644:38644 Logic <> X var
R38657:38658 Logic <> l1 var
R38669:38670 Poly <> ::'['_']' not
R38675:38676 Logic <> l2 var
R38683:38686 Poly <> ::x_'::'_x not
R38694:38703 Logic <> rev_append def
R38711:38714 Poly <> ::x_'::'_x not
R38715:38716 Logic <> l2 var
def 38738:38743 <> tr_rev
R38754:38757 Poly <> list ind
R38759:38759 Logic <> X var
R38764:38767 Poly <> list ind
R38769:38769 Logic <> X var
R38776:38785 Logic <> rev_append def
R38789:38790 Poly <> ::'['_']' not
R38787:38787 Logic <> l var
prf 39143:39156 <> tr_rev_correct
R39179:39181 Coq.Init.Logic <> :type_scope:x_'='_x not
R39171:39176 Logic <> tr_rev def
R39178:39178 Logic <> X var
R39183:39185 Poly <> rev def
R39187:39187 Logic <> X var
R39231:39255 Logic <> functional_extensionality prfax
R39231:39255 Logic <> functional_extensionality prfax
R39302:39307 Logic <> tr_rev def
R39346:39351 Logic <> tr_rev def
R39361:39366 Logic <> tr_rev def
prf 40149:40160 <> evenb_double
R40190:40192 Coq.Init.Logic <> :type_scope:x_'='_x not
R40174:40178 Basics <> evenb def
R40181:40186 Induction <> double def
R40188:40188 Logic <> k var
R40193:40196 Basics <> true constr
prf 40350:40366 <> evenb_double_conv
R40382:40388 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40390:40391 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40393:40395 Coq.Init.Logic <> :type_scope:x_'='_x not
R40392:40392 Logic <> n var
R40399:40403 Basics <> evenb def
R40405:40405 Logic <> n var
R40442:40442 Coq.Init.Datatypes <> S constr
R40445:40450 Induction <> double def
R40452:40452 Logic <> k var
R40412:40417 Induction <> double def
R40419:40419 Logic <> k var
R40556:40560 Basics <> evenb def
R40563:40563 Coq.Init.Datatypes <> S constr
R40556:40560 Basics <> evenb def
R40563:40563 Coq.Init.Datatypes <> S constr
R40586:40592 Induction <> evenb_S thm
R40586:40592 Induction <> evenb_S thm
R40611:40615 Basics <> evenb def
R40611:40615 Basics <> evenb def
R40651:40651 Coq.Init.Datatypes <> S constr
R40651:40651 Coq.Init.Datatypes <> S constr
R40700:40704 Basics <> evenb def
R40700:40704 Basics <> evenb def
R40821:40827 Induction <> evenb_S thm
R40821:40827 Induction <> evenb_S thm
R40846:40850 Basics <> evenb def
R40846:40850 Basics <> evenb def
prf 40981:40994 <> even_bool_prop
R41024:41028 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R41017:41019 Coq.Init.Logic <> :type_scope:x_'='_x not
R41010:41014 Basics <> evenb def
R41016:41016 Logic <> n var
R41020:41023 Basics <> true constr
R41029:41035 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41037:41038 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41040:41042 Coq.Init.Logic <> :type_scope:x_'='_x not
R41039:41039 Logic <> n var
R41043:41048 Induction <> double def
R41050:41050 Logic <> k var
R41103:41119 Logic <> evenb_double_conv thm
R41103:41119 Logic <> evenb_double_conv thm
R41222:41233 Logic <> evenb_double thm
R41222:41233 Logic <> evenb_double thm
prf 41438:41453 <> beq_nat_true_iff
R41472:41474 Coq.Init.Datatypes <> nat ind
R41499:41503 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R41492:41494 Coq.Init.Logic <> :type_scope:x_'='_x not
R41479:41485 Basics <> beq_nat def
R41490:41491 Logic <> n2 var
R41487:41488 Logic <> n1 var
R41495:41498 Basics <> true constr
R41506:41508 Coq.Init.Logic <> :type_scope:x_'='_x not
R41504:41505 Logic <> n1 var
R41509:41510 Logic <> n2 var
R41553:41564 Tactics <> beq_nat_true thm
R41553:41564 Tactics <> beq_nat_true thm
R41603:41614 Induction <> beq_nat_refl thm
R41603:41614 Induction <> beq_nat_refl thm
def 42850:42862 <> is_even_prime
R42875:42877 Coq.Init.Logic <> :type_scope:x_'='_x not
R42874:42874 Logic <> n var
R42897:42901 Basics <> false constr
R42885:42888 Basics <> true constr
def 44432:44440 <> even_1000
R44444:44450 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44452:44453 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44458:44460 Coq.Init.Logic <> :type_scope:x_'='_x not
R44461:44466 Induction <> double def
R44468:44468 Logic <> k var
def 44703:44712 <> even_1000'
R44726:44728 Coq.Init.Logic <> :type_scope:x_'='_x not
R44716:44720 Basics <> evenb def
R44729:44732 Basics <> true constr
def 44945:44955 <> even_1000''
R44959:44965 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44967:44968 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44973:44975 Coq.Init.Logic <> :type_scope:x_'='_x not
R44976:44981 Induction <> double def
R44983:44983 Logic <> k var
R44999:45012 Logic <> even_bool_prop thm
R44999:45012 Logic <> even_bool_prop thm
prf 45728:45740 <> andb_true_iff
R45757:45760 Basics <> bool ind
R45780:45784 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45773:45775 Coq.Init.Logic <> :type_scope:x_'='_x not
R45767:45770 Basics <> ::x_'&&'_x not
R45765:45766 Logic <> b1 var
R45771:45772 Logic <> b2 var
R45776:45779 Basics <> true constr
R45794:45797 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45787:45789 Coq.Init.Logic <> :type_scope:x_'='_x not
R45785:45786 Logic <> b1 var
R45790:45793 Basics <> true constr
R45800:45802 Coq.Init.Logic <> :type_scope:x_'='_x not
R45798:45799 Logic <> b2 var
R45803:45806 Basics <> true constr
prf 46152:46163 <> orb_true_iff
R46198:46202 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46191:46193 Coq.Init.Logic <> :type_scope:x_'='_x not
R46185:46188 Basics <> ::x_'||'_x not
R46183:46184 Logic <> b1 var
R46189:46190 Logic <> b2 var
R46194:46197 Basics <> true constr
R46212:46215 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46205:46207 Coq.Init.Logic <> :type_scope:x_'='_x not
R46203:46204 Logic <> b1 var
R46208:46211 Basics <> true constr
R46218:46220 Coq.Init.Logic <> :type_scope:x_'='_x not
R46216:46217 Logic <> b2 var
R46221:46224 Basics <> true constr
prf 46760:46776 <> beq_nat_false_iff
R46793:46795 Coq.Init.Datatypes <> nat ind
R46819:46823 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46811:46813 Coq.Init.Logic <> :type_scope:x_'='_x not
R46800:46806 Basics <> beq_nat def
R46810:46810 Logic <> y var
R46808:46808 Logic <> x var
R46814:46818 Basics <> false constr
R46825:46828 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R46824:46824 Logic <> x var
R46829:46829 Logic <> y var
R46925:46927 Coq.Init.Logic <> not def
R47084:47090 Basics <> beq_nat def
R47084:47090 Basics <> beq_nat def
R47176:47182 Basics <> beq_nat def
R47196:47207 Induction <> beq_nat_refl thm
R47196:47207 Induction <> beq_nat_refl thm
R47239:47241 Coq.Init.Logic <> not def
def 47662:47669 <> beq_list
R47692:47695 Basics <> bool ind
R47687:47687 Logic <> A var
R47682:47682 Logic <> A var
R47725:47728 Poly <> list ind
R47730:47730 Logic <> A var
R47735:47738 Basics <> bool ind
R47755:47756 Logic <> l2 var
R47751:47752 Logic <> l1 var
R47771:47773 Poly <> nil constr
R47776:47778 Poly <> nil constr
R47783:47786 Basics <> true constr
R47796:47798 Poly <> nil constr
R47805:47809 Basics <> false constr
R47821:47824 Poly <> ::x_'::'_x not
R47830:47832 Poly <> nil constr
R47837:47841 Basics <> false constr
R47853:47856 Poly <> ::x_'::'_x not
R47864:47867 Poly <> ::x_'::'_x not
R47878:47880 Logic <> beq var
R47919:47923 Basics <> false constr
R47893:47900 Logic <> beq_list def
R47902:47904 Logic <> beq var
prf 47950:47966 <> beq_list_true_iff
R47998:48001 Basics <> bool ind
R47993:47993 Logic <> A var
R47988:47988 Logic <> A var
R48100:48104 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48093:48095 Coq.Init.Logic <> :type_scope:x_'='_x not
R48075:48082 Logic <> beq_list def
R48091:48092 Logic <> l2 var
R48088:48089 Logic <> l1 var
R48084:48086 Logic <> beq var
R48096:48099 Basics <> true constr
R48107:48109 Coq.Init.Logic <> :type_scope:x_'='_x not
R48105:48106 Logic <> l1 var
R48110:48111 Logic <> l2 var
R48040:48044 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48033:48035 Coq.Init.Logic <> :type_scope:x_'='_x not
R48024:48026 Logic <> beq var
R48031:48032 Logic <> a2 var
R48028:48029 Logic <> a1 var
R48036:48039 Basics <> true constr
R48047:48049 Coq.Init.Logic <> :type_scope:x_'='_x not
R48045:48046 Logic <> a1 var
R48050:48051 Logic <> a2 var
def 48337:48343 <> forallb
R48369:48372 Basics <> bool ind
R48364:48364 Logic <> X var
R48380:48383 Poly <> list ind
R48385:48385 Logic <> X var
R48390:48393 Basics <> bool ind
R48406:48406 Logic <> l var
R48417:48418 Poly <> ::'['_']' not
R48423:48426 Basics <> true constr
R48433:48436 Poly <> ::x_'::'_x not
R48443:48446 Basics <> andb def
R48458:48464 Logic <> forallb def
R48466:48469 Logic <> test var
R48449:48452 Logic <> test var
prf 48597:48612 <> forallb_true_iff
R48635:48638 Poly <> list ind
R48640:48640 Logic <> X var
R48668:48672 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48661:48663 Coq.Init.Logic <> :type_scope:x_'='_x not
R48647:48653 Logic <> forallb def
R48660:48660 Logic <> l var
R48655:48658 Logic <> test var
R48664:48667 Basics <> true constr
R48673:48675 Logic <> All def
R48702:48702 Logic <> l var
R48693:48695 Coq.Init.Logic <> :type_scope:x_'='_x not
R48687:48690 Logic <> test var
R48692:48692 Logic <> x var
R48696:48699 Basics <> true constr
R48789:48789 Coq.Init.Logic <> I constr
R48789:48789 Coq.Init.Logic <> I constr
R48852:48864 Logic <> andb_true_iff thm
R48852:48864 Logic <> andb_true_iff thm
R48981:48993 Logic <> andb_true_iff thm
R48981:48993 Logic <> andb_true_iff thm
def 49547:49561 <> excluded_middle
R49586:49589 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R49585:49585 Logic <> P var
R49590:49591 Coq.Init.Logic <> :type_scope:'~'_x not
R49592:49592 Logic <> P var
prf 50402:50427 <> restricted_excluded_middle
R50466:50469 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50465:50465 Logic <> P var
R50470:50471 Coq.Init.Logic <> :type_scope:'~'_x not
R50472:50472 Logic <> P var
R50447:50451 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R50446:50446 Logic <> P var
R50453:50455 Coq.Init.Logic <> :type_scope:x_'='_x not
R50452:50452 Logic <> b var
R50456:50459 Basics <> true constr
prf 54772:54798 <> excluded_middle_irrefutable
R54821:54822 Coq.Init.Logic <> :type_scope:'~'_x not
R54823:54825 Coq.Init.Logic <> :type_scope:'~'_x not
R54834:54834 Coq.Init.Logic <> :type_scope:'~'_x not
R54827:54830 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54826:54826 Logic <> P var
R54831:54832 Coq.Init.Logic <> :type_scope:'~'_x not
R54833:54833 Logic <> P var
R54882:54884 Coq.Init.Logic <> not def
R54969:54995 Logic <> excluded_middle_irrefutable thm
prf 55443:55457 <> not_exists_dist
R55505:55505 Logic <> X var
R55555:55555 Logic <> P var
R55557:55557 Logic <> x var
R55521:55523 Coq.Init.Logic <> :type_scope:'~'_x not
R55539:55539 Coq.Init.Logic <> :type_scope:'~'_x not
R55524:55530 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55532:55533 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55534:55535 Coq.Init.Logic <> :type_scope:'~'_x not
R55536:55536 Logic <> P var
R55538:55538 Logic <> x var
R55463:55477 Logic <> excluded_middle def
R55604:55606 Coq.Init.Logic <> not def
R55630:55633 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R55634:55635 Coq.Init.Logic <> :type_scope:'~'_x not
R55630:55633 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R55634:55635 Coq.Init.Logic <> :type_scope:'~'_x not
R55696:55698 Coq.Init.Logic <> not def
R55717:55723 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55725:55725 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55733:55737 Coq.Init.Logic <> False ind
R55728:55728 Logic <> x var
R55717:55723 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55725:55725 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55733:55737 Coq.Init.Logic <> False ind
R55728:55728 Logic <> x var
def 56380:56385 <> peirce
R56423:56423 Logic <> P var
R56419:56419 Logic <> P var
R56415:56415 Logic <> Q var
R56412:56412 Logic <> P var
def 56437:56463 <> double_negation_elimination
R56492:56492 Logic <> P var
R56485:56485 Coq.Init.Logic <> :type_scope:'~'_x not
R56486:56486 Coq.Init.Logic <> :type_scope:'~'_x not
R56487:56487 Logic <> P var
def 56506:56526 <> de_morgan_not_and_not
R56566:56567 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56565:56565 Logic <> P var
R56568:56568 Logic <> Q var
R56550:56551 Coq.Init.Logic <> :type_scope:'~'_x not
R56560:56560 Coq.Init.Logic <> :type_scope:'~'_x not
R56554:56557 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R56552:56552 Coq.Init.Logic <> :type_scope:'~'_x not
R56553:56553 Logic <> P var
R56558:56558 Coq.Init.Logic <> :type_scope:'~'_x not
R56559:56559 Logic <> Q var
def 56582:56594 <> implies_to_or
R56631:56632 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56629:56629 Coq.Init.Logic <> :type_scope:'~'_x not
R56630:56630 Logic <> P var
R56633:56633 Logic <> Q var
R56622:56622 Logic <> Q var
R56619:56619 Logic <> P var
prf 56676:56687 <> equal_peirce
R56707:56711 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R56692:56706 Logic <> excluded_middle def
R56712:56717 Logic <> peirce def
R56751:56756 Logic <> peirce def
R56766:56780 Logic <> excluded_middle def
R56807:56810 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56811:56811 Coq.Init.Logic <> :type_scope:'~'_x not
R56807:56810 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56811:56811 Coq.Init.Logic <> :type_scope:'~'_x not
R56857:56859 Coq.Init.Logic <> not def
R56925:56930 Logic <> peirce def
R56940:56954 Logic <> excluded_middle def
prf 57022:57054 <> equal_double_negation_elimination
R57074:57078 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R57059:57073 Logic <> excluded_middle def
R57079:57105 Logic <> double_negation_elimination def
R57147:57173 Logic <> double_negation_elimination def
R57183:57197 Logic <> excluded_middle def
R57220:57222 Coq.Init.Logic <> not def
R57238:57240 Coq.Init.Logic <> not def
R57260:57264 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57275:57275 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57270:57274 Coq.Init.Logic <> False ind
R57260:57264 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57275:57275 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57270:57274 Coq.Init.Logic <> False ind
R57365:57391 Logic <> double_negation_elimination def
R57401:57415 Logic <> excluded_middle def
R57451:57451 Coq.Init.Logic <> :type_scope:'~'_x not
R57452:57454 Coq.Init.Logic <> :type_scope:'~'_x not
R57463:57463 Coq.Init.Logic <> :type_scope:'~'_x not
R57456:57459 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57455:57455 Logic <> P var
R57460:57461 Coq.Init.Logic <> :type_scope:'~'_x not
R57462:57462 Logic <> P var
R57451:57451 Coq.Init.Logic <> :type_scope:'~'_x not
R57452:57454 Coq.Init.Logic <> :type_scope:'~'_x not
R57463:57463 Coq.Init.Logic <> :type_scope:'~'_x not
R57456:57459 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57455:57455 Logic <> P var
R57460:57461 Coq.Init.Logic <> :type_scope:'~'_x not
R57462:57462 Logic <> P var
R57476:57502 Logic <> excluded_middle_irrefutable thm
R57476:57502 Logic <> excluded_middle_irrefutable thm
