DIGEST 36f16bc670388e0dc3bca8dba2e75fb4
FLogic
R45:51 Tactics <> <> lib
R939:941 Coq.Init.Logic <> :type_scope:x_'='_x not
R981:983 Coq.Init.Datatypes <> nat ind
R991:993 Coq.Init.Logic <> :type_scope:x_'='_x not
R987:989 Basics <> :nat_scope:x_'+'_x not
R986:986 Logic <> n var
R990:990 Logic <> m var
R995:997 Basics <> :nat_scope:x_'+'_x not
R994:994 Logic <> m var
R998:998 Logic <> n var
R1238:1240 Coq.Init.Datatypes <> nat ind
R1244:1246 Coq.Init.Logic <> :type_scope:x_'='_x not
R1243:1243 Logic <> n var
R1274:1276 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1606:1618 <> plus_2_2_is_4
R1629:1631 Coq.Init.Logic <> :type_scope:x_'='_x not
R1625:1627 Basics <> :nat_scope:x_'+'_x not
def 1869:1877 <> plus_fact
R1896:1898 Coq.Init.Logic <> :type_scope:x_'='_x not
R1892:1894 Basics <> :nat_scope:x_'+'_x not
R1908:1916 Logic <> plus_fact def
prf 2101:2117 <> plus_fact_is_true
R2123:2131 Logic <> plus_fact def
def 2448:2455 <> is_three
R2462:2464 Coq.Init.Datatypes <> nat ind
R2480:2482 Coq.Init.Logic <> :type_scope:x_'='_x not
R2479:2479 Logic <> n var
R2492:2499 Logic <> is_three def
def 2754:2762 <> injective
R2780:2780 Logic <> B var
R2775:2775 Logic <> A var
R2801:2801 Logic <> A var
R2818:2820 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2817 Logic <> x var
R2821:2821 Logic <> y var
R2807:2809 Coq.Init.Logic <> :type_scope:x_'='_x not
R2804:2804 Logic <> f var
R2806:2806 Logic <> x var
R2810:2810 Logic <> f var
R2812:2812 Logic <> y var
prf 2831:2838 <> succ_inj
R2842:2850 Logic <> injective def
R2852:2852 Coq.Init.Datatypes <> S constr
R3234:3235 Coq.Init.Logic <> eq ind
def 3762:3772 <> and_example
R3785:3788 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3781:3783 Coq.Init.Logic <> :type_scope:x_'='_x not
R3777:3779 Basics <> :nat_scope:x_'+'_x not
R3794:3796 Coq.Init.Logic <> :type_scope:x_'='_x not
R3790:3792 Basics <> :nat_scope:x_'*'_x not
prf 4128:4136 <> and_intro
R4170:4173 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4169:4169 Logic <> A var
R4174:4174 Logic <> B var
R4164:4164 Logic <> B var
R4159:4159 Logic <> A var
def 4739:4750 <> and_example'
R4763:4766 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4759:4761 Coq.Init.Logic <> :type_scope:x_'='_x not
R4755:4757 Basics <> :nat_scope:x_'+'_x not
R4772:4774 Coq.Init.Logic <> :type_scope:x_'='_x not
R4768:4770 Basics <> :nat_scope:x_'*'_x not
R4793:4801 Logic <> and_intro thm
R4793:4801 Logic <> and_intro thm
def 4930:4941 <> and_exercise
R4960:4962 Coq.Init.Datatypes <> nat ind
R4983:4986 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4979:4981 Coq.Init.Logic <> :type_scope:x_'='_x not
R4978:4978 Logic <> n var
R4988:4990 Coq.Init.Logic <> :type_scope:x_'='_x not
R4987:4987 Logic <> m var
R4970:4972 Coq.Init.Logic <> :type_scope:x_'='_x not
R4966:4968 Basics <> :nat_scope:x_'+'_x not
R4965:4965 Logic <> n var
R4969:4969 Logic <> m var
R5074:5082 Logic <> and_intro thm
R5074:5082 Logic <> and_intro thm
prf 5622:5633 <> and_example2
R5652:5654 Coq.Init.Datatypes <> nat ind
R5680:5682 Coq.Init.Logic <> :type_scope:x_'='_x not
R5676:5678 Basics <> :nat_scope:x_'+'_x not
R5675:5675 Logic <> n var
R5679:5679 Logic <> m var
R5662:5665 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5658:5660 Coq.Init.Logic <> :type_scope:x_'='_x not
R5657:5657 Logic <> n var
R5667:5669 Coq.Init.Logic <> :type_scope:x_'='_x not
R5666:5666 Logic <> m var
prf 5903:5915 <> and_example2'
R5934:5936 Coq.Init.Datatypes <> nat ind
R5962:5964 Coq.Init.Logic <> :type_scope:x_'='_x not
R5958:5960 Basics <> :nat_scope:x_'+'_x not
R5957:5957 Logic <> n var
R5961:5961 Logic <> m var
R5944:5947 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5940:5942 Coq.Init.Logic <> :type_scope:x_'='_x not
R5939:5939 Logic <> n var
R5949:5951 Coq.Init.Logic <> :type_scope:x_'='_x not
R5948:5948 Logic <> m var
prf 6243:6256 <> and_example2''
R6275:6277 Coq.Init.Datatypes <> nat ind
R6303:6305 Coq.Init.Logic <> :type_scope:x_'='_x not
R6299:6301 Basics <> :nat_scope:x_'+'_x not
R6298:6298 Logic <> n var
R6302:6302 Logic <> m var
R6290:6292 Coq.Init.Logic <> :type_scope:x_'='_x not
R6289:6289 Logic <> m var
R6281:6283 Coq.Init.Logic <> :type_scope:x_'='_x not
R6280:6280 Logic <> n var
prf 6657:6668 <> and_example3
R6687:6689 Coq.Init.Datatypes <> nat ind
R6710:6712 Coq.Init.Logic <> :type_scope:x_'='_x not
R6706:6708 Basics <> :nat_scope:x_'*'_x not
R6705:6705 Logic <> n var
R6709:6709 Logic <> m var
R6697:6699 Coq.Init.Logic <> :type_scope:x_'='_x not
R6693:6695 Basics <> :nat_scope:x_'+'_x not
R6692:6692 Logic <> n var
R6696:6696 Logic <> m var
R6759:6762 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6755:6757 Coq.Init.Logic <> :type_scope:x_'='_x not
R6764:6766 Coq.Init.Logic <> :type_scope:x_'='_x not
R6759:6762 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6755:6757 Coq.Init.Logic <> :type_scope:x_'='_x not
R6764:6766 Coq.Init.Logic <> :type_scope:x_'='_x not
R6781:6792 Logic <> and_exercise def
R6781:6792 Logic <> and_exercise def
prf 7055:7059 <> proj1
R7094:7094 Logic <> P var
R7085:7088 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7084:7084 Logic <> P var
R7089:7089 Logic <> Q var
prf 7199:7203 <> proj2
R7238:7238 Logic <> Q var
R7229:7232 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7228:7228 Logic <> P var
R7233:7233 Logic <> Q var
prf 7554:7563 <> and_commut
R7599:7602 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7598:7598 Logic <> Q var
R7603:7603 Logic <> P var
R7589:7592 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7588:7588 Logic <> P var
R7593:7593 Logic <> Q var
prf 8000:8008 <> and_assoc
R8052:8052 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8059:8063 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8054:8057 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8053:8053 Logic <> P var
R8058:8058 Logic <> Q var
R8064:8064 Logic <> R var
R8036:8040 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8047:8047 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8035:8035 Logic <> P var
R8042:8045 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8041:8041 Logic <> Q var
R8046:8046 Logic <> R var
R8135:8143 Logic <> and_intro thm
R8135:8143 Logic <> and_intro thm
R8400:8402 Coq.Init.Logic <> and ind
prf 8890:8899 <> or_example
R8918:8920 Coq.Init.Datatypes <> nat ind
R8946:8948 Coq.Init.Logic <> :type_scope:x_'='_x not
R8942:8944 Basics <> :nat_scope:x_'*'_x not
R8941:8941 Logic <> n var
R8945:8945 Logic <> m var
R8928:8931 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8924:8926 Coq.Init.Logic <> :type_scope:x_'='_x not
R8923:8923 Logic <> n var
R8933:8935 Coq.Init.Logic <> :type_scope:x_'='_x not
R8932:8932 Logic <> m var
R9163:9170 Coq.Init.Peano <> mult_n_O thm
R9163:9170 Coq.Init.Peano <> mult_n_O thm
prf 9919:9926 <> or_intro
R9955:9958 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9954:9954 Logic <> A var
R9959:9959 Logic <> B var
R9949:9949 Logic <> A var
prf 10120:10131 <> zero_or_succ
R10148:10150 Coq.Init.Datatypes <> nat ind
R10158:10161 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10154:10156 Coq.Init.Logic <> :type_scope:x_'='_x not
R10153:10153 Logic <> n var
R10163:10165 Coq.Init.Logic <> :type_scope:x_'='_x not
R10162:10162 Logic <> n var
R10166:10166 Coq.Init.Datatypes <> S constr
R10169:10172 Coq.Init.Peano <> pred def
R10174:10174 Logic <> n var
prf 10301:10309 <> mult_eq_0
R10345:10348 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10341:10343 Coq.Init.Logic <> :type_scope:x_'='_x not
R10340:10340 Logic <> n var
R10350:10352 Coq.Init.Logic <> :type_scope:x_'='_x not
R10349:10349 Logic <> m var
R10332:10334 Coq.Init.Logic <> :type_scope:x_'='_x not
R10328:10330 Basics <> :nat_scope:x_'*'_x not
R10327:10327 Logic <> n var
R10331:10331 Logic <> m var
prf 10540:10548 <> or_commut
R10585:10588 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10584:10584 Logic <> Q var
R10589:10589 Logic <> P var
R10574:10577 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10573:10573 Logic <> P var
R10578:10578 Logic <> Q var
mod 11601:11605 <> MyNot
def 11620:11622 MyNot not
R11641:11645 Coq.Init.Logic <> False ind
R11636:11636 Logic <> P var
R11668:11670 Logic MyNot not def
not 11658 MyNot :type_scope:'~'_x
R11696:11698 Logic MyNot not def
ind 11736:11741 MyNot False'
R11761:11765 Logic <> <> mod
prf 11971:11988 <> ex_falso_quodlibet
R12020:12020 Logic <> P var
R12011:12015 Coq.Init.Logic <> False ind
prf 12430:12448 <> not_implies_our_not
R12501:12501 Logic <> Q var
R12496:12496 Logic <> P var
R12471:12472 Coq.Init.Logic <> :type_scope:'~'_x not
R12473:12473 Logic <> P var
R12548:12550 Coq.Init.Logic <> not def
prf 12706:12717 <> zero_not_one
R12721:12722 Coq.Init.Logic <> :type_scope:'~'_x not
R12728:12728 Coq.Init.Logic <> :type_scope:'~'_x not
R12724:12726 Coq.Init.Logic <> :type_scope:x_'='_x not
R12899:12902 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12932:12944 <> zero_not_one'
R12949:12952 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 13358:13366 <> not_False
R13372:13373 Coq.Init.Logic <> :type_scope:'~'_x not
R13374:13378 Coq.Init.Logic <> False ind
R13397:13399 Coq.Init.Logic <> not def
prf 13438:13467 <> contradiction_implies_anything
R13505:13505 Logic <> Q var
R13494:13497 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13493:13493 Logic <> P var
R13498:13498 Coq.Init.Logic <> :type_scope:'~'_x not
R13499:13499 Logic <> P var
R13569:13571 Coq.Init.Logic <> not def
prf 13628:13637 <> double_neg
R13665:13665 Coq.Init.Logic <> :type_scope:'~'_x not
R13666:13666 Coq.Init.Logic <> :type_scope:'~'_x not
R13667:13667 Logic <> P var
R13660:13660 Logic <> P var
R13722:13724 Coq.Init.Logic <> not def
prf 14048:14061 <> contrapositive
R14105:14105 Coq.Init.Logic <> :type_scope:'~'_x not
R14106:14106 Logic <> P var
R14099:14099 Coq.Init.Logic <> :type_scope:'~'_x not
R14100:14100 Logic <> Q var
R14092:14092 Logic <> Q var
R14087:14087 Logic <> P var
R14153:14155 Coq.Init.Logic <> not def
R14165:14167 Coq.Init.Logic <> not def
prf 14299:14321 <> not_both_true_and_false
R14344:14346 Coq.Init.Logic <> :type_scope:'~'_x not
R14354:14354 Coq.Init.Logic <> :type_scope:'~'_x not
R14348:14351 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14347:14347 Logic <> P var
R14352:14352 Coq.Init.Logic <> :type_scope:'~'_x not
R14353:14353 Logic <> P var
R14428:14430 Coq.Init.Logic <> not def
prf 15152:15168 <> not_true_is_false
R15183:15186 Basics <> bool ind
R15205:15207 Coq.Init.Logic <> :type_scope:x_'='_x not
R15204:15204 Logic <> b var
R15208:15212 Basics <> false constr
R15192:15195 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15191:15191 Logic <> b var
R15196:15199 Basics <> true constr
R15267:15269 Coq.Init.Logic <> not def
R15287:15304 Logic <> ex_falso_quodlibet thm
R15287:15304 Logic <> ex_falso_quodlibet thm
prf 15515:15532 <> not_true_is_false'
R15547:15550 Basics <> bool ind
R15569:15571 Coq.Init.Logic <> :type_scope:x_'='_x not
R15568:15568 Logic <> b var
R15572:15576 Basics <> false constr
R15556:15559 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15555:15555 Logic <> b var
R15560:15563 Basics <> true constr
R15632:15634 Coq.Init.Logic <> not def
prf 15943:15954 <> True_is_true
R15958:15961 Coq.Init.Logic <> True ind
R15977:15977 Coq.Init.Logic <> I constr
R15977:15977 Coq.Init.Logic <> I constr
mod 16587:16591 <> MyIff
def 16606:16608 MyIff iff
R16626:16626 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16633:16638 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16645:16645 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16632:16632 Logic <> Q var
R16627:16627 Logic <> P var
R16644:16644 Logic <> P var
R16639:16639 Logic <> Q var
R16672:16674 Logic MyIff iff def
not 16658 MyIff :type_scope:x_'<->'_x
R16776:16780 Logic <> <> mod
prf 16792:16798 <> iff_sym
R16838:16842 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16837:16837 Logic <> Q var
R16843:16843 Logic <> P var
R16825:16829 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16824:16824 Logic <> P var
R16830:16830 Logic <> Q var
prf 16972:16989 <> not_true_iff_false
R17014:17018 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17006:17009 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17005:17005 Logic <> b var
R17010:17013 Basics <> true constr
R17020:17022 Coq.Init.Logic <> :type_scope:x_'='_x not
R17019:17019 Logic <> b var
R17023:17027 Basics <> false constr
R17099:17115 Logic <> not_true_is_false thm
R17099:17115 Logic <> not_true_is_false thm
prf 17382:17389 <> iff_refl
R17413:17417 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17412:17412 Logic <> P var
R17418:17418 Logic <> P var
prf 17495:17503 <> iff_trans
R17558:17562 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17557:17557 Logic <> P var
R17563:17563 Logic <> R var
R17545:17549 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17544:17544 Logic <> Q var
R17550:17550 Logic <> R var
R17532:17536 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17531:17531 Logic <> P var
R17537:17537 Logic <> Q var
prf 17778:17800 <> or_distributes_over_and
R17840:17844 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17828:17832 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17839:17839 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17827:17827 Logic <> P var
R17834:17837 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17833:17833 Logic <> Q var
R17838:17838 Logic <> R var
R17845:17845 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17852:17857 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17864:17864 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17847:17850 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17846:17846 Logic <> P var
R17851:17851 Logic <> Q var
R17859:17862 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17858:17858 Logic <> P var
R17863:17863 Logic <> R var
R18550:18567 Coq.Setoids.Setoid <> <> lib
prf 18719:18724 <> mult_0
R18749:18753 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18745:18747 Coq.Init.Logic <> :type_scope:x_'='_x not
R18741:18743 Basics <> :nat_scope:x_'*'_x not
R18740:18740 Logic <> n var
R18744:18744 Logic <> m var
R18759:18762 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18755:18757 Coq.Init.Logic <> :type_scope:x_'='_x not
R18754:18754 Logic <> n var
R18764:18766 Coq.Init.Logic <> :type_scope:x_'='_x not
R18763:18763 Logic <> m var
R18796:18804 Logic <> mult_eq_0 thm
R18796:18804 Logic <> mult_eq_0 thm
R18817:18826 Logic <> or_example thm
R18817:18826 Logic <> or_example thm
prf 18841:18848 <> or_assoc
R18888:18892 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18876:18880 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18887:18887 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18875:18875 Logic <> P var
R18882:18885 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18881:18881 Logic <> Q var
R18886:18886 Logic <> R var
R18893:18893 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18900:18904 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18895:18898 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18894:18894 Logic <> P var
R18899:18899 Logic <> Q var
R18905:18905 Logic <> R var
prf 19353:19360 <> mult_0_3
R19393:19397 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19389:19391 Coq.Init.Logic <> :type_scope:x_'='_x not
R19385:19387 Basics <> :nat_scope:x_'*'_x not
R19381:19383 Basics <> :nat_scope:x_'*'_x not
R19380:19380 Logic <> n var
R19384:19384 Logic <> m var
R19388:19388 Logic <> p var
R19403:19406 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19399:19401 Coq.Init.Logic <> :type_scope:x_'='_x not
R19398:19398 Logic <> n var
R19412:19415 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19408:19410 Coq.Init.Logic <> :type_scope:x_'='_x not
R19407:19407 Logic <> m var
R19417:19419 Coq.Init.Logic <> :type_scope:x_'='_x not
R19416:19416 Logic <> p var
R19456:19461 Logic <> mult_0 thm
R19456:19461 Logic <> mult_0 thm
R19472:19477 Logic <> mult_0 thm
R19472:19477 Logic <> mult_0 thm
R19488:19495 Logic <> or_assoc thm
R19488:19495 Logic <> or_assoc thm
prf 19693:19709 <> apply_iff_example
R19728:19730 Coq.Init.Datatypes <> nat ind
R19751:19754 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19747:19749 Coq.Init.Logic <> :type_scope:x_'='_x not
R19746:19746 Logic <> n var
R19756:19758 Coq.Init.Logic <> :type_scope:x_'='_x not
R19755:19755 Logic <> m var
R19738:19740 Coq.Init.Logic <> :type_scope:x_'='_x not
R19734:19736 Basics <> :nat_scope:x_'*'_x not
R19733:19733 Logic <> n var
R19737:19737 Logic <> m var
R19791:19796 Logic <> mult_0 thm
R19791:19796 Logic <> mult_0 thm
prf 20682:20693 <> four_is_even
R20697:20703 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20711:20712 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20708:20710 Coq.Init.Datatypes <> nat ind
R20714:20716 Coq.Init.Logic <> :type_scope:x_'='_x not
R20718:20720 Basics <> :nat_scope:x_'+'_x not
R20717:20717 Logic <> n var
R20721:20721 Logic <> n var
prf 20956:20971 <> exists_example_2
R21015:21021 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21023:21024 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21026:21028 Coq.Init.Logic <> :type_scope:x_'='_x not
R21025:21025 Logic <> n var
R21030:21032 Basics <> :nat_scope:x_'+'_x not
R21033:21033 Logic <> o var
R20988:20994 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20996:20997 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20999:21001 Coq.Init.Logic <> :type_scope:x_'='_x not
R20998:20998 Logic <> n var
R21003:21005 Basics <> :nat_scope:x_'+'_x not
R21006:21006 Logic <> m var
R21074:21076 Basics <> :nat_scope:x_'+'_x not
R21074:21076 Basics <> :nat_scope:x_'+'_x not
prf 21258:21272 <> dist_not_exists
R21297:21297 Logic <> X var
R21330:21332 Coq.Init.Logic <> :type_scope:'~'_x not
R21348:21348 Coq.Init.Logic <> :type_scope:'~'_x not
R21333:21339 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21341:21342 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21343:21344 Coq.Init.Logic <> :type_scope:'~'_x not
R21345:21345 Logic <> P var
R21347:21347 Logic <> x var
R21322:21322 Logic <> P var
R21324:21324 Logic <> x var
R21436:21438 Coq.Init.Logic <> not def
prf 21618:21631 <> dist_exists_or
R21658:21658 Logic <> X var
R21672:21672 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21693:21698 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21673:21679 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21681:21682 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21686:21689 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21683:21683 Logic <> P var
R21685:21685 Logic <> x var
R21690:21690 Logic <> Q var
R21692:21692 Logic <> x var
R21699:21699 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21713:21718 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21732:21732 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21700:21706 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21708:21709 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21710:21710 Logic <> P var
R21712:21712 Logic <> x var
R21719:21725 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21727:21728 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21729:21729 Logic <> Q var
R21731:21731 Logic <> x var
def 22800:22801 <> In
R22819:22819 Logic <> A var
R22827:22830 Poly <> list ind
R22832:22832 Logic <> A var
R22853:22853 Logic <> l var
R22864:22865 Poly <> ::'['_']' not
R22870:22874 Coq.Init.Logic <> False ind
R22882:22885 Poly <> ::x_'::'_x not
R22898:22901 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22894:22896 Coq.Init.Logic <> :type_scope:x_'='_x not
R22897:22897 Logic <> x var
R22902:22903 Logic <> In def
R22905:22905 Logic <> x var
def 23065:23076 <> In_example_1
R23080:23081 Logic <> In def
R23085:23085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23087:23088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23090:23091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23093:23093 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23152:23163 <> In_example_2
R23196:23202 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23205:23206 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23208:23210 Coq.Init.Logic <> :type_scope:x_'='_x not
R23207:23207 Logic <> n var
R23212:23214 Basics <> :nat_scope:x_'*'_x not
R23215:23216 Logic <> n' var
R23179:23180 Logic <> In def
R23184:23184 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23186:23187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23189:23189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23182:23182 Logic <> n var
prf 23654:23659 <> In_map
R23695:23695 Logic <> B var
R23690:23690 Logic <> A var
R23703:23706 Poly <> list ind
R23708:23708 Logic <> A var
R23716:23716 Logic <> A var
R23738:23739 Logic <> In def
R23748:23750 Poly <> map def
R23754:23754 Logic <> l var
R23752:23752 Logic <> f var
R23742:23742 Logic <> f var
R23744:23744 Logic <> x var
R23724:23725 Logic <> In def
R23729:23729 Logic <> l var
R23727:23727 Logic <> x var
prf 24485:24494 <> In_map_iff
R24530:24530 Logic <> B var
R24525:24525 Logic <> A var
R24538:24541 Poly <> list ind
R24543:24543 Logic <> A var
R24551:24551 Logic <> B var
R24573:24581 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24559:24560 Logic <> In def
R24565:24567 Poly <> map def
R24571:24571 Logic <> l var
R24569:24569 Logic <> f var
R24562:24562 Logic <> y var
R24582:24588 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24590:24591 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24599:24602 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24595:24597 Coq.Init.Logic <> :type_scope:x_'='_x not
R24592:24592 Logic <> f var
R24594:24594 Logic <> x var
R24598:24598 Logic <> y var
R24603:24604 Logic <> In def
R24608:24608 Logic <> l var
R24606:24606 Logic <> x var
prf 25208:25214 <> in_app3
R25231:25234 Poly <> list ind
R25236:25236 Logic <> X var
R25242:25242 Logic <> X var
R25248:25248 Logic <> X var
R25270:25271 Logic <> In def
R25277:25280 Poly <> ::x_'++'_x not
R25276:25276 Logic <> l var
R25282:25283 Poly <> ::x_'::'_x not
R25281:25281 Logic <> a var
R25284:25285 Logic <> l' var
R25273:25273 Logic <> x var
R25252:25253 Logic <> In def
R25259:25262 Poly <> ::x_'++'_x not
R25258:25258 Logic <> l var
R25263:25264 Logic <> l' var
R25255:25255 Logic <> x var
prf 25464:25470 <> In_comm
R25487:25490 Poly <> list ind
R25492:25492 Logic <> X var
R25498:25498 Logic <> X var
R25520:25521 Logic <> In def
R25528:25529 Poly <> ::x_'++'_x not
R25526:25527 Logic <> l' var
R25530:25530 Logic <> l var
R25523:25523 Logic <> a var
R25502:25503 Logic <> In def
R25509:25512 Poly <> ::x_'++'_x not
R25508:25508 Logic <> l var
R25513:25514 Logic <> l' var
R25505:25505 Logic <> a var
R25612:25620 Poly <> app_nil_r thm
R25612:25620 Poly <> app_nil_r thm
R25830:25838 Poly <> app_nil_r thm
R25830:25838 Poly <> app_nil_r thm
R25978:25984 Logic <> in_app3 thm
R25978:25984 Logic <> in_app3 thm
prf 26009:26014 <> in_app
R26031:26034 Poly <> list ind
R26036:26036 Logic <> X var
R26042:26042 Logic <> X var
R26056:26057 Logic <> In def
R26063:26064 Poly <> ::x_'++'_x not
R26062:26062 Logic <> l var
R26065:26066 Logic <> l' var
R26059:26059 Logic <> a var
R26046:26047 Logic <> In def
R26051:26051 Logic <> l var
R26049:26049 Logic <> a var
prf 26505:26514 <> in_app_iff
R26535:26535 Logic <> A var
R26553:26557 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26541:26542 Logic <> In def
R26548:26549 Poly <> ::x_'++'_x not
R26547:26547 Logic <> l var
R26550:26551 Logic <> l' var
R26544:26544 Logic <> a var
R26564:26567 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26558:26559 Logic <> In def
R26563:26563 Logic <> l var
R26561:26561 Logic <> a var
R26568:26569 Logic <> In def
R26573:26574 Logic <> l' var
R26571:26571 Logic <> a var
R27087:27092 Logic <> in_app thm
R27087:27092 Logic <> in_app thm
R27135:27136 Logic <> In def
R27145:27151 Logic <> In_comm thm
R27145:27151 Logic <> In_comm thm
R27160:27165 Logic <> in_app thm
R27160:27165 Logic <> in_app thm
def 27762:27764 <> All
R27775:27775 Logic <> T var
R27791:27794 Poly <> list ind
R27796:27796 Logic <> T var
R27838:27838 Logic <> l var
R27853:27855 Poly <> nil constr
R27860:27863 Coq.Init.Logic <> True ind
R27875:27878 Poly <> ::x_'::'_x not
R27889:27892 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27885:27885 Logic <> P var
R27893:27895 Logic <> All def
R27897:27897 Logic <> P var
prf 27916:27921 <> All_In
R27941:27941 Logic <> T var
R27957:27960 Poly <> list ind
R27962:27962 Logic <> T var
R27970:27970 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27994:28003 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27991:27991 Logic <> P var
R27993:27993 Logic <> x var
R27981:27982 Logic <> In def
R27986:27986 Logic <> l var
R27984:27984 Logic <> x var
R28004:28006 Logic <> All def
R28010:28010 Logic <> l var
R28008:28008 Logic <> P var
R28116:28116 Coq.Init.Logic <> I constr
R28116:28116 Coq.Init.Logic <> I constr
R28185:28186 Logic <> In def
R28194:28197 Poly <> ::x_'::'_x not
R28185:28186 Logic <> In def
R28194:28197 Poly <> ::x_'::'_x not
R28296:28297 Logic <> In def
R28304:28305 Poly <> ::x_'::'_x not
R28296:28297 Logic <> In def
R28304:28305 Poly <> ::x_'::'_x not
def 28983:28998 <> combine_odd_even
R29014:29016 Coq.Init.Datatypes <> nat ind
R29029:29031 Coq.Init.Datatypes <> nat ind
R29083:29086 Basics <> oddb def
R29088:29088 Logic <> n var
R29112:29115 Basics <> true constr
R29120:29123 Logic <> Podd var
R29125:29125 Logic <> n var
R29144:29148 Basics <> false constr
R29153:29157 Logic <> Peven var
R29159:29159 Logic <> n var
prf 29246:29267 <> combine_odd_even_intro
R29294:29296 Coq.Init.Datatypes <> nat ind
R29312:29314 Coq.Init.Datatypes <> nat ind
R29390:29405 Logic <> combine_odd_even def
R29418:29418 Logic <> n var
R29412:29416 Logic <> Peven var
R29407:29410 Logic <> Podd var
R29374:29378 Logic <> Peven var
R29380:29380 Logic <> n var
R29362:29364 Coq.Init.Logic <> :type_scope:x_'='_x not
R29356:29359 Basics <> oddb def
R29361:29361 Logic <> n var
R29365:29369 Basics <> false constr
R29340:29343 Logic <> Podd var
R29345:29345 Logic <> n var
R29329:29331 Coq.Init.Logic <> :type_scope:x_'='_x not
R29323:29326 Basics <> oddb def
R29328:29328 Logic <> n var
R29332:29335 Basics <> true constr
R29471:29486 Logic <> combine_odd_even def
R29499:29502 Basics <> oddb def
R29499:29502 Basics <> oddb def
prf 29574:29598 <> combine_odd_even_elim_odd
R29625:29627 Coq.Init.Datatypes <> nat ind
R29643:29645 Coq.Init.Datatypes <> nat ind
R29711:29714 Logic <> Podd var
R29716:29716 Logic <> n var
R29696:29698 Coq.Init.Logic <> :type_scope:x_'='_x not
R29690:29693 Basics <> oddb def
R29695:29695 Logic <> n var
R29699:29702 Basics <> true constr
R29653:29668 Logic <> combine_odd_even def
R29681:29681 Logic <> n var
R29675:29679 Logic <> Peven var
R29670:29673 Logic <> Podd var
R29762:29777 Logic <> combine_odd_even def
prf 29825:29850 <> combine_odd_even_elim_even
R29877:29879 Coq.Init.Datatypes <> nat ind
R29895:29897 Coq.Init.Datatypes <> nat ind
R29964:29968 Logic <> Peven var
R29970:29970 Logic <> n var
R29948:29950 Coq.Init.Logic <> :type_scope:x_'='_x not
R29942:29945 Basics <> oddb def
R29947:29947 Logic <> n var
R29951:29955 Basics <> false constr
R29905:29920 Logic <> combine_odd_even def
R29933:29933 Logic <> n var
R29927:29931 Logic <> Peven var
R29922:29925 Logic <> Podd var
R30017:30032 Logic <> combine_odd_even def
R30807:30815 Induction <> plus_comm thm
prf 32126:32135 <> plus_comm3
R32166:32168 Coq.Init.Logic <> :type_scope:x_'='_x not
R32156:32159 Basics <> :nat_scope:x_'+'_x not
R32165:32165 Basics <> :nat_scope:x_'+'_x not
R32155:32155 Logic <> n var
R32161:32163 Basics <> :nat_scope:x_'+'_x not
R32160:32160 Logic <> m var
R32164:32164 Logic <> p var
R32169:32169 Basics <> :nat_scope:x_'+'_x not
R32175:32178 Basics <> :nat_scope:x_'+'_x not
R32171:32173 Basics <> :nat_scope:x_'+'_x not
R32170:32170 Logic <> p var
R32174:32174 Logic <> m var
R32179:32179 Logic <> n var
R32452:32460 Induction <> plus_comm thm
R32452:32460 Induction <> plus_comm thm
R32473:32481 Induction <> plus_comm thm
R32473:32481 Induction <> plus_comm thm
R32750:32758 Induction <> plus_comm thm
R32750:32758 Induction <> plus_comm thm
R32780:32782 Coq.Init.Logic <> :type_scope:x_'='_x not
R32776:32778 Basics <> :nat_scope:x_'+'_x not
R32784:32786 Basics <> :nat_scope:x_'+'_x not
R32780:32782 Coq.Init.Logic <> :type_scope:x_'='_x not
R32776:32778 Basics <> :nat_scope:x_'+'_x not
R32784:32786 Basics <> :nat_scope:x_'+'_x not
R32803:32811 Induction <> plus_comm thm
R32803:32811 Induction <> plus_comm thm
prf 33070:33085 <> plus_comm3_take2
R33116:33118 Coq.Init.Logic <> :type_scope:x_'='_x not
R33106:33109 Basics <> :nat_scope:x_'+'_x not
R33115:33115 Basics <> :nat_scope:x_'+'_x not
R33105:33105 Logic <> n var
R33111:33113 Basics <> :nat_scope:x_'+'_x not
R33110:33110 Logic <> m var
R33114:33114 Logic <> p var
R33119:33119 Basics <> :nat_scope:x_'+'_x not
R33125:33128 Basics <> :nat_scope:x_'+'_x not
R33121:33123 Basics <> :nat_scope:x_'+'_x not
R33120:33120 Logic <> p var
R33124:33124 Logic <> m var
R33129:33129 Logic <> n var
R33165:33173 Induction <> plus_comm thm
R33165:33173 Induction <> plus_comm thm
R33187:33195 Induction <> plus_comm thm
R33187:33195 Induction <> plus_comm thm
def 33674:33693 <> lemma_application_ex
R33711:33713 Coq.Init.Datatypes <> nat ind
R33722:33725 Poly <> list ind
R33727:33729 Coq.Init.Datatypes <> nat ind
R33776:33778 Coq.Init.Logic <> :type_scope:x_'='_x not
R33775:33775 Logic <> n var
R33737:33738 Logic <> In def
R33743:33745 Poly <> map def
R33764:33765 Logic <> ns var
R33758:33760 Basics <> :nat_scope:x_'*'_x not
R33757:33757 Logic <> m var
R33740:33740 Logic <> n var
R33818:33822 Logic <> proj1 thm
R33829:33838 Logic <> In_map_iff thm
R33818:33822 Logic <> proj1 thm
R33829:33838 Logic <> In_map_iff thm
R33890:33897 Induction <> mult_0_r thm
R33890:33897 Induction <> mult_0_r thm
def 35753:35772 <> function_equality_ex
R35782:35784 Coq.Init.Logic <> :type_scope:x_'='_x not
R35776:35779 Coq.Init.Peano <> plus def
R35785:35788 Coq.Init.Peano <> plus def
R35791:35794 Coq.Init.Peano <> pred def
ax 36648:36672 <> functional_extensionality
R36743:36743 Logic <> Y var
R36738:36738 Logic <> X var
R36779:36781 Coq.Init.Logic <> :type_scope:x_'='_x not
R36778:36778 Logic <> f var
R36782:36782 Logic <> g var
R36760:36760 Logic <> X var
R36767:36769 Coq.Init.Logic <> :type_scope:x_'='_x not
R36764:36764 Logic <> f var
R36766:36766 Logic <> x var
R36770:36770 Logic <> g var
R36772:36772 Logic <> x var
prf 37068:37080 <> plus_comm_ext
R37088:37090 Coq.Init.Logic <> :type_scope:x_'='_x not
R37084:37087 Coq.Init.Peano <> plus def
R37103:37105 Basics <> :nat_scope:x_'+'_x not
R37102:37102 Logic <> m var
R37106:37106 Logic <> n var
R37124:37148 Logic <> functional_extensionality prfax
R37124:37148 Logic <> functional_extensionality prfax
R37169:37193 Logic <> functional_extensionality prfax
R37169:37193 Logic <> functional_extensionality prfax
R37214:37222 Induction <> plus_comm thm
R37214:37222 Induction <> plus_comm thm
R37993:38005 Logic <> plus_comm_ext thm
def 38541:38550 <> rev_append
R38565:38568 Poly <> list ind
R38570:38570 Logic <> X var
R38575:38578 Poly <> list ind
R38580:38580 Logic <> X var
R38593:38594 Logic <> l1 var
R38605:38606 Poly <> ::'['_']' not
R38611:38612 Logic <> l2 var
R38619:38622 Poly <> ::x_'::'_x not
R38630:38639 Logic <> rev_append def
R38647:38650 Poly <> ::x_'::'_x not
R38651:38652 Logic <> l2 var
def 38674:38679 <> tr_rev
R38690:38693 Poly <> list ind
R38695:38695 Logic <> X var
R38700:38703 Poly <> list ind
R38705:38705 Logic <> X var
R38712:38721 Logic <> rev_append def
R38725:38726 Poly <> ::'['_']' not
R38723:38723 Logic <> l var
prf 39079:39092 <> tr_rev_correct
R39115:39117 Coq.Init.Logic <> :type_scope:x_'='_x not
R39107:39112 Logic <> tr_rev def
R39114:39114 Logic <> X var
R39119:39121 Poly <> rev def
R39123:39123 Logic <> X var
R39167:39191 Logic <> functional_extensionality prfax
R39167:39191 Logic <> functional_extensionality prfax
R39240:39245 Logic <> tr_rev def
R39286:39291 Logic <> tr_rev def
R39301:39306 Logic <> tr_rev def
prf 40089:40100 <> evenb_double
R40130:40132 Coq.Init.Logic <> :type_scope:x_'='_x not
R40114:40118 Basics <> evenb def
R40121:40126 Induction <> double def
R40128:40128 Logic <> k var
R40133:40136 Basics <> true constr
prf 40290:40306 <> evenb_double_conv
R40322:40328 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40330:40331 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40333:40335 Coq.Init.Logic <> :type_scope:x_'='_x not
R40332:40332 Logic <> n var
R40339:40343 Basics <> evenb def
R40345:40345 Logic <> n var
R40382:40382 Coq.Init.Datatypes <> S constr
R40385:40390 Induction <> double def
R40392:40392 Logic <> k var
R40352:40357 Induction <> double def
R40359:40359 Logic <> k var
R40496:40500 Basics <> evenb def
R40503:40503 Coq.Init.Datatypes <> S constr
R40496:40500 Basics <> evenb def
R40503:40503 Coq.Init.Datatypes <> S constr
R40526:40532 Induction <> evenb_S thm
R40526:40532 Induction <> evenb_S thm
R40551:40555 Basics <> evenb def
R40551:40555 Basics <> evenb def
R40591:40591 Coq.Init.Datatypes <> S constr
R40591:40591 Coq.Init.Datatypes <> S constr
R40640:40644 Basics <> evenb def
R40640:40644 Basics <> evenb def
R40761:40767 Induction <> evenb_S thm
R40761:40767 Induction <> evenb_S thm
R40786:40790 Basics <> evenb def
R40786:40790 Basics <> evenb def
prf 40921:40934 <> even_bool_prop
R40964:40968 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R40957:40959 Coq.Init.Logic <> :type_scope:x_'='_x not
R40950:40954 Basics <> evenb def
R40956:40956 Logic <> n var
R40960:40963 Basics <> true constr
R40969:40975 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40977:40978 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40980:40982 Coq.Init.Logic <> :type_scope:x_'='_x not
R40979:40979 Logic <> n var
R40983:40988 Induction <> double def
R40990:40990 Logic <> k var
R41043:41059 Logic <> evenb_double_conv thm
R41043:41059 Logic <> evenb_double_conv thm
R41162:41173 Logic <> evenb_double thm
R41162:41173 Logic <> evenb_double thm
prf 41378:41393 <> beq_nat_true_iff
R41412:41414 Coq.Init.Datatypes <> nat ind
R41439:41443 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R41432:41434 Coq.Init.Logic <> :type_scope:x_'='_x not
R41419:41425 Basics <> beq_nat def
R41430:41431 Logic <> n2 var
R41427:41428 Logic <> n1 var
R41435:41438 Basics <> true constr
R41446:41448 Coq.Init.Logic <> :type_scope:x_'='_x not
R41444:41445 Logic <> n1 var
R41449:41450 Logic <> n2 var
R41493:41504 Tactics <> beq_nat_true thm
R41493:41504 Tactics <> beq_nat_true thm
R41543:41554 Induction <> beq_nat_refl thm
R41543:41554 Induction <> beq_nat_refl thm
def 42790:42802 <> is_even_prime
R42815:42817 Coq.Init.Logic <> :type_scope:x_'='_x not
R42814:42814 Logic <> n var
R42837:42841 Basics <> false constr
R42825:42828 Basics <> true constr
def 44372:44380 <> even_1000
R44384:44390 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44392:44393 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44398:44400 Coq.Init.Logic <> :type_scope:x_'='_x not
R44401:44406 Induction <> double def
R44408:44408 Logic <> k var
def 44643:44652 <> even_1000'
R44666:44668 Coq.Init.Logic <> :type_scope:x_'='_x not
R44656:44660 Basics <> evenb def
R44669:44672 Basics <> true constr
def 44885:44895 <> even_1000''
R44899:44905 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44907:44908 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44913:44915 Coq.Init.Logic <> :type_scope:x_'='_x not
R44916:44921 Induction <> double def
R44923:44923 Logic <> k var
R44939:44952 Logic <> even_bool_prop thm
R44939:44952 Logic <> even_bool_prop thm
prf 45668:45680 <> andb_true_iff
R45697:45700 Basics <> bool ind
R45720:45724 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45713:45715 Coq.Init.Logic <> :type_scope:x_'='_x not
R45707:45710 Basics <> ::x_'&&'_x not
R45705:45706 Logic <> b1 var
R45711:45712 Logic <> b2 var
R45716:45719 Basics <> true constr
R45734:45737 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45727:45729 Coq.Init.Logic <> :type_scope:x_'='_x not
R45725:45726 Logic <> b1 var
R45730:45733 Basics <> true constr
R45740:45742 Coq.Init.Logic <> :type_scope:x_'='_x not
R45738:45739 Logic <> b2 var
R45743:45746 Basics <> true constr
prf 46092:46103 <> orb_true_iff
R46138:46142 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46131:46133 Coq.Init.Logic <> :type_scope:x_'='_x not
R46125:46128 Basics <> ::x_'||'_x not
R46123:46124 Logic <> b1 var
R46129:46130 Logic <> b2 var
R46134:46137 Basics <> true constr
R46152:46155 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46145:46147 Coq.Init.Logic <> :type_scope:x_'='_x not
R46143:46144 Logic <> b1 var
R46148:46151 Basics <> true constr
R46158:46160 Coq.Init.Logic <> :type_scope:x_'='_x not
R46156:46157 Logic <> b2 var
R46161:46164 Basics <> true constr
prf 46698:46706 <> S_beq_nat
R46741:46743 Coq.Init.Logic <> :type_scope:x_'='_x not
R46730:46736 Basics <> beq_nat def
R46740:46740 Logic <> m var
R46738:46738 Logic <> n var
R46744:46748 Basics <> false constr
R46721:46724 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R46720:46720 Logic <> n var
R46725:46725 Logic <> m var
R46806:46808 Coq.Init.Logic <> not def
R46933:46935 Coq.Init.Logic <> not def
R46950:46952 Coq.Init.Logic <> not def
prf 47011:47027 <> beq_nat_false_iff
R47044:47046 Coq.Init.Datatypes <> nat ind
R47070:47074 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47062:47064 Coq.Init.Logic <> :type_scope:x_'='_x not
R47051:47057 Basics <> beq_nat def
R47061:47061 Logic <> y var
R47059:47059 Logic <> x var
R47065:47069 Basics <> false constr
R47076:47079 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R47075:47075 Logic <> x var
R47080:47080 Logic <> y var
R47176:47178 Coq.Init.Logic <> not def
R47335:47341 Basics <> beq_nat def
R47335:47341 Basics <> beq_nat def
R47427:47433 Basics <> beq_nat def
R47447:47458 Induction <> beq_nat_refl thm
R47447:47458 Induction <> beq_nat_refl thm
R47490:47492 Coq.Init.Logic <> not def
R47506:47514 Logic <> S_beq_nat thm
R47506:47514 Logic <> S_beq_nat thm
R47524:47526 Coq.Init.Logic <> not def
def 47979:47986 <> beq_list
R48009:48012 Basics <> bool ind
R48004:48004 Logic <> A var
R47999:47999 Logic <> A var
R48042:48045 Poly <> list ind
R48047:48047 Logic <> A var
R48052:48055 Basics <> bool ind
R48072:48073 Logic <> l2 var
R48068:48069 Logic <> l1 var
R48088:48090 Poly <> nil constr
R48092:48094 Poly <> nil constr
R48099:48102 Basics <> true constr
R48112:48114 Poly <> nil constr
R48121:48125 Basics <> false constr
R48137:48140 Poly <> ::x_'::'_x not
R48146:48148 Poly <> nil constr
R48153:48157 Basics <> false constr
R48169:48172 Poly <> ::x_'::'_x not
R48180:48183 Poly <> ::x_'::'_x not
R48194:48196 Logic <> beq var
R48235:48239 Basics <> false constr
R48209:48216 Logic <> beq_list def
R48218:48220 Logic <> beq var
prf 48256:48272 <> beq_list_true_iff
R48304:48307 Basics <> bool ind
R48299:48299 Logic <> A var
R48294:48294 Logic <> A var
R48406:48410 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48399:48401 Coq.Init.Logic <> :type_scope:x_'='_x not
R48381:48388 Logic <> beq_list def
R48397:48398 Logic <> l2 var
R48394:48395 Logic <> l1 var
R48390:48392 Logic <> beq var
R48402:48405 Basics <> true constr
R48413:48415 Coq.Init.Logic <> :type_scope:x_'='_x not
R48411:48412 Logic <> l1 var
R48416:48417 Logic <> l2 var
R48346:48350 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48339:48341 Coq.Init.Logic <> :type_scope:x_'='_x not
R48330:48332 Logic <> beq var
R48337:48338 Logic <> a2 var
R48334:48335 Logic <> a1 var
R48342:48345 Basics <> true constr
R48353:48355 Coq.Init.Logic <> :type_scope:x_'='_x not
R48351:48352 Logic <> a1 var
R48356:48357 Logic <> a2 var
R48903:48905 Coq.Init.Logic <> :type_scope:x_'='_x not
R48903:48905 Coq.Init.Logic <> :type_scope:x_'='_x not
def 49183:49189 <> forallb
R49215:49218 Basics <> bool ind
R49210:49210 Logic <> X var
R49226:49229 Poly <> list ind
R49231:49231 Logic <> X var
R49236:49239 Basics <> bool ind
R49252:49252 Logic <> l var
R49263:49264 Poly <> ::'['_']' not
R49269:49272 Basics <> true constr
R49279:49282 Poly <> ::x_'::'_x not
R49289:49292 Basics <> andb def
R49304:49310 Logic <> forallb def
R49312:49315 Logic <> test var
R49295:49298 Logic <> test var
prf 49443:49458 <> forallb_true_iff
R49481:49484 Poly <> list ind
R49486:49486 Logic <> X var
R49514:49518 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R49507:49509 Coq.Init.Logic <> :type_scope:x_'='_x not
R49493:49499 Logic <> forallb def
R49506:49506 Logic <> l var
R49501:49504 Logic <> test var
R49510:49513 Basics <> true constr
R49519:49521 Logic <> All def
R49548:49548 Logic <> l var
R49539:49541 Coq.Init.Logic <> :type_scope:x_'='_x not
R49533:49536 Logic <> test var
R49538:49538 Logic <> x var
R49542:49545 Basics <> true constr
R49635:49635 Coq.Init.Logic <> I constr
R49635:49635 Coq.Init.Logic <> I constr
R49698:49710 Logic <> andb_true_iff thm
R49698:49710 Logic <> andb_true_iff thm
R49827:49839 Logic <> andb_true_iff thm
R49827:49839 Logic <> andb_true_iff thm
def 50393:50407 <> excluded_middle
R50432:50435 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50431:50431 Logic <> P var
R50436:50437 Coq.Init.Logic <> :type_scope:'~'_x not
R50438:50438 Logic <> P var
prf 51248:51273 <> restricted_excluded_middle
R51312:51315 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R51311:51311 Logic <> P var
R51316:51317 Coq.Init.Logic <> :type_scope:'~'_x not
R51318:51318 Logic <> P var
R51293:51297 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R51292:51292 Logic <> P var
R51299:51301 Coq.Init.Logic <> :type_scope:x_'='_x not
R51298:51298 Logic <> b var
R51302:51305 Basics <> true constr
prf 55618:55644 <> excluded_middle_irrefutable
R55667:55668 Coq.Init.Logic <> :type_scope:'~'_x not
R55669:55671 Coq.Init.Logic <> :type_scope:'~'_x not
R55680:55680 Coq.Init.Logic <> :type_scope:'~'_x not
R55673:55676 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R55672:55672 Logic <> P var
R55677:55678 Coq.Init.Logic <> :type_scope:'~'_x not
R55679:55679 Logic <> P var
R55728:55730 Coq.Init.Logic <> not def
R55815:55841 Logic <> excluded_middle_irrefutable thm
prf 56289:56303 <> not_exists_dist
R56351:56351 Logic <> X var
R56401:56401 Logic <> P var
R56403:56403 Logic <> x var
R56367:56369 Coq.Init.Logic <> :type_scope:'~'_x not
R56385:56385 Coq.Init.Logic <> :type_scope:'~'_x not
R56370:56376 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56378:56379 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56380:56381 Coq.Init.Logic <> :type_scope:'~'_x not
R56382:56382 Logic <> P var
R56384:56384 Logic <> x var
R56309:56323 Logic <> excluded_middle def
R56450:56452 Coq.Init.Logic <> not def
R56476:56479 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56480:56481 Coq.Init.Logic <> :type_scope:'~'_x not
R56476:56479 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56480:56481 Coq.Init.Logic <> :type_scope:'~'_x not
R56542:56544 Coq.Init.Logic <> not def
R56563:56569 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56571:56571 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56579:56583 Coq.Init.Logic <> False ind
R56574:56574 Logic <> x var
R56563:56569 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56571:56571 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56579:56583 Coq.Init.Logic <> False ind
R56574:56574 Logic <> x var
def 57226:57231 <> peirce
R57269:57269 Logic <> P var
R57265:57265 Logic <> P var
R57261:57261 Logic <> Q var
R57258:57258 Logic <> P var
def 57283:57309 <> double_negation_elimination
R57338:57338 Logic <> P var
R57331:57331 Coq.Init.Logic <> :type_scope:'~'_x not
R57332:57332 Coq.Init.Logic <> :type_scope:'~'_x not
R57333:57333 Logic <> P var
def 57352:57372 <> de_morgan_not_and_not
R57412:57413 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57411:57411 Logic <> P var
R57414:57414 Logic <> Q var
R57396:57397 Coq.Init.Logic <> :type_scope:'~'_x not
R57406:57406 Coq.Init.Logic <> :type_scope:'~'_x not
R57400:57403 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57398:57398 Coq.Init.Logic <> :type_scope:'~'_x not
R57399:57399 Logic <> P var
R57404:57404 Coq.Init.Logic <> :type_scope:'~'_x not
R57405:57405 Logic <> Q var
def 57428:57440 <> implies_to_or
R57477:57478 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57475:57475 Coq.Init.Logic <> :type_scope:'~'_x not
R57476:57476 Logic <> P var
R57479:57479 Logic <> Q var
R57468:57468 Logic <> Q var
R57465:57465 Logic <> P var
prf 57522:57533 <> equal_peirce
R57553:57557 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R57538:57552 Logic <> excluded_middle def
R57558:57563 Logic <> peirce def
R57597:57602 Logic <> peirce def
R57612:57626 Logic <> excluded_middle def
R57653:57656 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57657:57657 Coq.Init.Logic <> :type_scope:'~'_x not
R57653:57656 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57657:57657 Coq.Init.Logic <> :type_scope:'~'_x not
R57703:57705 Coq.Init.Logic <> not def
R57771:57776 Logic <> peirce def
R57786:57800 Logic <> excluded_middle def
prf 57859:57891 <> equal_double_negation_elimination
R57911:57915 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R57896:57910 Logic <> excluded_middle def
R57916:57942 Logic <> double_negation_elimination def
R57984:58010 Logic <> double_negation_elimination def
R58020:58034 Logic <> excluded_middle def
R58057:58059 Coq.Init.Logic <> not def
R58075:58077 Coq.Init.Logic <> not def
R58097:58101 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58112:58112 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58107:58111 Coq.Init.Logic <> False ind
R58097:58101 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58112:58112 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58107:58111 Coq.Init.Logic <> False ind
R58202:58228 Logic <> double_negation_elimination def
R58238:58252 Logic <> excluded_middle def
R58288:58288 Coq.Init.Logic <> :type_scope:'~'_x not
R58289:58291 Coq.Init.Logic <> :type_scope:'~'_x not
R58300:58300 Coq.Init.Logic <> :type_scope:'~'_x not
R58293:58296 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58292:58292 Logic <> P var
R58297:58298 Coq.Init.Logic <> :type_scope:'~'_x not
R58299:58299 Logic <> P var
R58288:58288 Coq.Init.Logic <> :type_scope:'~'_x not
R58289:58291 Coq.Init.Logic <> :type_scope:'~'_x not
R58300:58300 Coq.Init.Logic <> :type_scope:'~'_x not
R58293:58296 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58292:58292 Logic <> P var
R58297:58298 Coq.Init.Logic <> :type_scope:'~'_x not
R58299:58299 Logic <> P var
R58313:58339 Logic <> excluded_middle_irrefutable thm
R58313:58339 Logic <> excluded_middle_irrefutable thm
