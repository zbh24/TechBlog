DIGEST 92acbe95e29a12d178fa9e6d327f9d10
FPoly
R185:189 Lists <> <> lib
ind 1045:1052 <> boollist
constr 1068:1075 <> bool_nil
constr 1092:1100 <> bool_cons
R1079:1086 Poly <> boollist ind
R1124:1131 Poly <> boollist ind
R1112:1119 Poly <> boollist ind
R1104:1107 Basics <> bool ind
ind 1606:1609 <> list
constr 1634:1636 <> nil
constr 1651:1654 <> cons
R1640:1643 Poly <> list ind
R1673:1676 Poly <> list ind
R1663:1666 Poly <> list ind
R2868:2870 Poly <> nil constr
R2920:2923 Poly <> cons constr
R3705:3708 Poly <> cons constr
R3717:3720 Poly <> cons constr
R3729:3731 Poly <> nil constr
R3733:3735 Coq.Init.Datatypes <> nat ind
R3722:3724 Coq.Init.Datatypes <> nat ind
R3710:3712 Coq.Init.Datatypes <> nat ind
def 4089:4094 <> repeat
R4112:4112 Poly <> X var
R4124:4126 Coq.Init.Datatypes <> nat ind
R4131:4134 Poly <> list ind
R4136:4136 Poly <> X var
R4149:4153 Poly <> count var
R4169:4171 Poly <> nil constr
R4173:4173 Poly <> X var
R4179:4179 Coq.Init.Datatypes <> S constr
R4191:4194 Poly <> cons constr
R4201:4206 Poly <> repeat def
R4210:4210 Poly <> x var
R4208:4208 Poly <> X var
R4198:4198 Poly <> x var
R4196:4196 Poly <> X var
def 4356:4367 <> test_repeat1
R4387:4389 Coq.Init.Logic <> :type_scope:x_'='_x not
R4373:4378 Poly <> repeat def
R4380:4382 Coq.Init.Datatypes <> nat ind
R4390:4393 Poly <> cons constr
R4402:4405 Poly <> cons constr
R4414:4416 Poly <> nil constr
R4418:4420 Coq.Init.Datatypes <> nat ind
R4407:4409 Coq.Init.Datatypes <> nat ind
R4395:4397 Coq.Init.Datatypes <> nat ind
def 4580:4591 <> test_repeat2
R4616:4618 Coq.Init.Logic <> :type_scope:x_'='_x not
R4597:4602 Poly <> repeat def
R4609:4613 Basics <> false constr
R4604:4607 Basics <> bool ind
R4619:4622 Poly <> cons constr
R4636:4638 Poly <> nil constr
R4640:4643 Basics <> bool ind
R4629:4633 Basics <> false constr
R4624:4627 Basics <> bool ind
mod 4684:4696 <> MumbleGrumble
ind 4820:4825 MumbleGrumble mumble
constr 4841:4841 MumbleGrumble a
constr 4856:4856 MumbleGrumble b
constr 4888:4888 MumbleGrumble c
R4845:4850 Poly <> mumble ind
R4877:4882 Poly <> mumble ind
R4870:4872 Coq.Init.Datatypes <> nat ind
R4860:4865 Poly <> mumble ind
R4892:4897 Poly <> mumble ind
ind 4911:4917 MumbleGrumble grumble
constr 4942:4942 MumbleGrumble d
constr 4970:4970 MumbleGrumble e
R4956:4962 Poly <> grumble ind
R4946:4951 Poly MumbleGrumble mumble ind
R4979:4985 Poly <> grumble ind
R5275:5287 Poly <> <> mod
def 5554:5560 <> repeat'
R5574:5577 Poly <> list ind
R5579:5579 Poly <> X var
R5592:5596 Poly <> count var
R5619:5621 Poly <> nil constr
R5623:5623 Poly <> X var
R5629:5629 Coq.Init.Datatypes <> S constr
R5641:5644 Poly <> cons constr
R5651:5657 Poly <> repeat' def
R5661:5661 Poly <> x var
R5659:5659 Poly <> X var
R5648:5648 Poly <> x var
R5646:5646 Poly <> X var
R5761:5767 Poly <> repeat' def
R5823:5828 Poly <> repeat def
def 8362:8369 <> repeat''
R8383:8386 Poly <> list ind
R8388:8388 Poly <> X var
R8401:8405 Poly <> count var
R8428:8430 Poly <> nil constr
R8438:8438 Coq.Init.Datatypes <> S constr
R8450:8453 Poly <> cons constr
R8460:8467 Poly <> repeat'' def
R8471:8471 Poly <> x var
R8457:8457 Poly <> x var
def 8797:8803 <> list123
R8810:8813 Poly <> cons constr
R8822:8825 Poly <> cons constr
R8834:8837 Poly <> cons constr
R8846:8848 Poly <> nil constr
R8850:8852 Coq.Init.Datatypes <> nat ind
R8839:8841 Coq.Init.Datatypes <> nat ind
R8827:8829 Coq.Init.Datatypes <> nat ind
R8815:8817 Coq.Init.Datatypes <> nat ind
def 8926:8933 <> list123'
R8940:8943 Poly <> cons constr
R8950:8953 Poly <> cons constr
R8960:8963 Poly <> cons constr
R8970:8972 Poly <> nil constr
R9578:9580 Poly <> nil constr
R9578:9580 Poly <> nil constr
R9597:9600 Poly <> cons constr
R9597:9600 Poly <> cons constr
R9621:9626 Poly <> repeat def
R9621:9626 Poly <> repeat def
def 9713:9721 <> list123''
R9726:9729 Poly <> cons constr
R9734:9737 Poly <> cons constr
R9742:9745 Poly <> cons constr
R9749:9751 Poly <> nil constr
def 9923:9931 <> repeat'''
R9949:9949 Poly <> X var
R9961:9963 Coq.Init.Datatypes <> nat ind
R9968:9971 Poly <> list ind
R9973:9973 Poly <> X var
R9986:9990 Poly <> count var
R10013:10015 Poly <> nil constr
R10021:10021 Coq.Init.Datatypes <> S constr
R10033:10036 Poly <> cons constr
R10041:10049 Poly <> repeat''' def
R10051:10051 Poly <> x var
R10038:10038 Poly <> x var
ind 10654:10658 <> list'
constr 10683:10686 <> nil'
constr 10700:10704 <> cons'
R10690:10694 Poly <> list' ind
R10722:10726 Poly <> list' ind
R10713:10717 Poly <> list' ind
def 11162:11164 <> app
R11186:11189 Poly <> list ind
R11191:11191 Poly <> X var
R11210:11213 Poly <> list ind
R11215:11215 Poly <> X var
R11229:11230 Poly <> l1 var
R11241:11243 Poly <> nil constr
R11253:11254 Poly <> l2 var
R11260:11263 Poly <> cons constr
R11272:11275 Poly <> cons constr
R11280:11282 Poly <> app def
R11286:11287 Poly <> l2 var
def 11307:11309 <> rev
R11323:11326 Poly <> list ind
R11328:11328 Poly <> X var
R11333:11336 Poly <> list ind
R11338:11338 Poly <> X var
R11351:11351 Poly <> l var
R11362:11364 Poly <> nil constr
R11374:11376 Poly <> nil constr
R11382:11385 Poly <> cons constr
R11394:11396 Poly <> app def
R11407:11410 Poly <> cons constr
R11414:11416 Poly <> nil constr
R11399:11401 Poly <> rev def
def 11436:11441 <> length
R11459:11462 Poly <> list ind
R11464:11464 Poly <> X var
R11469:11471 Coq.Init.Datatypes <> nat ind
R11484:11484 Poly <> l var
R11495:11497 Poly <> nil constr
R11508:11511 Poly <> cons constr
R11521:11521 Coq.Init.Datatypes <> S constr
R11524:11529 Poly <> length def
def 11551:11559 <> test_rev1
R11590:11593 Coq.Init.Logic <> :type_scope:x_'='_x not
R11613:11613 Coq.Init.Logic <> :type_scope:x_'='_x not
R11565:11567 Poly <> rev def
R11570:11573 Poly <> cons constr
R11578:11581 Poly <> cons constr
R11585:11587 Poly <> nil constr
R11594:11597 Poly <> cons constr
R11602:11605 Poly <> cons constr
R11609:11611 Poly <> nil constr
def 11651:11659 <> test_rev2
R11683:11685 Coq.Init.Logic <> :type_scope:x_'='_x not
R11664:11666 Poly <> rev def
R11669:11672 Poly <> cons constr
R11679:11681 Poly <> nil constr
R11674:11677 Basics <> true constr
R11686:11689 Poly <> cons constr
R11696:11698 Poly <> nil constr
R11691:11694 Basics <> true constr
def 11736:11747 <> test_length1
R11787:11789 Coq.Init.Logic <> :type_scope:x_'='_x not
R11750:11755 Poly <> length def
R11758:11761 Poly <> cons constr
R11766:11769 Poly <> cons constr
R11774:11777 Poly <> cons constr
R11781:11783 Poly <> nil constr
def 12143:12147 <> mynil
R12152:12154 Poly <> nil constr
def 12721:12725 <> mynil
R12729:12732 Poly <> list ind
R12734:12736 Coq.Init.Datatypes <> nat ind
R12741:12743 Poly <> nil constr
R12872:12874 Poly <> nil constr
def 12889:12894 <> mynil'
R12900:12902 Poly <> nil constr
R12904:12906 Coq.Init.Datatypes <> nat ind
R13188:13191 Poly <> cons constr
not 13175 <> ::x_'::'_x
R13273:13275 Poly <> nil constr
not 13264 <> ::'['_']'
R13308:13311 Poly <> cons constr
R13319:13322 Poly <> cons constr
R13326:13327 Poly <> ::'['_']' not
not 13287 <> ::'['_x_';'_'..'_';'_x_']'
R13357:13359 Poly <> app def
not 13344 <> ::x_'++'_x
def 13492:13501 <> list123'''
R13506:13506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13508:13509 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13511:13512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13514:13514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 13815:13823 <> app_nil_r
R13853:13856 Poly <> list ind
R13858:13858 Poly <> X var
R13870:13872 Coq.Init.Logic <> :type_scope:x_'='_x not
R13864:13867 Poly <> ::x_'++'_x not
R13863:13863 Poly <> l var
R13868:13869 Poly <> ::'['_']' not
R13873:13873 Poly <> l var
prf 13923:13931 <> app_assoc
R13951:13954 Poly <> list ind
R13956:13956 Poly <> A var
R13973:13975 Coq.Init.Logic <> :type_scope:x_'='_x not
R13963:13966 Poly <> ::x_'++'_x not
R13962:13962 Poly <> l var
R13968:13971 Poly <> ::x_'++'_x not
R13967:13967 Poly <> m var
R13972:13972 Poly <> n var
R13976:13976 Poly <> ::x_'++'_x not
R13983:13987 Poly <> ::x_'++'_x not
R13978:13981 Poly <> ::x_'++'_x not
R13977:13977 Poly <> l var
R13982:13982 Poly <> m var
R13988:13988 Poly <> n var
prf 14036:14045 <> app_length
R14074:14077 Poly <> list ind
R14079:14079 Poly <> X var
R14102:14104 Coq.Init.Logic <> :type_scope:x_'='_x not
R14085:14090 Poly <> length def
R14095:14098 Poly <> ::x_'++'_x not
R14093:14094 Poly <> l1 var
R14099:14100 Poly <> l2 var
R14114:14116 Basics <> :nat_scope:x_'+'_x not
R14105:14110 Poly <> length def
R14112:14113 Poly <> l1 var
R14117:14122 Poly <> length def
R14124:14125 Poly <> l2 var
prf 14304:14316 <> rev_app_distr
R14337:14340 Poly <> list ind
R14342:14342 Poly <> X var
R14362:14364 Coq.Init.Logic <> :type_scope:x_'='_x not
R14348:14350 Poly <> rev def
R14355:14358 Poly <> ::x_'++'_x not
R14353:14354 Poly <> l1 var
R14359:14360 Poly <> l2 var
R14371:14374 Poly <> ::x_'++'_x not
R14365:14367 Poly <> rev def
R14369:14370 Poly <> l2 var
R14375:14377 Poly <> rev def
R14379:14380 Poly <> l1 var
prf 14430:14443 <> rev_involutive
R14475:14478 Poly <> list ind
R14480:14480 Poly <> X var
R14496:14498 Coq.Init.Logic <> :type_scope:x_'='_x not
R14485:14487 Poly <> rev def
R14490:14492 Poly <> rev def
R14494:14494 Poly <> l var
R14499:14499 Poly <> l var
ind 14832:14835 <> prod
constr 14862:14865 <> pair
R14879:14882 Poly <> prod ind
R14900:14903 Poly <> pair constr
R14900:14903 Poly <> pair constr
R15050:15053 Poly <> pair constr
not 15034 <> ::'('_x_','_x_')'
R15189:15192 Poly <> prod ind
not 15177 <> :type_scope:x_'*'_x
def 15791:15793 <> fst
R15814:15816 Poly <> :type_scope:x_'*'_x not
R15813:15813 Poly <> X var
R15817:15817 Poly <> Y var
R15822:15822 Poly <> X var
R15835:15835 Poly <> p var
R15846:15846 Poly <> ::'('_x_','_x_')' not
R15848:15849 Poly <> ::'('_x_','_x_')' not
R15851:15851 Poly <> ::'('_x_','_x_')' not
def 15877:15879 <> snd
R15900:15902 Poly <> :type_scope:x_'*'_x not
R15899:15899 Poly <> X var
R15903:15903 Poly <> Y var
R15908:15908 Poly <> Y var
R15921:15921 Poly <> p var
R15932:15932 Poly <> ::'('_x_','_x_')' not
R15934:15935 Poly <> ::'('_x_','_x_')' not
R15937:15937 Poly <> ::'('_x_','_x_')' not
def 16184:16190 <> combine
R16211:16214 Poly <> list ind
R16216:16216 Poly <> X var
R16225:16228 Poly <> list ind
R16230:16230 Poly <> Y var
R16246:16249 Poly <> list ind
R16253:16253 Poly <> :type_scope:x_'*'_x not
R16252:16252 Poly <> X var
R16254:16254 Poly <> Y var
R16272:16273 Poly <> ly var
R16268:16269 Poly <> lx var
R16284:16285 Poly <> ::'['_']' not
R16293:16294 Poly <> ::'['_']' not
R16303:16304 Poly <> ::'['_']' not
R16309:16310 Poly <> ::'['_']' not
R16317:16320 Poly <> ::x_'::'_x not
R16326:16329 Poly <> ::x_'::'_x not
R16342:16346 Poly <> ::x_'::'_x not
R16360:16360 Poly <> ::x_'::'_x not
R16336:16336 Poly <> ::'('_x_','_x_')' not
R16338:16339 Poly <> ::'('_x_','_x_')' not
R16341:16341 Poly <> ::'('_x_','_x_')' not
R16347:16353 Poly <> combine def
def 17054:17058 <> split
R17078:17081 Poly <> list ind
R17085:17085 Poly <> :type_scope:x_'*'_x not
R17084:17084 Poly <> X var
R17086:17086 Poly <> Y var
R17107:17107 Poly <> :type_scope:x_'*'_x not
R17114:17118 Poly <> :type_scope:x_'*'_x not
R17125:17125 Poly <> :type_scope:x_'*'_x not
R17108:17111 Poly <> list ind
R17113:17113 Poly <> X var
R17119:17122 Poly <> list ind
R17124:17124 Poly <> Y var
R17149:17153 Basics <> admit prfax
def 17165:17174 <> test_split
R17206:17208 Coq.Init.Logic <> :type_scope:x_'='_x not
R17179:17183 Poly <> split def
R17185:17185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17195:17195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17205:17205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17196:17196 Poly <> ::'('_x_','_x_')' not
R17198:17198 Poly <> ::'('_x_','_x_')' not
R17204:17204 Poly <> ::'('_x_','_x_')' not
R17199:17203 Basics <> false constr
R17186:17186 Poly <> ::'('_x_','_x_')' not
R17188:17188 Poly <> ::'('_x_','_x_')' not
R17194:17194 Poly <> ::'('_x_','_x_')' not
R17189:17193 Basics <> false constr
R17209:17209 Poly <> ::'('_x_','_x_')' not
R17215:17215 Poly <> ::'('_x_','_x_')' not
R17229:17229 Poly <> ::'('_x_','_x_')' not
R17210:17210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17212:17212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17214:17214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17216:17216 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17222:17222 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17228:17228 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17223:17227 Basics <> false constr
R17217:17221 Basics <> false constr
ind 17507:17512 <> option
constr 17537:17540 <> Some
constr 17562:17565 <> None
R17549:17554 Poly <> option ind
R17569:17574 Poly <> option ind
R17590:17593 Poly <> Some constr
R17590:17593 Poly <> Some constr
R17612:17615 Poly <> None constr
R17612:17615 Poly <> None constr
def 17729:17737 <> nth_error
R17755:17758 Poly <> list ind
R17760:17760 Poly <> X var
R17768:17770 Coq.Init.Datatypes <> nat ind
R17794:17799 Poly <> option ind
R17801:17801 Poly <> X var
R17814:17814 Poly <> l var
R17825:17826 Poly <> ::'['_']' not
R17831:17834 Poly <> None constr
R17841:17844 Poly <> ::x_'::'_x not
R17854:17860 Basics <> beq_nat def
R17864:17864 Coq.Init.Datatypes <> O constr
R17862:17862 Poly <> n var
R17883:17891 Poly <> nth_error def
R17897:17900 Coq.Init.Peano <> pred def
R17902:17902 Poly <> n var
R17871:17874 Poly <> Some constr
def 17921:17935 <> test_nth_error1
R17960:17962 Coq.Init.Logic <> :type_scope:x_'='_x not
R17939:17947 Poly <> nth_error def
R17949:17949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17951:17951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17953:17953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17955:17955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17957:17957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17963:17966 Poly <> Some constr
def 18004:18018 <> test_nth_error2
R18043:18045 Coq.Init.Logic <> :type_scope:x_'='_x not
R18022:18030 Poly <> nth_error def
R18032:18032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18036:18036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18040:18040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18037:18037 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18039:18039 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18033:18033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18035:18035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18046:18049 Poly <> Some constr
R18051:18051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18053:18053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18089:18103 <> test_nth_error3
R18125:18127 Coq.Init.Logic <> :type_scope:x_'='_x not
R18107:18115 Poly <> nth_error def
R18117:18117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18122:18122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18118:18121 Basics <> true constr
R18128:18131 Poly <> None constr
def 18387:18394 <> hd_error
R18412:18415 Poly <> list ind
R18417:18417 Poly <> X var
R18422:18427 Poly <> option ind
R18429:18429 Poly <> X var
R18455:18459 Basics <> admit prfax
R18590:18597 Poly <> hd_error def
def 18609:18622 <> test_hd_error1
R18640:18642 Coq.Init.Logic <> :type_scope:x_'='_x not
R18626:18633 Poly <> hd_error def
R18635:18635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18637:18637 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18639:18639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18643:18646 Poly <> Some constr
def 18689:18702 <> test_hd_error2
R18725:18728 Coq.Init.Logic <> :type_scope:x_'='_x not
R18706:18713 Poly <> hd_error def
R18716:18716 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18720:18720 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18724:18724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18721:18721 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18723:18723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18717:18717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18719:18719 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18729:18732 Poly <> Some constr
R18734:18734 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18736:18736 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19406:19415 <> doit3times
R19432:19432 Poly <> X var
R19429:19429 Poly <> X var
R19438:19438 Poly <> X var
R19443:19443 Poly <> X var
R19450:19450 Poly <> f var
R19453:19453 Poly <> f var
R19456:19456 Poly <> f var
R19458:19458 Poly <> n var
R19617:19626 Poly <> doit3times def
def 19698:19712 <> test_doit3times
R19736:19738 Coq.Init.Logic <> :type_scope:x_'='_x not
R19715:19724 Poly <> doit3times def
R19726:19733 Basics <> minustwo def
def 19777:19792 <> test_doit3times'
R19815:19817 Coq.Init.Logic <> :type_scope:x_'='_x not
R19795:19804 Poly <> doit3times def
R19811:19814 Basics <> true constr
R19806:19809 Basics <> negb def
R19818:19822 Basics <> false constr
def 20202:20207 <> filter
R20228:20231 Basics <> bool ind
R20225:20225 Poly <> X var
R20237:20240 Poly <> list ind
R20242:20242 Poly <> X var
R20264:20267 Poly <> list ind
R20269:20269 Poly <> X var
R20283:20283 Poly <> l var
R20294:20295 Poly <> ::'['_']' not
R20304:20305 Poly <> ::'['_']' not
R20312:20315 Poly <> ::x_'::'_x not
R20324:20327 Poly <> test var
R20392:20397 Poly <> filter def
R20399:20402 Poly <> test var
R20337:20341 Poly <> ::x_'::'_x not
R20355:20355 Poly <> ::x_'::'_x not
R20342:20347 Poly <> filter def
R20349:20352 Poly <> test var
def 20583:20594 <> test_filter1
R20619:20621 Coq.Init.Logic <> :type_scope:x_'='_x not
R20597:20602 Poly <> filter def
R20610:20610 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20612:20612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20614:20614 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20616:20616 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20618:20618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20604:20608 Basics <> evenb def
R20622:20622 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20624:20624 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20626:20626 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20667:20677 <> length_is_1
R20695:20698 Poly <> list ind
R20700:20700 Poly <> X var
R20705:20708 Basics <> bool ind
R20715:20721 Basics <> beq_nat def
R20724:20729 Poly <> length def
R20731:20731 Poly <> l var
def 20746:20757 <> test_filter2
R20832:20836 Coq.Init.Logic <> :type_scope:x_'='_x not
R20764:20769 Poly <> filter def
R20794:20795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20802:20803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20807:20808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20812:20813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20821:20822 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20825:20826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20830:20831 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20827:20827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20829:20829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20823:20824 Poly <> ::'['_']' not
R20814:20814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20816:20816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20818:20818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20820:20820 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20809:20809 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20811:20811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20804:20804 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20806:20806 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20796:20796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20798:20799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20801:20801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20771:20781 Poly <> length_is_1 def
R20837:20838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20842:20843 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20847:20848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20852:20853 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20849:20849 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20851:20851 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20844:20844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20846:20846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20839:20839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20841:20841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21013:21028 <> countoddmembers'
R21033:21036 Poly <> list ind
R21038:21040 Coq.Init.Datatypes <> nat ind
R21045:21047 Coq.Init.Datatypes <> nat ind
R21054:21059 Poly <> length def
R21062:21067 Poly <> filter def
R21074:21074 Poly <> l var
R21069:21072 Basics <> oddb def
def 21087:21108 <> test_countoddmembers'1
R21143:21145 Coq.Init.Logic <> :type_scope:x_'='_x not
R21113:21128 Poly <> countoddmembers' def
R21130:21130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21132:21132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21134:21134 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21136:21136 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21138:21138 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21140:21140 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21142:21142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21183:21204 <> test_countoddmembers'2
R21233:21235 Coq.Init.Logic <> :type_scope:x_'='_x not
R21209:21224 Poly <> countoddmembers' def
R21226:21226 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21228:21228 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21230:21230 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21232:21232 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21273:21294 <> test_countoddmembers'3
R21319:21321 Coq.Init.Logic <> :type_scope:x_'='_x not
R21299:21314 Poly <> countoddmembers' def
R21316:21318 Poly <> nil constr
def 22089:22102 <> test_anon_fun'
R22136:22138 Coq.Init.Logic <> :type_scope:x_'='_x not
R22107:22116 Poly <> doit3times def
R22129:22131 Basics <> :nat_scope:x_'*'_x not
R22128:22128 Poly <> n var
R22132:22132 Poly <> n var
def 22379:22391 <> test_filter2'
R22486:22490 Coq.Init.Logic <> :type_scope:x_'='_x not
R22398:22403 Poly <> filter def
R22448:22449 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22456:22457 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22461:22462 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22466:22467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22475:22476 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22479:22480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22484:22485 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22481:22481 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22483:22483 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22477:22478 Poly <> ::'['_']' not
R22468:22468 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22470:22470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22472:22472 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22474:22474 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22463:22463 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22465:22465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22458:22458 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22460:22460 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22450:22450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22452:22453 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22455:22455 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22415:22421 Basics <> beq_nat def
R22424:22429 Poly <> length def
R22431:22431 Poly <> l var
R22491:22492 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22496:22497 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22501:22502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22506:22507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22503:22503 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22505:22505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22498:22498 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22500:22500 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22493:22493 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22495:22495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22809:22823 <> filter_even_gt7
R22830:22833 Poly <> list ind
R22835:22837 Coq.Init.Datatypes <> nat ind
R22842:22845 Poly <> list ind
R22847:22849 Coq.Init.Datatypes <> nat ind
R22875:22879 Basics <> admit prfax
def 22891:22912 <> test_filter_even_gt7_1
R22953:22955 Coq.Init.Logic <> :type_scope:x_'='_x not
R22918:22932 Poly <> filter_even_gt7 def
R22934:22934 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22936:22936 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22938:22938 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22940:22940 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22942:22942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22945:22945 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22947:22947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22950:22950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22952:22952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22956:22956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22959:22959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22962:22962 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22964:22964 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23006:23027 <> test_filter_even_gt7_2
R23063:23065 Coq.Init.Logic <> :type_scope:x_'='_x not
R23033:23047 Poly <> filter_even_gt7 def
R23049:23049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23051:23051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23053:23053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23055:23055 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23058:23058 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23062:23062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23066:23067 Poly <> ::'['_']' not
def 23721:23729 <> partition
R23776:23779 Basics <> bool ind
R23771:23771 Poly <> X var
R23808:23811 Poly <> list ind
R23813:23813 Poly <> X var
R23843:23845 Poly <> :type_scope:x_'*'_x not
R23837:23840 Poly <> list ind
R23842:23842 Poly <> X var
R23846:23849 Poly <> list ind
R23851:23851 Poly <> X var
R23875:23879 Basics <> admit prfax
def 23891:23905 <> test_partition1
R23934:23936 Coq.Init.Logic <> :type_scope:x_'='_x not
R23908:23916 Poly <> partition def
R23923:23923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23925:23925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23927:23927 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23929:23929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23931:23931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23933:23933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23918:23921 Basics <> oddb def
R23937:23937 Poly <> ::'('_x_','_x_')' not
R23945:23946 Poly <> ::'('_x_','_x_')' not
R23952:23952 Poly <> ::'('_x_','_x_')' not
R23938:23938 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23940:23940 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23942:23942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23944:23944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23947:23947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23949:23949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23951:23951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23992:24006 <> test_partition2
R24043:24045 Coq.Init.Logic <> :type_scope:x_'='_x not
R24009:24017 Poly <> partition def
R24036:24036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24038:24038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24040:24040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24042:24042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24029:24033 Basics <> false constr
R24046:24046 Poly <> ::'('_x_','_x_')' not
R24049:24050 Poly <> ::'('_x_','_x_')' not
R24058:24058 Poly <> ::'('_x_','_x_')' not
R24047:24048 Poly <> ::'['_']' not
R24051:24051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24053:24053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24055:24055 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24057:24057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24247:24249 <> map
R24268:24268 Poly <> Y var
R24265:24265 Poly <> X var
R24274:24277 Poly <> list ind
R24279:24279 Poly <> X var
R24285:24288 Poly <> list ind
R24290:24290 Poly <> Y var
R24304:24304 Poly <> l var
R24315:24316 Poly <> ::'['_']' not
R24325:24326 Poly <> ::'['_']' not
R24333:24336 Poly <> ::x_'::'_x not
R24342:24342 Poly <> ::x_'::'_x not
R24346:24351 Poly <> ::x_'::'_x not
R24359:24359 Poly <> ::x_'::'_x not
R24343:24343 Poly <> f var
R24352:24354 Poly <> map def
R24356:24356 Poly <> f var
def 24576:24584 <> test_map1
R24618:24620 Coq.Init.Logic <> :type_scope:x_'='_x not
R24587:24589 Poly <> map def
R24611:24611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24613:24613 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24615:24615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24617:24617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24601:24604 Coq.Init.Peano <> plus def
R24608:24608 Poly <> x var
R24621:24621 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24623:24623 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24625:24625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24627:24627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24921:24929 <> test_map2
R24952:24954 Coq.Init.Logic <> :type_scope:x_'='_x not
R24934:24936 Poly <> map def
R24943:24943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24945:24945 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24947:24947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24949:24949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24951:24951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24938:24941 Basics <> oddb def
R24955:24955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24961:24961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24966:24966 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24972:24972 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24977:24977 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24973:24976 Basics <> true constr
R24967:24971 Basics <> false constr
R24962:24965 Basics <> true constr
R24956:24960 Basics <> false constr
def 25166:25174 <> test_map3
R25222:25226 Coq.Init.Logic <> :type_scope:x_'='_x not
R25181:25183 Poly <> map def
R25213:25213 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25215:25215 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25217:25217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25219:25219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25221:25221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25195:25195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25203:25203 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25210:25210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25204:25207 Basics <> oddb def
R25209:25209 Poly <> n var
R25196:25200 Basics <> evenb def
R25202:25202 Poly <> n var
R25227:25227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25240:25240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25253:25253 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25266:25266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25279:25279 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25267:25267 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25273:25273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25278:25278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25274:25277 Basics <> true constr
R25268:25272 Basics <> false constr
R25254:25254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25259:25259 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25265:25265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25260:25264 Basics <> false constr
R25255:25258 Basics <> true constr
R25241:25241 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25247:25247 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25252:25252 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25248:25251 Basics <> true constr
R25242:25246 Basics <> false constr
R25228:25228 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25233:25233 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25239:25239 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25234:25238 Basics <> false constr
R25229:25232 Basics <> true constr
prf 25474:25480 <> map_rev
R25514:25514 Poly <> Y var
R25509:25509 Poly <> X var
R25522:25525 Poly <> list ind
R25527:25527 Poly <> X var
R25546:25548 Coq.Init.Logic <> :type_scope:x_'='_x not
R25533:25535 Poly <> map def
R25540:25542 Poly <> rev def
R25544:25544 Poly <> l var
R25537:25537 Poly <> f var
R25549:25551 Poly <> rev def
R25554:25556 Poly <> map def
R25560:25560 Poly <> l var
R25558:25558 Poly <> f var
def 26075:26082 <> flat_map
R26103:26106 Poly <> list ind
R26108:26108 Poly <> Y var
R26098:26098 Poly <> X var
R26114:26117 Poly <> list ind
R26119:26119 Poly <> X var
R26144:26147 Poly <> list ind
R26149:26149 Poly <> Y var
R26176:26180 Basics <> admit prfax
def 26192:26205 <> test_flat_map1
R26245:26249 Coq.Init.Logic <> :type_scope:x_'='_x not
R26210:26217 Poly <> flat_map def
R26238:26238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26240:26240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26242:26242 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26244:26244 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26229:26229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26231:26231 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26233:26233 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26235:26235 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26234:26234 Poly <> n var
R26232:26232 Poly <> n var
R26230:26230 Poly <> n var
R26250:26250 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26252:26253 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26255:26256 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26258:26259 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26261:26262 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26264:26265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26267:26268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26270:26271 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26273:26274 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26276:26276 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26481:26490 <> option_map
R26515:26515 Poly <> Y var
R26510:26510 Poly <> X var
R26524:26529 Poly <> option ind
R26531:26531 Poly <> X var
R26558:26563 Poly <> option ind
R26565:26565 Poly <> Y var
R26578:26579 Poly <> xo var
R26592:26595 Poly <> None constr
R26600:26603 Poly <> None constr
R26611:26614 Poly <> Some constr
R26621:26624 Poly <> Some constr
R26627:26627 Poly <> f var
def 27449:27452 <> fold
R27475:27475 Poly <> Y var
R27472:27472 Poly <> Y var
R27469:27469 Poly <> X var
R27481:27484 Poly <> list ind
R27486:27486 Poly <> X var
R27492:27492 Poly <> Y var
R27522:27522 Poly <> Y var
R27535:27535 Poly <> l var
R27546:27548 Poly <> nil constr
R27553:27553 Poly <> b var
R27560:27563 Poly <> ::x_'::'_x not
R27569:27569 Poly <> f var
R27574:27577 Poly <> fold def
R27583:27583 Poly <> b var
R27579:27579 Poly <> f var
R28046:28049 Poly <> fold def
R28051:28054 Basics <> andb def
def 28116:28128 <> fold_example1
R28155:28157 Coq.Init.Logic <> :type_scope:x_'='_x not
R28134:28137 Poly <> fold def
R28144:28144 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28146:28146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28148:28148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28150:28150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28152:28152 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28139:28142 Coq.Init.Peano <> mult def
def 28196:28208 <> fold_example2
R28251:28253 Coq.Init.Logic <> :type_scope:x_'='_x not
R28214:28217 Poly <> fold def
R28247:28250 Basics <> true constr
R28224:28224 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28229:28229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28234:28234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28240:28240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28245:28245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28241:28244 Basics <> true constr
R28235:28239 Basics <> false constr
R28230:28233 Basics <> true constr
R28225:28228 Basics <> true constr
R28219:28222 Basics <> andb def
R28254:28258 Basics <> false constr
def 28295:28307 <> fold_example3
R28344:28346 Coq.Init.Logic <> :type_scope:x_'='_x not
R28313:28316 Poly <> fold def
R28342:28343 Poly <> ::'['_']' not
R28323:28323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28327:28327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28330:28330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28336:28336 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28340:28340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28337:28337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28339:28339 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28331:28331 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28333:28333 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28335:28335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28328:28329 Poly <> ::'['_']' not
R28324:28324 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28326:28326 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28318:28320 Poly <> app def
R28347:28347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28349:28349 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28351:28351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28353:28353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28355:28355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29262:29269 <> constfun
R29285:29285 Poly <> X var
R29295:29295 Poly <> X var
R29290:29292 Coq.Init.Datatypes <> nat ind
R29309:29311 Coq.Init.Datatypes <> nat ind
R29317:29317 Poly <> x var
def 29332:29336 <> ftrue
R29341:29348 Poly <> constfun def
R29350:29353 Basics <> true constr
def 29365:29381 <> constfun_example1
R29392:29394 Coq.Init.Logic <> :type_scope:x_'='_x not
R29385:29389 Poly <> ftrue def
R29395:29398 Basics <> true constr
def 29435:29451 <> constfun_example2
R29470:29472 Coq.Init.Logic <> :type_scope:x_'='_x not
R29456:29463 Poly <> constfun def
R29674:29677 Coq.Init.Peano <> plus def
def 30288:30292 <> plus3
R30297:30300 Coq.Init.Peano <> plus def
R30311:30315 Poly <> plus3 def
def 30327:30336 <> test_plus3
R30350:30352 Coq.Init.Logic <> :type_scope:x_'='_x not
R30343:30347 Poly <> plus3 def
def 30390:30400 <> test_plus3'
R30424:30426 Coq.Init.Logic <> :type_scope:x_'='_x not
R30406:30415 Poly <> doit3times def
R30417:30421 Poly <> plus3 def
def 30464:30475 <> test_plus3''
R30501:30503 Coq.Init.Logic <> :type_scope:x_'='_x not
R30480:30489 Poly <> doit3times def
R30492:30495 Coq.Init.Peano <> plus def
mod 30632:30640 <> Exercises
def 30842:30852 Exercises fold_length
R30870:30873 Poly Exercises list ind
R30875:30875 Poly <> X var
R30880:30882 Coq.Init.Datatypes <> nat ind
R30889:30892 Poly Exercises fold def
R30911:30911 Poly <> l var
R30906:30906 Coq.Init.Datatypes <> S constr
R30908:30908 Poly <> n var
def 30925:30941 Exercises test_fold_length1
R30964:30966 Coq.Init.Logic <> :type_scope:x_'='_x not
R30945:30955 Poly Exercises fold_length def
R30957:30957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30959:30959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30961:30961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30963:30963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 31052:31070 Exercises fold_length_correct
R31088:31091 Poly Exercises list ind
R31093:31093 Poly <> X var
R31112:31114 Coq.Init.Logic <> :type_scope:x_'='_x not
R31099:31109 Poly Exercises fold_length def
R31111:31111 Poly <> l var
R31115:31120 Poly Exercises length def
R31122:31122 Poly <> l var
def 31301:31308 Exercises fold_map
R31331:31331 Poly <> Y var
R31326:31326 Poly <> X var
R31339:31342 Poly Exercises list ind
R31344:31344 Poly <> X var
R31349:31352 Poly Exercises list ind
R31354:31354 Poly <> Y var
R31378:31382 Basics <> admit prfax
def 32325:32334 Exercises prod_curry
R32367:32367 Poly <> Z var
R32359:32361 Poly <> :type_scope:x_'*'_x not
R32358:32358 Poly <> X var
R32362:32362 Poly <> Y var
R32375:32375 Poly <> X var
R32383:32383 Poly <> Y var
R32388:32388 Poly <> Z var
R32393:32393 Poly <> f var
R32395:32395 Poly <> ::'('_x_','_x_')' not
R32397:32398 Poly <> ::'('_x_','_x_')' not
R32400:32400 Poly <> ::'('_x_','_x_')' not
R32396:32396 Poly <> x var
R32399:32399 Poly <> y var
def 32545:32556 Exercises prod_uncurry
R32590:32590 Poly <> Z var
R32585:32585 Poly <> Y var
R32580:32580 Poly <> X var
R32599:32601 Poly <> :type_scope:x_'*'_x not
R32598:32598 Poly <> X var
R32602:32602 Poly <> Y var
R32607:32607 Poly <> Z var
R32633:32637 Basics <> admit prfax
def 32777:32785 Exercises test_map2
R32819:32821 Coq.Init.Logic <> :type_scope:x_'='_x not
R32788:32790 Poly Exercises map def
R32812:32812 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32814:32814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32816:32816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32818:32818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32802:32805 Coq.Init.Peano <> plus def
R32809:32809 Poly <> x var
R32822:32822 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32824:32824 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32826:32826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32828:32828 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32998:33007 Poly Exercises prod_curry def
R33017:33028 Poly Exercises prod_uncurry def
prf 33040:33052 Exercises uncurry_curry
R33117:33117 Poly <> Z var
R33112:33112 Poly <> Y var
R33107:33107 Poly <> X var
R33182:33184 Coq.Init.Logic <> :type_scope:x_'='_x not
R33151:33160 Poly Exercises prod_curry def
R33181:33181 Poly <> y var
R33179:33179 Poly <> x var
R33163:33174 Poly Exercises prod_uncurry def
R33176:33176 Poly <> f var
R33185:33185 Poly <> f var
R33189:33189 Poly <> y var
R33187:33187 Poly <> x var
prf 33239:33251 Exercises curry_uncurry
R33317:33317 Poly <> Z var
R33308:33310 Poly <> :type_scope:x_'*'_x not
R33307:33307 Poly <> X var
R33311:33311 Poly <> Y var
R33326:33328 Poly <> :type_scope:x_'*'_x not
R33325:33325 Poly <> X var
R33329:33329 Poly <> Y var
R33364:33366 Coq.Init.Logic <> :type_scope:x_'='_x not
R33335:33346 Poly Exercises prod_uncurry def
R33363:33363 Poly <> p var
R33349:33358 Poly Exercises prod_curry def
R33360:33360 Poly <> f var
R33367:33367 Poly <> f var
R33369:33369 Poly <> p var
mod 34240:34245 <> Exercises.Church
def 34259:34261 Exercises.Church nat
R34300:34300 Poly <> X var
R34295:34295 Poly <> X var
R34289:34289 Poly <> X var
R34284:34284 Poly <> X var
def 34455:34457 Exercises.Church one
R34461:34463 Poly Exercises.Church nat def
R34495:34495 Poly <> X var
R34490:34490 Poly <> X var
R34503:34503 Poly <> X var
R34509:34509 Poly <> f var
R34511:34511 Poly <> x var
def 34591:34593 Exercises.Church two
R34597:34599 Poly Exercises.Church nat def
R34631:34631 Poly <> X var
R34626:34626 Poly <> X var
R34639:34639 Poly <> X var
R34645:34645 Poly <> f var
R34648:34648 Poly <> f var
R34650:34650 Poly <> x var
def 34829:34832 Exercises.Church zero
R34836:34838 Poly Exercises.Church nat def
R34870:34870 Poly <> X var
R34865:34865 Poly <> X var
R34878:34878 Poly <> X var
R34884:34884 Poly <> x var
def 35159:35163 Exercises.Church three
R35167:35169 Poly Exercises.Church nat def
R35175:35184 Poly Exercises.Church doit3times def
def 35392:35395 Exercises.Church succ
R35402:35404 Poly Exercises.Church nat def
R35409:35411 Poly Exercises.Church nat def
R35437:35441 Basics <> admit prfax
def 35453:35458 Exercises.Church succ_1
R35471:35473 Coq.Init.Logic <> :type_scope:x_'='_x not
R35462:35465 Poly Exercises.Church succ def
R35467:35470 Poly Exercises.Church zero def
R35474:35476 Poly Exercises.Church one def
def 35524:35529 Exercises.Church succ_2
R35541:35543 Coq.Init.Logic <> :type_scope:x_'='_x not
R35533:35536 Poly Exercises.Church succ def
R35538:35540 Poly Exercises.Church one def
R35544:35546 Poly Exercises.Church two def
def 35594:35599 Exercises.Church succ_3
R35611:35613 Coq.Init.Logic <> :type_scope:x_'='_x not
R35603:35606 Poly Exercises.Church succ def
R35608:35610 Poly Exercises.Church two def
R35614:35618 Poly Exercises.Church three def
def 35710:35713 Exercises.Church plus
R35722:35724 Poly Exercises.Church nat def
R35729:35731 Poly Exercises.Church nat def
R35757:35761 Basics <> admit prfax
def 35773:35778 Exercises.Church plus_1
R35795:35797 Coq.Init.Logic <> :type_scope:x_'='_x not
R35782:35785 Poly Exercises.Church plus def
R35792:35794 Poly Exercises.Church one def
R35787:35790 Poly Exercises.Church zero def
R35798:35800 Poly Exercises.Church one def
def 35848:35853 Exercises.Church plus_2
R35871:35873 Coq.Init.Logic <> :type_scope:x_'='_x not
R35857:35860 Poly Exercises.Church plus def
R35866:35870 Poly Exercises.Church three def
R35862:35864 Poly Exercises.Church two def
R35874:35877 Poly Exercises.Church plus def
R35885:35887 Poly Exercises.Church two def
R35879:35883 Poly Exercises.Church three def
def 35935:35940 Exercises.Church plus_3
R35971:35973 Coq.Init.Logic <> :type_scope:x_'='_x not
R35946:35949 Poly Exercises.Church plus def
R35966:35970 Poly Exercises.Church three def
R35952:35955 Poly Exercises.Church plus def
R35961:35963 Poly Exercises.Church two def
R35957:35959 Poly Exercises.Church two def
R35974:35977 Poly Exercises.Church plus def
R35984:35987 Poly Exercises.Church plus def
R35995:35999 Poly Exercises.Church three def
R35989:35993 Poly Exercises.Church three def
R35979:35981 Poly Exercises.Church one def
def 36075:36078 Exercises.Church mult
R36087:36089 Poly Exercises.Church nat def
R36094:36096 Poly Exercises.Church nat def
R36122:36126 Basics <> admit prfax
def 36138:36143 Exercises.Church mult_1
R36159:36161 Coq.Init.Logic <> :type_scope:x_'='_x not
R36147:36150 Poly Exercises.Church mult def
R36156:36158 Poly Exercises.Church one def
R36152:36154 Poly Exercises.Church one def
R36162:36164 Poly Exercises.Church one def
def 36212:36217 Exercises.Church mult_2
R36249:36251 Coq.Init.Logic <> :type_scope:x_'='_x not
R36221:36224 Poly Exercises.Church mult def
R36232:36235 Poly Exercises.Church plus def
R36243:36247 Poly Exercises.Church three def
R36237:36241 Poly Exercises.Church three def
R36226:36229 Poly Exercises.Church zero def
R36252:36255 Poly Exercises.Church zero def
def 36303:36308 Exercises.Church mult_3
R36326:36328 Coq.Init.Logic <> :type_scope:x_'='_x not
R36312:36315 Poly Exercises.Church mult def
R36321:36325 Poly Exercises.Church three def
R36317:36319 Poly Exercises.Church two def
R36329:36332 Poly Exercises.Church plus def
R36340:36344 Poly Exercises.Church three def
R36334:36338 Poly Exercises.Church three def
def 36674:36676 Exercises.Church exp
R36685:36687 Poly Exercises.Church nat def
R36692:36694 Poly Exercises.Church nat def
R36720:36724 Basics <> admit prfax
def 36736:36740 Exercises.Church exp_1
R36755:36757 Coq.Init.Logic <> :type_scope:x_'='_x not
R36744:36746 Poly Exercises.Church exp def
R36752:36754 Poly Exercises.Church two def
R36748:36750 Poly Exercises.Church two def
R36758:36761 Poly Exercises.Church plus def
R36767:36769 Poly Exercises.Church two def
R36763:36765 Poly Exercises.Church two def
def 36817:36821 Exercises.Church exp_2
R36838:36840 Coq.Init.Logic <> :type_scope:x_'='_x not
R36825:36827 Poly Exercises.Church exp def
R36835:36837 Poly Exercises.Church two def
R36829:36833 Poly Exercises.Church three def
R36841:36844 Poly Exercises.Church plus def
R36872:36874 Poly Exercises.Church one def
R36847:36850 Poly Exercises.Church mult def
R36857:36860 Poly Exercises.Church mult def
R36866:36868 Poly Exercises.Church two def
R36862:36864 Poly Exercises.Church two def
R36852:36854 Poly Exercises.Church two def
def 36922:36926 Exercises.Church exp_3
R36944:36946 Coq.Init.Logic <> :type_scope:x_'='_x not
R36930:36932 Poly Exercises.Church exp def
R36940:36943 Poly Exercises.Church zero def
R36934:36938 Poly Exercises.Church three def
R36947:36949 Poly Exercises.Church one def
R36993:36998 Poly Church <> mod
R37016:37024 Poly <> <> mod
